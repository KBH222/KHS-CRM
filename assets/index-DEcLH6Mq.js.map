{"version":3,"mappings":"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","names":["m","require$$0","client","instanceOfAny","object","constructors","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","getCursorAdvanceMethods","transactionDoneMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","resolve","reject","unlisten","success","error","wrap","cacheDonePromiseForTransaction","tx","done","complete","idbProxyTraps","target","prop","receiver","value","replaceTraps","callback","wrapFunction","func","args","unwrap","transformCachableValue","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","openPromise","event","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","method","storeName","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","proxiedCursor","isIteratorProp","CACHE_CONFIG","OfflineDatabase","__publicField","oldVersion","newVersion","transaction","customerStore","jobStore","materialStore","store","syncStore","userStore","entity","data","jsonString","stream","writer","reader","chunks","result","compressed","acc","chunk","offset","compressedData","char","decompressed","now","expiredEntries","entry","filters","customers","searchLower","_a","b","id","customer","existing","versionedCustomer","jobs","statuses","j","a","job","versionedJob","jobId","material","versionedMaterial","materials","versionedMaterials","operation","priority","enhancedOperation","status","op","metadata","time","fromServer","versionedCustomers","versionedJobs","syncQueue","unsynced","lastSync","unsyncedCustomers","unsyncedJobs","unsyncedMaterials","entityType","key","cached","ttlMs","compress","processedData","user","versionedUser","offlineDb","API_BASE_URL","STORAGE_KEYS","ERROR_CODES","ApiClient","axios","config","token","response","_b","originalRequest","_c","newToken","refreshError","useAuthStore","_e","_d","refreshToken","accessToken","newRefreshToken","url","apiClient","API_ENDPOINTS","OfflineAuthService","array","password","salt","iterations","encoder","passwordBuffer","saltBuffer","baseKey","iv","encrypted","encryptedArray","combined","encryptedPassword","decrypted","inputPassword","credentials","userId","challenge","credential","biometricData","encryptedCredentials","session","authData","email","enableBiometric","tokens","offlineAuthService","OfflineDataService","cacheKey","dbCached","jobWithDetails","dbStats","oneWeekAgo","stats","query","limit","allMaterials","hours","since","sinceTimestamp","allCustomers","allJobs","patterns","pattern","ttl","oldestKey","memorySize","offlineDataService","MOCK_USERS","create","set","get","mockUser","userWithoutPassword","enabled","currentUser","useAuth","isAuthenticated","login","logout","biometricLogin","disableBiometric","isBiometricEnabled","useUser","state","useIsOwner","useBiometric","MenuIcon","jsx","AppLayout","navigate","useNavigate","showMenu","setShowMenu","useState","setIsBiometricEnabled","useEffect","handleLogout","handleToggleBiometric","jsxs","Outlet","AuthLayout","Login","lazy","Dashboard","Customers","CustomerDetail","Jobs","JobDetail","Profile","Materials","Workers","ScheduleCalendar","JobPhotos","Reports","Invoices","InvoiceDetail","OfflineDataDashboard","PracticalSecurity","SyncDebug","PageLoader","ProtectedRoute","children","Router","Suspense","Routes","Route","Navigate","online","syncing","count","SYNC_CONFIG","SyncService","timeout","pushResult","pullResult","syncError","operations","entityId","payload","conflict","hasConflict","created","updated","params","serverData","clientData","merged","serverModified","resolvedData","localData","localModified","opWithAttempts","maxRetries","retryDelay","retryError","failedOps","entityPriority","finalPriority","pendingOps","inProgressOps","nextRetryTime","operationId","retryTime","syncService","OfflineCacheService","photoStore","notesStore","criticalJobStatuses","today","jobPriority","jobDate","cachedJob","priorityOrder","aPriority","bPriority","_metadata","cachedMaterial","onlyNeeded","photoData","filename","photoId","cachedPhoto","photo","syncOperation","retryCount","lastAttempt","stores","usage","maxPhotoStorage","photos","toRemove","offlineCacheService","BackgroundSyncService","registration","connection","handleConnectionChange","effectiveType","downlink","rtt","prioritizedStrategies","strategy","newInterval","jobOps","prioritized","aNeeded","pendingPhotos","remaining","jobStatusOps","purchaseOps","contactOps","assignmentOps","strategies","tag","options","newConfig","backgroundSyncService","initializeServices","usePWA","isInstallable","setIsInstallable","isPWA","setIsPWA","deferredPrompt","setDeferredPrompt","capabilities","setCapabilities","isInitialized","setIsInitialized","pwaCaps","checkPWACapabilities","checkPWA","isStandalone","isInWebAppiOS","isMinimalUI","handleBeforeInstallPrompt","e","handleAppInstalled","initializePostInstall","mediaQuery","getDeviceType","getConnectionType","userAgent","setupPushNotifications","preloadCriticalData","subscription","define_process_env_default","outcome","deviceType","FIELD_BENEFITS","PWAInstallBanner","install","isDismissed","setIsDismissed","isInstalling","setIsInstalling","showDetailed","setShowDetailed","setDeviceType","dismissed","dismissedTime","sevenDaysAgo","isMobile","handleInstall","handleDismiss","handleShowDetails","benefit","index","useRegisterSW","needRefresh","setNeedRefresh","offlineReady","setOfflineReady","setRegistration","immediate","onNeedRefresh","onOfflineReady","onRegistered","onRegisterError","r","newWorker","reloadPage","UPDATE_FEATURES","PWAUpdateNotification","showNotification","setShowNotification","isUpdating","setIsUpdating","updateInfo","setUpdateInfo","updateServiceWorker","handleUpdate","handleLater","remindTime","feature","useOnlineStatus","isOnline","setIsOnline","handleOnline","handleOffline","OfflineIndicator","showReconnected","setShowReconnected","wasOffline","setWasOffline","timer","PWAContext","createContext","usePWAContext","context","useContext","PWAProvider","pwa","isServiceWorkerRegistered","setIsServiceWorkerRegistered","timeoutId","contextValue","ConstructionPWAFeatures","triggerSync","intervalId","DataClassification","redactSensitiveData","classification","redacted","sensitiveFields","field","ALGORITHM","KEY_LENGTH","IV_LENGTH","SALT_LENGTH","EncryptionService","plaintext","encodedData","encryptedData","decryptedData","passwordData","keyMaterial","storedSalt","testData","encryptionService","needsEncryption","secureCompare","i","AUDIT_LOG_KEY","MAX_LOG_ENTRIES","AuditService","action","dataType","details","logs","stored","startDate","endDate","start","end","entryTime","byAction","byDataType","recentFailures","auditService","AUTH_KEY","SESSION_KEY","MAX_LOGIN_ATTEMPTS","LOCKOUT_DURATION","AuthService","saltStr","remainingTime","hash","currentPassword","newPassword","confirmPhrase","saltData","derivedBits","hashArray","authService","AuthSetup","onComplete","setPassword","confirmPassword","setConfirmPassword","setError","isLoading","setIsLoading","showPassword","setShowPassword","handleSetup","hasUpperCase","hasLowerCase","hasNumbers","LoginForm","handleLogin","handleKeyPress","t","f","n","o","clsx","Mt","L","N","P","mt","B","pt","z","$t","Z","s","$","d","T","g","v","x","C","S","E","zt","Bt","p","Rt","ut","J","tt","Ut","Ft","yt","ot","gt","l","Tt","et","Xt","at","_t","u","h","_","k","M","A","D","Y","R","I","F","st","Vt","bt","Qt","nt","vt","X","ht","Ct","xt","rt","Et","Pt","Wt","U","V","Q","y","Gt","qt","It","Kt","Yt","At","kt","St","Zt","Ot","to","Jt","G","O","ao","so","no","ro","io","W","lo","Nt","eo","oo","wt","it","ft","dt","H","fo","co","q","K","lt","_o","Lt","go","To","Dt","yo","ct","SimpleSyncService","saved","synced","failed","queue","simpleSyncService","queryClient","QueryClient","failureCount","attemptIndex","App","needsAuthSetup","setNeedsAuthSetup","needsLogin","setNeedsLogin","QueryClientProvider","BrowserRouter","ToastContainer","ReactDOM","React"],"ignoreList":[0,1,28,29],"sources":["../../../node_modules/react-dom/client.js","../../../node_modules/idb/build/index.js","../../src/services/db.service.ts","../../src/services/api.service.ts","../../src/services/offline-auth.service.ts","../../src/services/offline-data.service.ts","../../src/stores/auth.store.simple.ts","../../src/layouts/AppLayout.tsx","../../src/layouts/AuthLayout.tsx","../../src/router/index.tsx","../../src/stores/sync.store.ts","../../src/services/sync.service.ts","../../src/services/offline-cache.service.ts","../../src/services/background-sync.service.ts","../../src/services/index.ts","../../src/hooks/usePWA.ts","../../src/components/PWAInstallBanner.tsx","../../src/hooks/usePWARegister.ts","../../src/components/PWAUpdateNotification.tsx","../../src/hooks/useOnlineStatus.ts","../../src/components/OfflineIndicator.tsx","../../src/components/PWAProvider.tsx","../../src/types/security.ts","../../src/services/encryptionService.ts","../../src/services/auditService.ts","../../src/services/authService.ts","../../src/components/AuthSetup.tsx","../../src/components/LoginForm.tsx","../../../node_modules/clsx/dist/clsx.mjs","../../../node_modules/react-toastify/dist/index.mjs","../../src/services/sync.service.simple.ts","../../src/services/init.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { openDB, DBSchema, IDBPDatabase } from 'idb';\n// Inline type definitions\ninterface Customer {\n  id: string;\n  name: string;\n  email?: string;\n  phone?: string;\n  address: string;\n  isArchived?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface Job {\n  id: string;\n  customerId: string;\n  title: string;\n  description?: string;\n  status: 'pending' | 'in_progress' | 'completed' | 'cancelled';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  scheduledDate?: string;\n  completedDate?: string;\n  estimatedHours?: number;\n  actualHours?: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface Material {\n  id: string;\n  name: string;\n  description?: string;\n  unit: string;\n  cost: number;\n  supplier?: string;\n  isArchived?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface SyncOperation {\n  id: string;\n  operation: 'create' | 'update' | 'delete';\n  entityType: 'customer' | 'job' | 'material' | 'user';\n  entityId?: string;\n  payload: any;\n  timestamp: string;\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  attempts: number;\n  lastAttemptAt?: string;\n  errorMessage?: string;\n}\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'admin' | 'manager' | 'worker';\n  isActive: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// Inline constants\nconst CACHE_CONFIG = {\n  MAX_AGE: 24 * 60 * 60 * 1000, // 24 hours\n  MAX_ENTRIES: 1000,\n  CLEANUP_INTERVAL: 60 * 60 * 1000, // 1 hour\n  MEMORY_LIMIT: 50 * 1024 * 1024 // 50MB\n};\n\ninterface KhsDB extends DBSchema {\n  customers: {\n    key: string;\n    value: Customer & { _version: number; _lastModified: number; _synced: boolean };\n    indexes: {\n      'by-name': string;\n      'by-phone': string;\n      'by-archived': number;\n      'by-modified': number;\n      'by-synced': number;\n    };\n  };\n  jobs: {\n    key: string;\n    value: Job & { _version: number; _lastModified: number; _synced: boolean };\n    indexes: {\n      'by-status': string;\n      'by-customer': string;\n      'by-created': Date;\n      'by-modified': number;\n      'by-synced': number;\n    };\n  };\n  materials: {\n    key: string;\n    value: Material & { _version: number; _lastModified: number; _synced: boolean };\n    indexes: {\n      'by-job': string;\n      'by-purchased': number;\n      'by-modified': number;\n      'by-synced': number;\n    };\n  };\n  users: {\n    key: string;\n    value: User & { _version: number; _lastModified: number; _synced: boolean };\n    indexes: {\n      'by-role': string;\n      'by-active': number;\n      'by-modified': number;\n    };\n  };\n  auth: {\n    key: string;\n    value: {\n      id: string;\n      encryptedCredentials: string;\n      biometricEnabled: boolean;\n      lastLoginAt: number;\n      rememberMe: boolean;\n      _version: number;\n    };\n  };\n  syncQueue: {\n    key: string;\n    value: SyncOperation & {\n      _priority: number;\n      _attempts: number;\n      _lastAttempt?: number;\n      _status: 'pending' | 'processing' | 'failed' | 'completed';\n    };\n    indexes: {\n      'by-timestamp': Date;\n      'by-priority': number;\n      'by-status': string;\n      'by-entity': string;\n    };\n  };\n  metadata: {\n    key: string;\n    value: any;\n  };\n  cache: {\n    key: string;\n    value: {\n      data: any;\n      expiresAt: number;\n      compressed: boolean;\n    };\n    indexes: {\n      'by-expires': number;\n    };\n  };\n}\n\ninterface DatabaseMigration {\n  version: number;\n  upgrade: (db: IDBPDatabase<KhsDB>, transaction: IDBTransaction) => Promise<void>;\n}\n\nclass OfflineDatabase {\n  private db: IDBPDatabase<KhsDB> | null = null;\n  private readonly DB_NAME = 'khs-crm-offline';\n  private readonly DB_VERSION = 3; // Increased for enhanced schema\n  private readonly migrations: DatabaseMigration[] = [];\n\n  async initialize(): Promise<void> {\n    if (this.db) {\n      return;\n    }\n\n    this.db = await openDB<KhsDB>(this.DB_NAME, this.DB_VERSION, {\n      upgrade: (db, oldVersion, newVersion, transaction) => {\n        this.performMigrations(db, oldVersion, newVersion, transaction);\n      },\n    });\n\n    // Clean up expired cache entries\n    await this.cleanupExpiredCache();\n  }\n\n  private performMigrations(\n    db: IDBPDatabase<KhsDB>,\n    oldVersion: number,\n    newVersion: number,\n    transaction: IDBTransaction\n  ): void {\n    // Version 1: Initial schema\n    if (oldVersion < 1) {\n      this.createInitialSchema(db);\n    }\n\n    // Version 2: Add versioning and sync tracking\n    if (oldVersion < 2) {\n      this.addVersioningSupport(db, transaction);\n    }\n\n    // Version 3: Add enhanced offline features\n    if (oldVersion < 3) {\n      this.addEnhancedOfflineFeatures(db, transaction);\n    }\n  }\n\n  private createInitialSchema(db: IDBPDatabase<KhsDB>): void {\n    // Customers store\n    if (!db.objectStoreNames.contains('customers')) {\n      const customerStore = db.createObjectStore('customers', { keyPath: 'id' });\n      customerStore.createIndex('by-name', 'name');\n      customerStore.createIndex('by-phone', 'phone');\n      customerStore.createIndex('by-archived', 'isArchived');\n    }\n\n    // Jobs store\n    if (!db.objectStoreNames.contains('jobs')) {\n      const jobStore = db.createObjectStore('jobs', { keyPath: 'id' });\n      jobStore.createIndex('by-status', 'status');\n      jobStore.createIndex('by-customer', 'customerId');\n      jobStore.createIndex('by-created', 'createdAt');\n    }\n\n    // Materials store\n    if (!db.objectStoreNames.contains('materials')) {\n      const materialStore = db.createObjectStore('materials', { keyPath: 'id' });\n      materialStore.createIndex('by-job', 'jobId');\n      materialStore.createIndex('by-purchased', 'purchased');\n    }\n\n    // Sync queue store\n    if (!db.objectStoreNames.contains('syncQueue')) {\n      const syncStore = db.createObjectStore('syncQueue', { keyPath: 'id' });\n      syncStore.createIndex('by-timestamp', 'timestamp');\n    }\n\n    // Metadata store\n    if (!db.objectStoreNames.contains('metadata')) {\n      db.createObjectStore('metadata', { keyPath: 'key' });\n    }\n  }\n\n  private addVersioningSupport(db: IDBPDatabase<KhsDB>, transaction: IDBTransaction): void {\n    // Add versioning indexes to existing stores\n    ['customers', 'jobs', 'materials'].forEach(storeName => {\n      if (db.objectStoreNames.contains(storeName)) {\n        const store = transaction.objectStore(storeName);\n        if (!store.indexNames.contains('by-modified')) {\n          store.createIndex('by-modified', '_lastModified');\n        }\n        if (!store.indexNames.contains('by-synced')) {\n          store.createIndex('by-synced', '_synced');\n        }\n      }\n    });\n\n    // Add priority and status indexes to sync queue\n    if (db.objectStoreNames.contains('syncQueue')) {\n      const syncStore = transaction.objectStore('syncQueue');\n      if (!syncStore.indexNames.contains('by-priority')) {\n        syncStore.createIndex('by-priority', '_priority');\n      }\n      if (!syncStore.indexNames.contains('by-status')) {\n        syncStore.createIndex('by-status', '_status');\n      }\n      if (!syncStore.indexNames.contains('by-entity')) {\n        syncStore.createIndex('by-entity', 'entityType');\n      }\n    }\n  }\n\n  private addEnhancedOfflineFeatures(db: IDBPDatabase<KhsDB>, transaction: IDBTransaction): void {\n    // Users store\n    if (!db.objectStoreNames.contains('users')) {\n      const userStore = db.createObjectStore('users', { keyPath: 'id' });\n      userStore.createIndex('by-role', 'role');\n      userStore.createIndex('by-active', 'isActive');\n      userStore.createIndex('by-modified', '_lastModified');\n    }\n\n    // Auth store for offline authentication\n    if (!db.objectStoreNames.contains('auth')) {\n      db.createObjectStore('auth', { keyPath: 'id' });\n    }\n\n    // Cache store for API responses\n    if (!db.objectStoreNames.contains('cache')) {\n      const cacheStore = db.createObjectStore('cache', { keyPath: 'key' });\n      cacheStore.createIndex('by-expires', 'expiresAt');\n    }\n  }\n\n  private async ensureDb(): Promise<IDBPDatabase<KhsDB>> {\n    if (!this.db) {\n      await this.initialize();\n    }\n    return this.db!;\n  }\n\n  // Enhanced helper methods\n  private addVersioning<T>(entity: T): T & { _version: number; _lastModified: number; _synced: boolean } {\n    return {\n      ...entity,\n      _version: 1,\n      _lastModified: Date.now(),\n      _synced: false,\n    };\n  }\n\n  private updateVersioning<T extends { _version: number }>(entity: T): T {\n    return {\n      ...entity,\n      _version: entity._version + 1,\n      _lastModified: Date.now(),\n      _synced: false,\n    };\n  }\n\n  private async compressData(data: any): Promise<string> {\n    // Simple JSON compression using built-in compression if available\n    const jsonString = JSON.stringify(data);\n    if ('CompressionStream' in window) {\n      const stream = new CompressionStream('gzip');\n      const writer = stream.writable.getWriter();\n      const reader = stream.readable.getReader();\n      \n      writer.write(new TextEncoder().encode(jsonString));\n      writer.close();\n      \n      const chunks: Uint8Array[] = [];\n      let result = await reader.read();\n      while (!result.done) {\n        chunks.push(result.value);\n        result = await reader.read();\n      }\n      \n      const compressed = new Uint8Array(chunks.reduce((acc, chunk) => acc + chunk.length, 0));\n      let offset = 0;\n      for (const chunk of chunks) {\n        compressed.set(chunk, offset);\n        offset += chunk.length;\n      }\n      \n      return btoa(String.fromCharCode(...compressed));\n    }\n    return jsonString;\n  }\n\n  private async decompressData(compressedData: string): Promise<any> {\n    if ('DecompressionStream' in window && compressedData.length > 0 && compressedData[0] !== '{') {\n      try {\n        const compressed = new Uint8Array(atob(compressedData).split('').map(char => char.charCodeAt(0)));\n        const stream = new DecompressionStream('gzip');\n        const writer = stream.writable.getWriter();\n        const reader = stream.readable.getReader();\n        \n        writer.write(compressed);\n        writer.close();\n        \n        const chunks: Uint8Array[] = [];\n        let result = await reader.read();\n        while (!result.done) {\n          chunks.push(result.value);\n          result = await reader.read();\n        }\n        \n        const decompressed = new Uint8Array(chunks.reduce((acc, chunk) => acc + chunk.length, 0));\n        let offset = 0;\n        for (const chunk of chunks) {\n          decompressed.set(chunk, offset);\n          offset += chunk.length;\n        }\n        \n        const jsonString = new TextDecoder().decode(decompressed);\n        return JSON.parse(jsonString);\n      } catch (error) {\n        console.warn('Failed to decompress data, falling back to raw data:', error);\n      }\n    }\n    return JSON.parse(compressedData);\n  }\n\n  private async cleanupExpiredCache(): Promise<void> {\n    const db = await this.ensureDb();\n    const now = Date.now();\n    const expiredEntries = await db.getAllFromIndex('cache', 'by-expires', IDBKeyRange.upperBound(now));\n    \n    const tx = db.transaction('cache', 'readwrite');\n    await Promise.all(expiredEntries.map(entry => tx.store.delete(entry.key)));\n    await tx.done;\n  }\n\n  // Customer operations with versioning\n  async getCustomers(filters?: { search?: string; isArchived?: boolean }): Promise<Customer[]> {\n    const db = await this.ensureDb();\n    let customers = await db.getAll('customers');\n\n    if (filters?.isArchived !== undefined) {\n      customers = customers.filter(c => c.isArchived === filters.isArchived);\n    }\n\n    if (filters?.search) {\n      const searchLower = filters.search.toLowerCase();\n      customers = customers.filter(c => \n        c.name.toLowerCase().includes(searchLower) ||\n        c.phone?.toLowerCase().includes(searchLower) ||\n        c.address.toLowerCase().includes(searchLower),\n      );\n    }\n\n    return customers.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  async getCustomer(id: string): Promise<Customer | undefined> {\n    const db = await this.ensureDb();\n    return db.get('customers', id);\n  }\n\n  async saveCustomer(customer: Customer): Promise<void> {\n    const db = await this.ensureDb();\n    const existing = await db.get('customers', customer.id);\n    const versionedCustomer = existing \n      ? this.updateVersioning({ ...customer, _version: existing._version, _lastModified: existing._lastModified, _synced: existing._synced })\n      : this.addVersioning(customer);\n    \n    await db.put('customers', versionedCustomer);\n  }\n\n  async deleteCustomer(id: string): Promise<void> {\n    const db = await this.ensureDb();\n    await db.delete('customers', id);\n  }\n\n  // Job operations\n  async getJobs(filters?: { \n    status?: string | string[]; \n    customerId?: string; \n    assignedUserId?: string;\n  }): Promise<Job[]> {\n    const db = await this.ensureDb();\n    let jobs = await db.getAll('jobs');\n\n    if (filters?.status) {\n      const statuses = Array.isArray(filters.status) ? filters.status : [filters.status];\n      jobs = jobs.filter(j => statuses.includes(j.status));\n    }\n\n    if (filters?.customerId) {\n      jobs = jobs.filter(j => j.customerId === filters.customerId);\n    }\n\n    if (filters?.assignedUserId) {\n      jobs = jobs.filter(j => \n        j.assignments?.some(a => a.userId === filters.assignedUserId),\n      );\n    }\n\n    return jobs.sort((a, b) => \n      new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime(),\n    );\n  }\n\n  async getJob(id: string): Promise<Job | undefined> {\n    const db = await this.ensureDb();\n    return db.get('jobs', id);\n  }\n\n  async saveJob(job: Job): Promise<void> {\n    const db = await this.ensureDb();\n    const existing = await db.get('jobs', job.id);\n    const versionedJob = existing \n      ? this.updateVersioning({ ...job, _version: existing._version, _lastModified: existing._lastModified, _synced: existing._synced })\n      : this.addVersioning(job);\n    \n    await db.put('jobs', versionedJob);\n  }\n\n  async deleteJob(id: string): Promise<void> {\n    const db = await this.ensureDb();\n    await db.delete('jobs', id);\n  }\n\n  // Material operations\n  async getMaterials(jobId: string): Promise<Material[]> {\n    const db = await this.ensureDb();\n    const materials = await db.getAllFromIndex('materials', 'by-job', jobId);\n    return materials\n      .filter(m => !m.isDeleted)\n      .sort((a, b) => {\n        if (a.purchased !== b.purchased) {\n          return a.purchased ? 1 : -1; // Unpurchased first\n        }\n        return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n      });\n  }\n\n  async saveMaterial(material: Material): Promise<void> {\n    const db = await this.ensureDb();\n    const existing = await db.get('materials', material.id);\n    const versionedMaterial = existing \n      ? this.updateVersioning({ ...material, _version: existing._version, _lastModified: existing._lastModified, _synced: existing._synced })\n      : this.addVersioning(material);\n    \n    await db.put('materials', versionedMaterial);\n  }\n\n  async saveMaterials(materials: Material[]): Promise<void> {\n    const db = await this.ensureDb();\n    const tx = db.transaction('materials', 'readwrite');\n    \n    const versionedMaterials = await Promise.all(\n      materials.map(async m => {\n        const existing = await tx.store.get(m.id);\n        return existing \n          ? this.updateVersioning({ ...m, _version: existing._version, _lastModified: existing._lastModified, _synced: existing._synced })\n          : this.addVersioning(m);\n      })\n    );\n    \n    await Promise.all(versionedMaterials.map(m => tx.store.put(m)));\n    await tx.done;\n  }\n\n  // Enhanced sync queue operations\n  async addToSyncQueue(\n    operation: Omit<SyncOperation, 'id'>, \n    priority: number = 5\n  ): Promise<string> {\n    const db = await this.ensureDb();\n    const id = `sync_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const enhancedOperation = {\n      ...operation,\n      id,\n      _priority: priority,\n      _attempts: 0,\n      _status: 'pending' as const,\n    };\n    await db.add('syncQueue', enhancedOperation);\n    return id;\n  }\n\n  async updateSyncOperationStatus(\n    id: string,\n    status: 'pending' | 'processing' | 'failed' | 'completed',\n    error?: string\n  ): Promise<void> {\n    const db = await this.ensureDb();\n    const operation = await db.get('syncQueue', id);\n    if (operation) {\n      operation._status = status;\n      operation._lastAttempt = Date.now();\n      if (status === 'failed') {\n        operation._attempts += 1;\n      }\n      await db.put('syncQueue', operation);\n    }\n  }\n\n  async getFailedSyncOperations(): Promise<SyncOperation[]> {\n    const db = await this.ensureDb();\n    return db.getAllFromIndex('syncQueue', 'by-status', 'failed');\n  }\n\n  async getPendingSyncOperations(): Promise<SyncOperation[]> {\n    const db = await this.ensureDb();\n    const pending = await db.getAllFromIndex('syncQueue', 'by-status', 'pending');\n    return pending.sort((a, b) => (b as any)._priority - (a as any)._priority);\n  }\n\n  async getSyncQueue(): Promise<SyncOperation[]> {\n    const db = await this.ensureDb();\n    return db.getAllFromIndex('syncQueue', 'by-timestamp');\n  }\n\n  async getSyncQueueByPriority(): Promise<SyncOperation[]> {\n    const db = await this.ensureDb();\n    const operations = await db.getAll('syncQueue');\n    return operations\n      .filter(op => (op as any)._status === 'pending')\n      .sort((a, b) => (b as any)._priority - (a as any)._priority);\n  }\n\n  async removeSyncOperation(id: string): Promise<void> {\n    const db = await this.ensureDb();\n    await db.delete('syncQueue', id);\n  }\n\n  async clearSyncQueue(): Promise<void> {\n    const db = await this.ensureDb();\n    await db.clear('syncQueue');\n  }\n\n  // Metadata operations\n  async getLastSyncTime(): Promise<Date | null> {\n    const db = await this.ensureDb();\n    const metadata = await db.get('metadata', 'lastSync');\n    return metadata?.value ? new Date(metadata.value) : null;\n  }\n\n  async setLastSyncTime(time: Date): Promise<void> {\n    const db = await this.ensureDb();\n    await db.put('metadata', { key: 'lastSync', value: time.toISOString() });\n  }\n\n  // Bulk operations for initial sync with versioning\n  async bulkSaveCustomers(customers: Customer[], fromServer = false): Promise<void> {\n    const db = await this.ensureDb();\n    const tx = db.transaction('customers', 'readwrite');\n    \n    const versionedCustomers = customers.map(c => ({\n      ...this.addVersioning(c),\n      _synced: fromServer,\n    }));\n    \n    await Promise.all(versionedCustomers.map(c => tx.store.put(c)));\n    await tx.done;\n  }\n\n  async bulkSaveJobs(jobs: Job[], fromServer = false): Promise<void> {\n    const db = await this.ensureDb();\n    const tx = db.transaction('jobs', 'readwrite');\n    \n    const versionedJobs = jobs.map(j => ({\n      ...this.addVersioning(j),\n      _synced: fromServer,\n    }));\n    \n    await Promise.all(versionedJobs.map(j => tx.store.put(j)));\n    await tx.done;\n  }\n\n  async bulkSaveMaterials(materials: Material[], fromServer = false): Promise<void> {\n    const db = await this.ensureDb();\n    const tx = db.transaction('materials', 'readwrite');\n    \n    const versionedMaterials = materials.map(m => ({\n      ...this.addVersioning(m),\n      _synced: fromServer,\n    }));\n    \n    await Promise.all(versionedMaterials.map(m => tx.store.put(m)));\n    await tx.done;\n  }\n\n  // Clear all data\n  async clearAllData(): Promise<void> {\n    const db = await this.ensureDb();\n    await Promise.all([\n      db.clear('customers'),\n      db.clear('jobs'),\n      db.clear('materials'),\n      db.clear('syncQueue'),\n      db.clear('metadata'),\n    ]);\n  }\n\n  // Enhanced database management\n  async getDatabaseSize(): Promise<number> {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      const estimate = await navigator.storage.estimate();\n      return estimate.usage || 0;\n    }\n    return 0;\n  }\n\n  async getDatabaseStats(): Promise<{\n    size: number;\n    customers: number;\n    jobs: number;\n    materials: number;\n    pendingSync: number;\n    unsynced: number;\n    lastSync?: Date;\n  }> {\n    const db = await this.ensureDb();\n    \n    const [customers, jobs, materials, syncQueue] = await Promise.all([\n      db.count('customers'),\n      db.count('jobs'),\n      db.count('materials'),\n      db.count('syncQueue'),\n    ]);\n    \n    const unsynced = await this.getUnsyncedCount();\n    const lastSync = await this.getLastSyncTime();\n    const size = await this.getDatabaseSize();\n    \n    return {\n      size,\n      customers,\n      jobs,\n      materials,\n      pendingSync: syncQueue,\n      unsynced,\n      lastSync: lastSync || undefined,\n    };\n  }\n\n  async getUnsyncedCount(): Promise<number> {\n    const db = await this.ensureDb();\n    const [unsyncedCustomers, unsyncedJobs, unsyncedMaterials] = await Promise.all([\n      db.countFromIndex('customers', 'by-synced', 0),\n      db.countFromIndex('jobs', 'by-synced', 0),\n      db.countFromIndex('materials', 'by-synced', 0),\n    ]);\n    \n    return unsyncedCustomers + unsyncedJobs + unsyncedMaterials;\n  }\n\n  async getUnsyncedEntities(): Promise<{\n    customers: Customer[];\n    jobs: Job[];\n    materials: Material[];\n  }> {\n    const db = await this.ensureDb();\n    \n    const [customers, jobs, materials] = await Promise.all([\n      db.getAllFromIndex('customers', 'by-synced', 0),\n      db.getAllFromIndex('jobs', 'by-synced', 0),\n      db.getAllFromIndex('materials', 'by-synced', 0),\n    ]);\n    \n    return { customers, jobs, materials };\n  }\n\n  async markAsSynced(entityType: 'customer' | 'job' | 'material', id: string): Promise<void> {\n    const db = await this.ensureDb();\n    const storeMap = {\n      customer: 'customers',\n      job: 'jobs',\n      material: 'materials',\n    };\n    \n    const storeName = storeMap[entityType] as keyof KhsDB;\n    const entity = await db.get(storeName, id);\n    if (entity) {\n      (entity as any)._synced = true;\n      await db.put(storeName, entity);\n    }\n  }\n\n  // Cache operations\n  async getCachedData(key: string): Promise<any | null> {\n    const db = await this.ensureDb();\n    const cached = await db.get('cache', key);\n    \n    if (!cached || cached.expiresAt < Date.now()) {\n      if (cached) {\n        await db.delete('cache', key);\n      }\n      return null;\n    }\n    \n    return cached.compressed \n      ? await this.decompressData(cached.data)\n      : cached.data;\n  }\n\n  async setCachedData(\n    key: string, \n    data: any, \n    ttlMs: number = CACHE_CONFIG.MAX_CACHE_AGE,\n    compress = false\n  ): Promise<void> {\n    const db = await this.ensureDb();\n    const processedData = compress ? await this.compressData(data) : data;\n    \n    await db.put('cache', {\n      key,\n      data: processedData,\n      expiresAt: Date.now() + ttlMs,\n      compressed: compress,\n    });\n  }\n\n  async clearCache(): Promise<void> {\n    const db = await this.ensureDb();\n    await db.clear('cache');\n  }\n\n  // User operations\n  async saveUser(user: User): Promise<void> {\n    const db = await this.ensureDb();\n    const existing = await db.get('users', user.id);\n    const versionedUser = existing \n      ? this.updateVersioning({ ...user, _version: existing._version, _lastModified: existing._lastModified, _synced: existing._synced })\n      : this.addVersioning(user);\n    \n    await db.put('users', versionedUser);\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    const db = await this.ensureDb();\n    return db.get('users', id);\n  }\n\n  async getUsers(): Promise<User[]> {\n    const db = await this.ensureDb();\n    return db.getAll('users');\n  }\n}\n\nexport const offlineDb = new OfflineDatabase();\n\n// Auto-initialize on first import\nofflineDb.initialize().catch(error => {\n  console.error('Failed to initialize offline database:', error);\n});","import axios, { AxiosInstance, AxiosRequestConfig, AxiosError } from 'axios';\nimport { useAuthStore } from '@stores/auth.store';\n\n// Constants defined inline\nconst API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:3001';\nconst STORAGE_KEYS = {\n  AUTH_TOKEN: 'khs-crm-token',\n  REFRESH_TOKEN: 'khs-crm-refresh-token'\n};\nconst ERROR_CODES = {\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  INTERNAL_ERROR: 'INTERNAL_ERROR'\n};\n\n// Types defined inline\ninterface ApiError {\n  code: string;\n  message: string;\n  details?: any;\n}\ninterface AuthTokens {\n  token: string;\n  refreshToken: string;\n}\n\nclass ApiClient {\n  private client: AxiosInstance;\n  private refreshPromise: Promise<string> | null = null;\n\n  constructor() {\n    console.log('[ApiClient] Initializing with base URL:', API_BASE_URL);\n    \n    this.client = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 30000,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    this.setupInterceptors();\n  }\n\n  private setupInterceptors(): void {\n    // Request interceptor\n    this.client.interceptors.request.use(\n      (config) => {\n        console.log('[ApiClient] Request:', config.method?.toUpperCase(), config.url);\n        const token = localStorage.getItem(STORAGE_KEYS.AUTH_TOKEN);\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        console.error('[ApiClient] Request error:', error);\n        return Promise.reject(error);\n      },\n    );\n\n    // Response interceptor\n    this.client.interceptors.response.use(\n      (response) => {\n        console.log('[ApiClient] Response:', response.status, response.config.url);\n        return response.data;\n      },\n      async (error: AxiosError<{ error: ApiError }>) => {\n        console.error('[ApiClient] Response error:', error.response?.status, error.config?.url, error.message);\n        const originalRequest = error.config as AxiosRequestConfig & { _retry?: boolean };\n\n        // Handle token expiration\n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n\n          try {\n            const newToken = await this.refreshAccessToken();\n            if (newToken && originalRequest.headers) {\n              originalRequest.headers.Authorization = `Bearer ${newToken}`;\n              return this.client(originalRequest);\n            }\n          } catch (refreshError) {\n            // Refresh failed, logout user\n            useAuthStore.getState().logout();\n            window.location.href = '/login';\n            return Promise.reject(refreshError);\n          }\n        }\n\n        // Transform error to consistent format\n        if (error.response?.data?.error) {\n          return Promise.reject(error.response.data.error);\n        }\n\n        // Network error or timeout\n        if (!error.response) {\n          return Promise.reject({\n            code: ERROR_CODES.NETWORK_ERROR,\n            message: 'Network error. Please check your connection.',\n          });\n        }\n\n        // Generic error\n        return Promise.reject({\n          code: ERROR_CODES.INTERNAL_ERROR,\n          message: error.message || 'An unexpected error occurred',\n        });\n      },\n    );\n  }\n\n  private async refreshAccessToken(): Promise<string> {\n    // Prevent multiple refresh requests\n    if (this.refreshPromise) {\n      return this.refreshPromise;\n    }\n\n    this.refreshPromise = new Promise((resolve, reject) => {\n      (async () => {\n        try {\n          const refreshToken = localStorage.getItem(STORAGE_KEYS.REFRESH_TOKEN);\n          if (!refreshToken) {\n            throw new Error('No refresh token available');\n          }\n\n          const response = await axios.post<AuthTokens>(\n            `${API_BASE_URL}/api/auth/refresh`,\n            { refreshToken },\n          );\n\n          const { accessToken, refreshToken: newRefreshToken } = response.data;\n          \n          localStorage.setItem(STORAGE_KEYS.AUTH_TOKEN, accessToken);\n          localStorage.setItem(STORAGE_KEYS.REFRESH_TOKEN, newRefreshToken);\n          \n          resolve(accessToken);\n        } catch (error) {\n          reject(error);\n        } finally {\n          this.refreshPromise = null;\n        }\n      })();\n    });\n\n    return this.refreshPromise;\n  }\n\n  async get<T>(url: string, config?: AxiosRequestConfig): Promise<T> {\n    return this.client.get<T, T>(url, config);\n  }\n\n  async post<T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> {\n    return this.client.post<T, T>(url, data, config);\n  }\n\n  async put<T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> {\n    return this.client.put<T, T>(url, data, config);\n  }\n\n  async patch<T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> {\n    return this.client.patch<T, T>(url, data, config);\n  }\n\n  async delete<T>(url: string, config?: AxiosRequestConfig): Promise<T> {\n    return this.client.delete<T, T>(url, config);\n  }\n}\n\nexport const apiClient = new ApiClient();","// Inline type definitions\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'admin' | 'manager' | 'worker';\n  isActive: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface LoginRequest {\n  email: string;\n  password: string;\n  rememberMe?: boolean;\n}\n\ninterface AuthTokens {\n  accessToken: string;\n  refreshToken: string;\n  expiresAt: string;\n}\n\ntype Role = 'admin' | 'manager' | 'worker';\n\n// Inline constants\nconst STORAGE_KEYS = {\n  AUTH_TOKEN: 'khs-crm-token',\n  REFRESH_TOKEN: 'khs-crm-refresh-token',\n  USER_DATA: 'khs-crm-user',\n  OFFLINE_DATA: 'khs-crm-offline-data',\n  SYNC_QUEUE: 'khs-crm-sync-queue',\n  CACHE_MANIFEST: 'khs-crm-cache-manifest',\n  ENCRYPTION_KEY: 'khs-crm-encryption-key',\n  BIOMETRIC_ENABLED: 'khs-crm-biometric-enabled'\n};\n\nconst API_ENDPOINTS = {\n  CUSTOMERS: '/customers',\n  JOBS: '/jobs',\n  MATERIALS: '/materials',\n  USERS: '/users',\n  AUTH: '/auth',\n  SYNC: '/sync'\n};\nimport { offlineDb } from './db.service';\nimport { apiClient } from './api.service';\n\ninterface EncryptedCredentials {\n  email: string;\n  encryptedPassword: string;\n  salt: string;\n  iterations: number;\n}\n\ninterface BiometricAuthData {\n  challenge: string;\n  signature: string;\n  publicKey: string;\n}\n\ninterface OfflineSession {\n  user: User;\n  credentials: EncryptedCredentials;\n  biometricData?: BiometricAuthData;\n  expiresAt: number;\n  lastLoginAt: number;\n}\n\nclass OfflineAuthService {\n  private currentSession: OfflineSession | null = null;\n  private readonly SESSION_DURATION = 30 * 24 * 60 * 60 * 1000; // 30 days\n  private readonly ENCRYPTION_ITERATIONS = 100000;\n\n  /**\n   * Initialize the offline auth service\n   */\n  async initialize(): Promise<void> {\n    await this.loadStoredSession();\n  }\n\n  /**\n   * Generate a cryptographic salt\n   */\n  private generateSalt(): string {\n    const array = new Uint8Array(16);\n    crypto.getRandomValues(array);\n    return btoa(String.fromCharCode(...array));\n  }\n\n  /**\n   * Derive encryption key from password using PBKDF2\n   */\n  private async deriveKey(password: string, salt: string, iterations: number): Promise<CryptoKey> {\n    const encoder = new TextEncoder();\n    const passwordBuffer = encoder.encode(password);\n    const saltBuffer = encoder.encode(salt);\n\n    const baseKey = await crypto.subtle.importKey(\n      'raw',\n      passwordBuffer,\n      'PBKDF2',\n      false,\n      ['deriveKey']\n    );\n\n    return crypto.subtle.deriveKey(\n      {\n        name: 'PBKDF2',\n        salt: saltBuffer,\n        iterations,\n        hash: 'SHA-256',\n      },\n      baseKey,\n      { name: 'AES-GCM', length: 256 },\n      false,\n      ['encrypt', 'decrypt']\n    );\n  }\n\n  /**\n   * Encrypt password using AES-GCM\n   */\n  private async encryptPassword(password: string, salt: string): Promise<string> {\n    const key = await this.deriveKey(password, salt, this.ENCRYPTION_ITERATIONS);\n    const encoder = new TextEncoder();\n    const data = encoder.encode(password);\n    const iv = crypto.getRandomValues(new Uint8Array(12));\n\n    const encrypted = await crypto.subtle.encrypt(\n      { name: 'AES-GCM', iv },\n      key,\n      data\n    );\n\n    const encryptedArray = new Uint8Array(encrypted);\n    const combined = new Uint8Array(iv.length + encryptedArray.length);\n    combined.set(iv);\n    combined.set(encryptedArray, iv.length);\n\n    return btoa(String.fromCharCode(...combined));\n  }\n\n  /**\n   * Decrypt password using AES-GCM\n   */\n  private async decryptPassword(\n    encryptedPassword: string,\n    salt: string,\n    iterations: number\n  ): Promise<string> {\n    const key = await this.deriveKey('', salt, iterations);\n    const combined = new Uint8Array(\n      atob(encryptedPassword).split('').map(char => char.charCodeAt(0))\n    );\n\n    const iv = combined.slice(0, 12);\n    const encrypted = combined.slice(12);\n\n    try {\n      const decrypted = await crypto.subtle.decrypt(\n        { name: 'AES-GCM', iv },\n        key,\n        encrypted\n      );\n\n      const decoder = new TextDecoder();\n      return decoder.decode(decrypted);\n    } catch (error) {\n      throw new Error('Failed to decrypt password');\n    }\n  }\n\n  /**\n   * Verify password against stored encrypted credentials\n   */\n  private async verifyPassword(\n    inputPassword: string,\n    credentials: EncryptedCredentials\n  ): Promise<boolean> {\n    try {\n      const key = await this.deriveKey(inputPassword, credentials.salt, credentials.iterations);\n      const combined = new Uint8Array(\n        atob(credentials.encryptedPassword).split('').map(char => char.charCodeAt(0))\n      );\n\n      const iv = combined.slice(0, 12);\n      const encrypted = combined.slice(12);\n\n      const decrypted = await crypto.subtle.decrypt(\n        { name: 'AES-GCM', iv },\n        key,\n        encrypted\n      );\n\n      const decoder = new TextDecoder();\n      const decryptedPassword = decoder.decode(decrypted);\n      return decryptedPassword === inputPassword;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Check if biometric authentication is supported\n   */\n  async isBiometricSupported(): Promise<boolean> {\n    return !!(\n      'credentials' in navigator &&\n      'create' in navigator.credentials &&\n      'get' in navigator.credentials &&\n      window.PublicKeyCredential &&\n      window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable\n    );\n  }\n\n  /**\n   * Setup biometric authentication\n   */\n  async setupBiometric(userId: string): Promise<BiometricAuthData | null> {\n    if (!(await this.isBiometricSupported())) {\n      return null;\n    }\n\n    try {\n      const challenge = crypto.getRandomValues(new Uint8Array(32));\n      const credential = await navigator.credentials.create({\n        publicKey: {\n          challenge,\n          rp: {\n            name: 'KHS CRM',\n            id: window.location.hostname,\n          },\n          user: {\n            id: new TextEncoder().encode(userId),\n            name: `user-${userId}`,\n            displayName: 'KHS CRM User',\n          },\n          pubKeyCredParams: [\n            { alg: -7, type: 'public-key' }, // ES256\n            { alg: -257, type: 'public-key' }, // RS256\n          ],\n          authenticatorSelection: {\n            authenticatorAttachment: 'platform',\n            userVerification: 'required',\n          },\n          timeout: 60000,\n        },\n      }) as PublicKeyCredential;\n\n      if (!credential) {\n        return null;\n      }\n\n      return {\n        challenge: btoa(String.fromCharCode(...challenge)),\n        signature: btoa(String.fromCharCode(...new Uint8Array(credential.response.signature))),\n        publicKey: credential.id,\n      };\n    } catch (error) {\n      console.error('Biometric setup failed:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Authenticate using biometrics\n   */\n  async authenticateBiometric(biometricData: BiometricAuthData): Promise<boolean> {\n    if (!(await this.isBiometricSupported())) {\n      return false;\n    }\n\n    try {\n      const challenge = new Uint8Array(\n        atob(biometricData.challenge).split('').map(char => char.charCodeAt(0))\n      );\n\n      const credential = await navigator.credentials.get({\n        publicKey: {\n          challenge,\n          allowCredentials: [{\n            id: new TextEncoder().encode(biometricData.publicKey),\n            type: 'public-key',\n          }],\n          userVerification: 'required',\n          timeout: 60000,\n        },\n      }) as PublicKeyCredential;\n\n      return !!credential;\n    } catch (error) {\n      console.error('Biometric authentication failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Store credentials securely for offline use\n   */\n  private async storeOfflineCredentials(\n    user: User,\n    credentials: LoginRequest,\n    biometricData?: BiometricAuthData\n  ): Promise<void> {\n    const salt = this.generateSalt();\n    const encryptedPassword = await this.encryptPassword(credentials.password, salt);\n\n    const encryptedCredentials: EncryptedCredentials = {\n      email: credentials.email,\n      encryptedPassword,\n      salt,\n      iterations: this.ENCRYPTION_ITERATIONS,\n    };\n\n    const session: OfflineSession = {\n      user,\n      credentials: encryptedCredentials,\n      biometricData,\n      expiresAt: Date.now() + this.SESSION_DURATION,\n      lastLoginAt: Date.now(),\n    };\n\n    // Store in IndexedDB\n    await offlineDb.initialize();\n    const db = await (offlineDb as any).ensureDb();\n    await db.put('auth', {\n      id: 'current-session',\n      encryptedCredentials: JSON.stringify(encryptedCredentials),\n      biometricEnabled: !!biometricData,\n      lastLoginAt: session.lastLoginAt,\n      rememberMe: credentials.rememberMe || false,\n      _version: 1,\n    });\n\n    // Also store user data\n    await offlineDb.saveUser(user);\n    this.currentSession = session;\n  }\n\n  /**\n   * Load stored session from IndexedDB\n   */\n  private async loadStoredSession(): Promise<void> {\n    try {\n      await offlineDb.initialize();\n      const db = await (offlineDb as any).ensureDb();\n      const authData = await db.get('auth', 'current-session');\n\n      if (!authData) {\n        return;\n      }\n\n      // Check if session is expired (for remembered sessions)\n      if (!authData.rememberMe && Date.now() - authData.lastLoginAt > 24 * 60 * 60 * 1000) {\n        await this.clearStoredSession();\n        return;\n      }\n\n      const credentials: EncryptedCredentials = JSON.parse(authData.encryptedCredentials);\n      const user = await offlineDb.getUser(credentials.email) || await this.createGuestUser(credentials.email);\n\n      this.currentSession = {\n        user,\n        credentials,\n        biometricData: authData.biometricEnabled ? { \n          challenge: '', \n          signature: '', \n          publicKey: `biometric-${user.id}` \n        } : undefined,\n        expiresAt: Date.now() + this.SESSION_DURATION,\n        lastLoginAt: authData.lastLoginAt,\n      };\n    } catch (error) {\n      console.error('Failed to load stored session:', error);\n      await this.clearStoredSession();\n    }\n  }\n\n  /**\n   * Create a guest user for offline scenarios\n   */\n  private async createGuestUser(email: string): Promise<User> {\n    return {\n      id: `offline-${Date.now()}`,\n      email,\n      name: 'Offline User',\n      role: Role.WORKER,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n  }\n\n  /**\n   * Clear stored session data\n   */\n  private async clearStoredSession(): Promise<void> {\n    try {\n      await offlineDb.initialize();\n      const db = await (offlineDb as any).ensureDb();\n      await db.delete('auth', 'current-session');\n      this.currentSession = null;\n    } catch (error) {\n      console.error('Failed to clear stored session:', error);\n    }\n  }\n\n  /**\n   * Login with online/offline fallback\n   */\n  async login(credentials: LoginRequest, enableBiometric = false): Promise<User> {\n    try {\n      // Try online login first\n      if (navigator.onLine) {\n        const tokens = await apiClient.post<AuthTokens>(API_ENDPOINTS.LOGIN, credentials);\n        const user = await apiClient.get<User>(API_ENDPOINTS.ME);\n\n        // Store tokens in localStorage for API calls\n        localStorage.setItem(STORAGE_KEYS.AUTH_TOKEN, tokens.accessToken);\n        localStorage.setItem(STORAGE_KEYS.REFRESH_TOKEN, tokens.refreshToken);\n\n        // Setup biometric if requested\n        let biometricData: BiometricAuthData | undefined;\n        if (enableBiometric) {\n          biometricData = await this.setupBiometric(user.id) || undefined;\n        }\n\n        // Store credentials for offline use\n        await this.storeOfflineCredentials(user, credentials, biometricData);\n\n        return user;\n      }\n    } catch (error) {\n      console.warn('Online login failed, attempting offline login:', error);\n    }\n\n    // Fallback to offline login\n    return this.offlineLogin(credentials);\n  }\n\n  /**\n   * Offline login using stored credentials\n   */\n  async offlineLogin(credentials: LoginRequest): Promise<User> {\n    await this.loadStoredSession();\n\n    if (!this.currentSession) {\n      throw new Error('No stored credentials available for offline login');\n    }\n\n    // Verify credentials\n    if (this.currentSession.credentials.email !== credentials.email) {\n      throw new Error('Email does not match stored credentials');\n    }\n\n    const isValidPassword = await this.verifyPassword(\n      credentials.password,\n      this.currentSession.credentials\n    );\n\n    if (!isValidPassword) {\n      throw new Error('Invalid password');\n    }\n\n    // Update last login time\n    this.currentSession.lastLoginAt = Date.now();\n    await this.storeOfflineCredentials(\n      this.currentSession.user,\n      credentials,\n      this.currentSession.biometricData\n    );\n\n    return this.currentSession.user;\n  }\n\n  /**\n   * Biometric login\n   */\n  async biometricLogin(): Promise<User> {\n    await this.loadStoredSession();\n\n    if (!this.currentSession?.biometricData) {\n      throw new Error('Biometric authentication not set up');\n    }\n\n    const isAuthenticated = await this.authenticateBiometric(this.currentSession.biometricData);\n    if (!isAuthenticated) {\n      throw new Error('Biometric authentication failed');\n    }\n\n    // Update last login time\n    this.currentSession.lastLoginAt = Date.now();\n    return this.currentSession.user;\n  }\n\n  /**\n   * Logout\n   */\n  async logout(): Promise<void> {\n    try {\n      // Try to logout from server if online\n      if (navigator.onLine) {\n        await apiClient.post(API_ENDPOINTS.LOGOUT);\n      }\n    } catch (error) {\n      console.warn('Server logout failed:', error);\n    }\n\n    // Clear local session\n    localStorage.removeItem(STORAGE_KEYS.AUTH_TOKEN);\n    localStorage.removeItem(STORAGE_KEYS.REFRESH_TOKEN);\n    await this.clearStoredSession();\n  }\n\n  /**\n   * Get current user\n   */\n  getCurrentUser(): User | null {\n    return this.currentSession?.user || null;\n  }\n\n  /**\n   * Check if user is authenticated\n   */\n  isAuthenticated(): boolean {\n    return !!this.currentSession?.user;\n  }\n\n  /**\n   * Check if biometric is available for current user\n   */\n  isBiometricEnabled(): boolean {\n    return !!this.currentSession?.biometricData;\n  }\n\n  /**\n   * Enable biometric for current user\n   */\n  async enableBiometric(): Promise<boolean> {\n    if (!this.currentSession) {\n      return false;\n    }\n\n    const biometricData = await this.setupBiometric(this.currentSession.user.id);\n    if (!biometricData) {\n      return false;\n    }\n\n    // Update stored session with biometric data\n    this.currentSession.biometricData = biometricData;\n    await this.storeOfflineCredentials(\n      this.currentSession.user,\n      { \n        email: this.currentSession.credentials.email, \n        password: '' // We don't store the actual password\n      },\n      biometricData\n    );\n\n    return true;\n  }\n\n  /**\n   * Disable biometric authentication\n   */\n  async disableBiometric(): Promise<void> {\n    if (!this.currentSession) {\n      return;\n    }\n\n    this.currentSession.biometricData = undefined;\n    await this.storeOfflineCredentials(\n      this.currentSession.user,\n      { \n        email: this.currentSession.credentials.email, \n        password: '' \n      }\n    );\n  }\n\n  /**\n   * Refresh user data if online\n   */\n  async refreshUser(): Promise<User | null> {\n    if (!navigator.onLine || !this.currentSession) {\n      return this.currentSession?.user || null;\n    }\n\n    try {\n      const user = await apiClient.get<User>(API_ENDPOINTS.ME);\n      this.currentSession.user = user;\n      await offlineDb.saveUser(user);\n      return user;\n    } catch (error) {\n      console.warn('Failed to refresh user data:', error);\n      return this.currentSession?.user || null;\n    }\n  }\n}\n\nexport const offlineAuthService = new OfflineAuthService();\n\n// Auto-initialize\nofflineAuthService.initialize().catch(error => {\n  console.error('Failed to initialize offline auth service:', error);\n});","// Inline type definitions\ninterface Customer {\n  id: string;\n  name: string;\n  email?: string;\n  phone?: string;\n  address: string;\n  isArchived?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface Job {\n  id: string;\n  customerId: string;\n  title: string;\n  description?: string;\n  status: 'pending' | 'in_progress' | 'completed' | 'cancelled';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  scheduledDate?: string;\n  completedDate?: string;\n  estimatedHours?: number;\n  actualHours?: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface Material {\n  id: string;\n  name: string;\n  description?: string;\n  unit: string;\n  cost: number;\n  supplier?: string;\n  isArchived?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface CustomerFilters {\n  search?: string;\n  isArchived?: boolean;\n}\n\ninterface JobFilters {\n  status?: 'pending' | 'in_progress' | 'completed' | 'cancelled';\n  customerId?: string;\n  priority?: 'low' | 'medium' | 'high' | 'urgent';\n  search?: string;\n}\n\ninterface MaterialFilters {\n  search?: string;\n  supplier?: string;\n  isArchived?: boolean;\n}\nimport { offlineDb } from './db.service';\nimport { optimisticUpdatesService } from './optimistic-updates.service';\nimport { useOnlineStatus } from '../hooks/useOnlineStatus';\n\n/**\n * Enhanced offline data service that provides unified access to data\n * with automatic caching, compression, and smart loading\n */\nclass OfflineDataService {\n  private dataCache = new Map<string, { data: any; timestamp: number; compressed: boolean }>();\n  private readonly CACHE_TTL = 5 * 60 * 1000; // 5 minutes\n\n  /**\n   * Get customers with smart caching and filtering\n   */\n  async getCustomers(filters?: CustomerFilters): Promise<Customer[]> {\n    const cacheKey = `customers_${JSON.stringify(filters || {})}`;\n    \n    // Check memory cache first\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    // Check IndexedDB cache\n    const dbCached = await offlineDb.getCachedData(cacheKey);\n    if (dbCached) {\n      this.setCachedData(cacheKey, dbCached);\n      return dbCached;\n    }\n\n    // Load from database\n    const customers = await offlineDb.getCustomers(filters);\n    \n    // Cache the result\n    this.setCachedData(cacheKey, customers);\n    await offlineDb.setCachedData(cacheKey, customers, this.CACHE_TTL, true);\n    \n    return customers;\n  }\n\n  /**\n   * Get single customer with caching\n   */\n  async getCustomer(id: string): Promise<Customer | null> {\n    const cacheKey = `customer_${id}`;\n    \n    // Check memory cache first\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    // Load from database\n    const customer = await offlineDb.getCustomer(id);\n    if (customer) {\n      this.setCachedData(cacheKey, customer);\n    }\n    \n    return customer || null;\n  }\n\n  /**\n   * Get jobs with smart caching and filtering\n   */\n  async getJobs(filters?: JobFilters): Promise<Job[]> {\n    const cacheKey = `jobs_${JSON.stringify(filters || {})}`;\n    \n    // Check memory cache first\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    // Check IndexedDB cache\n    const dbCached = await offlineDb.getCachedData(cacheKey);\n    if (dbCached) {\n      this.setCachedData(cacheKey, dbCached);\n      return dbCached;\n    }\n\n    // Load from database with enhanced filtering\n    let jobs = await offlineDb.getJobs();\n    \n    // Apply filters\n    if (filters?.status) {\n      const statuses = Array.isArray(filters.status) ? filters.status : [filters.status];\n      jobs = jobs.filter(job => statuses.includes(job.status));\n    }\n    \n    if (filters?.customerId) {\n      jobs = jobs.filter(job => job.customerId === filters.customerId);\n    }\n    \n    if (filters?.assignedUserId) {\n      jobs = jobs.filter(job => \n        job.assignments?.some(a => a.userId === filters.assignedUserId)\n      );\n    }\n    \n    if (filters?.startDate) {\n      if (filters.startDate.from) {\n        jobs = jobs.filter(job => \n          job.startDate && new Date(job.startDate) >= filters.startDate!.from!\n        );\n      }\n      if (filters.startDate.to) {\n        jobs = jobs.filter(job => \n          job.startDate && new Date(job.startDate) <= filters.startDate!.to!\n        );\n      }\n    }\n    \n    if (filters?.search) {\n      const searchLower = filters.search.toLowerCase();\n      jobs = jobs.filter(job =>\n        job.title.toLowerCase().includes(searchLower) ||\n        job.description?.toLowerCase().includes(searchLower) ||\n        job.notes?.toLowerCase().includes(searchLower)\n      );\n    }\n\n    // Cache the result\n    this.setCachedData(cacheKey, jobs);\n    await offlineDb.setCachedData(cacheKey, jobs, this.CACHE_TTL, true);\n    \n    return jobs;\n  }\n\n  /**\n   * Get single job with related data\n   */\n  async getJobWithDetails(id: string): Promise<(Job & { customer?: Customer; materials?: Material[] }) | null> {\n    const cacheKey = `job_details_${id}`;\n    \n    // Check memory cache first\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    // Load job\n    const job = await offlineDb.getJob(id);\n    if (!job) {\n      return null;\n    }\n\n    // Load related data\n    const [customer, materials] = await Promise.all([\n      offlineDb.getCustomer(job.customerId),\n      offlineDb.getMaterials(job.id),\n    ]);\n\n    const jobWithDetails = {\n      ...job,\n      customer: customer || undefined,\n      materials: materials || [],\n    };\n\n    // Cache the result\n    this.setCachedData(cacheKey, jobWithDetails);\n    \n    return jobWithDetails;\n  }\n\n  /**\n   * Get materials with smart filtering\n   */\n  async getMaterials(jobId: string, filters?: MaterialFilters): Promise<Material[]> {\n    const cacheKey = `materials_${jobId}_${JSON.stringify(filters || {})}`;\n    \n    // Check memory cache first\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    // Load from database\n    let materials = await offlineDb.getMaterials(jobId);\n    \n    // Apply filters\n    if (filters?.purchased !== undefined) {\n      materials = materials.filter(m => m.purchased === filters.purchased);\n    }\n    \n    if (filters?.search) {\n      const searchLower = filters.search.toLowerCase();\n      materials = materials.filter(m =>\n        m.itemName.toLowerCase().includes(searchLower) ||\n        m.unit.toLowerCase().includes(searchLower) ||\n        m.notes?.toLowerCase().includes(searchLower)\n      );\n    }\n\n    // Cache the result\n    this.setCachedData(cacheKey, materials);\n    \n    return materials;\n  }\n\n  /**\n   * Get dashboard statistics with caching\n   */\n  async getDashboardStats(): Promise<{\n    activeJobs: number;\n    completedJobsThisWeek: number;\n    pendingMaterials: number;\n    totalCustomers: number;\n    unsyncedItems: number;\n  }> {\n    const cacheKey = 'dashboard_stats';\n    \n    // Check memory cache first\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    // Calculate stats\n    const [jobs, materials, customers, dbStats] = await Promise.all([\n      this.getJobs(),\n      offlineDb.getMaterials(''), // Get all materials\n      this.getCustomers(),\n      offlineDb.getDatabaseStats(),\n    ]);\n\n    const oneWeekAgo = new Date();\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\n    const stats = {\n      activeJobs: jobs.filter(j => j.status === 'IN_PROGRESS').length,\n      completedJobsThisWeek: jobs.filter(j => \n        j.status === 'COMPLETED' && \n        new Date(j.updatedAt) >= oneWeekAgo\n      ).length,\n      pendingMaterials: materials.filter(m => !m.purchased && !m.isDeleted).length,\n      totalCustomers: customers.filter(c => !c.isArchived).length,\n      unsyncedItems: dbStats.unsynced,\n    };\n\n    // Cache with shorter TTL for stats\n    this.setCachedData(cacheKey, stats, 2 * 60 * 1000); // 2 minutes\n    \n    return stats;\n  }\n\n  /**\n   * Search across all entities\n   */\n  async globalSearch(query: string, limit = 20): Promise<{\n    customers: Customer[];\n    jobs: Job[];\n    materials: Material[];\n  }> {\n    const searchLower = query.toLowerCase();\n    \n    const [customers, jobs, allMaterials] = await Promise.all([\n      this.getCustomers({ search: query }),\n      this.getJobs({ search: query }),\n      offlineDb.getMaterials(''), // Get all materials for search\n    ]);\n\n    // Filter materials by search\n    const materials = allMaterials\n      .filter(m => \n        !m.isDeleted &&\n        (m.itemName.toLowerCase().includes(searchLower) ||\n         m.notes?.toLowerCase().includes(searchLower))\n      )\n      .slice(0, limit);\n\n    return {\n      customers: customers.slice(0, limit),\n      jobs: jobs.slice(0, limit),\n      materials,\n    };\n  }\n\n  /**\n   * Get recently modified items\n   */\n  async getRecentlyModified(hours = 24): Promise<{\n    customers: Customer[];\n    jobs: Job[];\n    materials: Material[];\n  }> {\n    const cacheKey = `recent_modified_${hours}h`;\n    \n    // Check memory cache first\n    const cached = this.getCachedData(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    const since = new Date();\n    since.setHours(since.getHours() - hours);\n    const sinceTimestamp = since.getTime();\n\n    const [allCustomers, allJobs, allMaterials] = await Promise.all([\n      offlineDb.getCustomers(),\n      offlineDb.getJobs(),\n      offlineDb.getMaterials(''),\n    ]);\n\n    const result = {\n      customers: allCustomers.filter(c => {\n        const lastModified = (c as any)._lastModified || new Date(c.updatedAt).getTime();\n        return lastModified >= sinceTimestamp;\n      }),\n      jobs: allJobs.filter(j => {\n        const lastModified = (j as any)._lastModified || new Date(j.updatedAt).getTime();\n        return lastModified >= sinceTimestamp;\n      }),\n      materials: allMaterials.filter(m => {\n        const lastModified = (m as any)._lastModified || new Date(m.updatedAt).getTime();\n        return lastModified >= sinceTimestamp && !m.isDeleted;\n      }),\n    };\n\n    // Cache for 5 minutes\n    this.setCachedData(cacheKey, result, 5 * 60 * 1000);\n    \n    return result;\n  }\n\n  /**\n   * Get unsynced items\n   */\n  async getUnsyncedItems(): Promise<{\n    customers: Customer[];\n    jobs: Job[];\n    materials: Material[];\n  }> {\n    return await offlineDb.getUnsyncedEntities();\n  }\n\n  /**\n   * Preload critical data for offline use\n   */\n  async preloadCriticalData(): Promise<void> {\n    try {\n      // Preload most commonly accessed data\n      await Promise.all([\n        this.getCustomers({ isArchived: false }), // Active customers\n        this.getJobs({ status: ['NOT_STARTED', 'IN_PROGRESS', 'WAITING_ON_MATERIALS'] }), // Active jobs\n        this.getDashboardStats(),\n      ]);\n    } catch (error) {\n      console.error('Failed to preload critical data:', error);\n    }\n  }\n\n  /**\n   * Clear all caches\n   */\n  async clearAllCaches(): Promise<void> {\n    this.dataCache.clear();\n    await offlineDb.clearCache();\n  }\n\n  /**\n   * Invalidate cache for specific entity type\n   */\n  invalidateCache(entityType: 'customer' | 'job' | 'material', id?: string): void {\n    const patterns = [\n      `${entityType}s_`,\n      `${entityType}_`,\n      'dashboard_stats',\n      'recent_modified_',\n    ];\n\n    if (id) {\n      patterns.push(`${entityType}_${id}`);\n      patterns.push(`${entityType}_details_${id}`);\n    }\n\n    // Clear from memory cache\n    for (const [key] of this.dataCache) {\n      if (patterns.some(pattern => key.startsWith(pattern))) {\n        this.dataCache.delete(key);\n      }\n    }\n\n    // Clear from IndexedDB cache (async)\n    this.clearDbCache(patterns);\n  }\n\n  private async clearDbCache(patterns: string[]): Promise<void> {\n    try {\n      // This is a simplified approach - in a real implementation,\n      // you'd want to iterate through cache keys and delete matching ones\n      await offlineDb.clearCache();\n    } catch (error) {\n      console.error('Failed to clear database cache:', error);\n    }\n  }\n\n  /**\n   * Memory cache helpers\n   */\n  private getCachedData(key: string): any {\n    const cached = this.dataCache.get(key);\n    if (cached && Date.now() - cached.timestamp < this.CACHE_TTL) {\n      return cached.data;\n    }\n    if (cached) {\n      this.dataCache.delete(key);\n    }\n    return null;\n  }\n\n  private setCachedData(key: string, data: any, ttl?: number): void {\n    this.dataCache.set(key, {\n      data,\n      timestamp: Date.now(),\n      compressed: false,\n    });\n\n    // Limit memory cache size\n    if (this.dataCache.size > 100) {\n      const oldestKey = this.dataCache.keys().next().value;\n      this.dataCache.delete(oldestKey);\n    }\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getCacheStats(): {\n    memoryEntries: number;\n    memorySize: number;\n  } {\n    let memorySize = 0;\n    for (const [key, value] of this.dataCache) {\n      memorySize += JSON.stringify(value).length;\n    }\n\n    return {\n      memoryEntries: this.dataCache.size,\n      memorySize,\n    };\n  }\n}\n\nexport const offlineDataService = new OfflineDataService();","import { create } from 'zustand';\n// Inline type definitions\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: 'admin' | 'manager' | 'worker';\n  isActive: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface LoginRequest {\n  email: string;\n  password: string;\n  rememberMe?: boolean;\n}\n\nenum Role {\n  OWNER = 'admin',\n  MANAGER = 'manager',\n  WORKER = 'worker'\n}\nimport { offlineAuthService } from '../services/offline-auth.service';\nimport { offlineDataService } from '../services/offline-data.service';\n\n// Mock users for development\nconst MOCK_USERS: Record<string, User & { password: string }> = {\n  'owner@khs.com': {\n    id: '1',\n    email: 'owner@khs.com',\n    password: 'password123',\n    name: 'John Owner',\n    role: Role.OWNER,\n    isActive: true,\n    createdAt: new Date('2024-01-01'),\n    updatedAt: new Date('2024-01-01'),\n  },\n  'worker@khs.com': {\n    id: '2',\n    email: 'worker@khs.com',\n    password: 'password123',\n    name: 'Jane Worker',\n    role: Role.WORKER,\n    isActive: true,\n    createdAt: new Date('2024-01-01'),\n    updatedAt: new Date('2024-01-01'),\n  },\n};\n\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  isBiometricEnabled: boolean;\n  \n  // Actions\n  login: (credentials: LoginRequest, enableBiometric?: boolean) => Promise<void>;\n  biometricLogin: () => Promise<void>;\n  logout: () => Promise<void>;\n  refreshUser: () => Promise<void>;\n  setUser: (user: User | null) => void;\n  enableBiometric: () => Promise<boolean>;\n  disableBiometric: () => Promise<void>;\n  checkBiometricStatus: () => void;\n}\n\n// Enhanced store with offline capabilities\nexport const useAuthStore = create<AuthState>((set, get) => ({\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  isBiometricEnabled: false,\n\n  login: async (credentials: LoginRequest, enableBiometric = false) => {\n    set({ isLoading: true });\n    \n    try {\n      // Try offline-first authentication\n      let user: User;\n      \n      try {\n        // Use offline auth service for login\n        user = await offlineAuthService.login(credentials, enableBiometric);\n        // [AUTH] Offline login successful\n      } catch (error) {\n        // [AUTH] Offline login failed, trying mock fallback\n        \n        // Fallback to mock users for development\n        const mockUser = MOCK_USERS[credentials.email];\n        \n        if (!mockUser || mockUser.password !== credentials.password) {\n          throw new Error('Invalid credentials');\n        }\n        \n        const { password, ...userWithoutPassword } = mockUser;\n        user = userWithoutPassword;\n        \n        // Store in offline auth for future use\n        try {\n          await offlineAuthService.login(credentials, enableBiometric);\n        } catch (offlineError) {\n          // [AUTH] Failed to store credentials offline\n        }\n      }\n      \n      set({ \n        user, \n        isAuthenticated: true, \n        isBiometricEnabled: offlineAuthService.isBiometricEnabled() \n      });\n      \n      // Preload critical data after successful login\n      offlineDataService.preloadCriticalData().catch(error => {\n        // [AUTH] Failed to preload critical data\n      });\n      \n    } finally {\n      set({ isLoading: false });\n    }\n  },\n\n  biometricLogin: async () => {\n    set({ isLoading: true });\n    \n    try {\n      const user = await offlineAuthService.biometricLogin();\n      set({ \n        user, \n        isAuthenticated: true, \n        isBiometricEnabled: true \n      });\n      \n      // Preload critical data\n      offlineDataService.preloadCriticalData().catch(error => {\n        // [AUTH] Failed to preload critical data\n      });\n      \n      // [AUTH] Biometric login successful\n    } finally {\n      set({ isLoading: false });\n    }\n  },\n\n  logout: async () => {\n    // [AUTH] Logging out\n    \n    try {\n      await offlineAuthService.logout();\n    } catch (error) {\n      // [AUTH] Offline logout failed\n    }\n    \n    // Clear caches\n    try {\n      await offlineDataService.clearAllCaches();\n    } catch (error) {\n      // [AUTH] Failed to clear caches\n    }\n    \n    set({ \n      user: null, \n      isAuthenticated: false, \n      isBiometricEnabled: false \n    });\n  },\n\n  refreshUser: async () => {\n    // [AUTH] Refreshing user data\n    \n    try {\n      const user = await offlineAuthService.refreshUser();\n      if (user) {\n        set({ user });\n      }\n    } catch (error) {\n      // [AUTH] Failed to refresh user\n    }\n  },\n\n  setUser: (user: User | null) => {\n    // [AUTH] setUser called\n    set({ user, isAuthenticated: !!user });\n  },\n\n  enableBiometric: async (): Promise<boolean> => {\n    try {\n      const enabled = await offlineAuthService.enableBiometric();\n      if (enabled) {\n        set({ isBiometricEnabled: true });\n      }\n      return enabled;\n    } catch (error) {\n      // [AUTH] Failed to enable biometric\n      return false;\n    }\n  },\n\n  disableBiometric: async () => {\n    try {\n      await offlineAuthService.disableBiometric();\n      set({ isBiometricEnabled: false });\n    } catch (error) {\n      // [AUTH] Failed to disable biometric\n    }\n  },\n\n  checkBiometricStatus: () => {\n    const enabled = offlineAuthService.isBiometricEnabled();\n    set({ isBiometricEnabled: enabled });\n  },\n}));\n\n// Initialize offline auth on store creation\n(async () => {\n  try {\n    await offlineAuthService.initialize();\n    const currentUser = offlineAuthService.getCurrentUser();\n    if (currentUser) {\n      useAuthStore.setState({ \n        user: currentUser, \n        isAuthenticated: true,\n        isBiometricEnabled: offlineAuthService.isBiometricEnabled()\n      });\n    }\n  } catch (error) {\n    // [AUTH] Failed to initialize offline auth\n  }\n})();\n\n// Helper hooks\nexport const useAuth = () => {\n  const { \n    user, \n    isAuthenticated, \n    login, \n    logout, \n    biometricLogin, \n    enableBiometric, \n    disableBiometric, \n    isBiometricEnabled \n  } = useAuthStore();\n  return { \n    user, \n    isAuthenticated, \n    login, \n    logout, \n    biometricLogin, \n    enableBiometric, \n    disableBiometric, \n    isBiometricEnabled \n  };\n};\n\nexport const useUser = () => {\n  const user = useAuthStore((state) => state.user);\n  return user;\n};\n\nexport const useIsOwner = () => {\n  const user = useAuthStore((state) => state.user);\n  return user?.role === Role.OWNER;\n};\n\nexport const useIsWorker = () => {\n  const user = useAuthStore((state) => state.user);\n  return user?.role === Role.WORKER;\n};\n\nexport const useBiometric = () => {\n  const { isBiometricEnabled, enableBiometric, disableBiometric, biometricLogin } = useAuthStore();\n  return { isBiometricEnabled, enableBiometric, disableBiometric, biometricLogin };\n};","import { Outlet, useNavigate } from 'react-router-dom';\nimport { useAuth, useUser } from '../stores/auth.store';\nimport { useState, useEffect } from 'react';\n\n// Icons - using simple SVGs for now\nconst MenuIcon = () => (\n  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n  </svg>\n);\n\nexport const AppLayout = () => {\n  const navigate = useNavigate();\n  const { logout } = useAuth();\n  const user = useUser();\n  const [showMenu, setShowMenu] = useState(false);\n  const [isBiometricEnabled, setIsBiometricEnabled] = useState(false);\n\n  useEffect(() => {\n    // Temporarily disabled service initialization\n    // Will be restored once services are fixed\n    setIsBiometricEnabled(false);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      navigate('/login');\n    } catch (error) {\n      // Logout failed - force navigation\n      navigate('/login');\n    }\n  };\n\n  const handleToggleBiometric = async () => {\n    // Temporarily disabled\n    alert('Biometric authentication is temporarily unavailable.');\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm flex-shrink-0 z-30 relative\">\n        <div className=\"px-4 h-14 flex items-center justify-between\">\n          <h1 className=\"text-lg font-semibold text-gray-900\">KHS CRM</h1>\n          <div className=\"flex items-center gap-4\">\n            <span className=\"text-sm text-gray-600\">{user?.name}</span>\n            <button\n              onClick={() => setShowMenu(!showMenu)}\n              className=\"p-2 -mr-2 rounded-lg hover:bg-gray-100\"\n            >\n              <MenuIcon />\n            </button>\n          </div>\n        </div>\n        \n        {/* Dropdown Menu */}\n        {showMenu && (\n          <div className=\"absolute right-4 top-14 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-40\">\n            <div className=\"px-4 py-2 border-b border-gray-200\">\n              <p className=\"text-sm font-medium text-gray-900\">{user?.name}</p>\n              <p className=\"text-xs text-gray-500\">{user?.email}</p>\n              <p className=\"text-xs text-gray-500 capitalize\">{user?.role.toLowerCase()}</p>\n            </div>\n            \n            <button\n              onClick={() => {\n                setShowMenu(false);\n                navigate('/offline-dashboard');\n              }}\n              className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <div className=\"flex items-center\">\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4\" />\n                </svg>\n                Offline Dashboard\n              </div>\n            </button>\n            \n            <button\n              onClick={handleToggleBiometric}\n              className=\"w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                  </svg>\n                  Biometric Login\n                </div>\n                <div className={`w-2 h-2 rounded-full ${\n                  isBiometricEnabled ? 'bg-green-400' : 'bg-gray-300'\n                }`}></div>\n              </div>\n            </button>\n            \n            <div className=\"border-t border-gray-200 my-2\"></div>\n            \n            <button\n              onClick={handleLogout}\n              className=\"w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50\"\n            >\n              <div className=\"flex items-center\">\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                </svg>\n                Sign Out\n              </div>\n            </button>\n          </div>\n        )}\n      </header>\n\n      {/* Main Content Area with proper scrolling */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Main Content - Scrollable */}\n        <main className=\"flex-1 overflow-y-auto px-4 py-4\">\n          <Outlet />\n        </main>\n      </div>\n      \n      {/* Click outside to close menu */}\n      {showMenu && (\n        <div\n          className=\"fixed inset-0 z-20\"\n          onClick={() => setShowMenu(false)}\n        />\n      )}\n      \n    </div>\n  );\n};","import { Outlet } from 'react-router-dom';\n\nexport const AuthLayout = () => {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Outlet />\n    </div>\n  );\n};","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { Suspense, lazy } from 'react';\n\n// Layouts\nimport { AppLayout } from '../layouts/AppLayout';\nimport { AuthLayout } from '../layouts/AuthLayout';\n\n// Pages - Lazy loaded for better performance\nconst Login = lazy(() => import('../pages/Login'));\nconst Dashboard = lazy(() => import('../pages/DashboardEnhanced'));\nconst Customers = lazy(() => import('../pages/CustomersEnhanced'));\nconst CustomerDetail = lazy(() => import('../pages/CustomerDetailEnhanced'));\nconst Jobs = lazy(() => import('../pages/Jobs'));\nconst JobDetail = lazy(() => import('../pages/JobDetailTabbed'));\nconst Profile = lazy(() => import('../pages/Profile'));\nconst Materials = lazy(() => import('../pages/Materials'));\nconst Workers = lazy(() => import('../pages/Workers'));\nconst ScheduleCalendar = lazy(() => import('../pages/ScheduleCalendar'));\nconst JobPhotos = lazy(() => import('../pages/JobPhotos'));\nconst Reports = lazy(() => import('../pages/Reports'));\nconst Invoices = lazy(() => import('../pages/Invoices'));\nconst InvoiceDetail = lazy(() => import('../pages/InvoiceDetail'));\nconst OfflineDataDashboard = lazy(() => import('../components/OfflineDataDashboard'));\nconst PracticalSecurity = lazy(() => import('../pages/PracticalSecurity'));\nconst SyncDebug = lazy(() => import('../pages/SyncDebug'));\n\n// Loading component\nconst PageLoader = () => (\n  <div className=\"min-h-screen flex items-center justify-center\">\n    <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n  </div>\n);\n\n// Protected Route wrapper - TEMPORARILY DISABLED\nconst ProtectedRoute = ({ children }: { children: React.ReactNode }) => {\n  // const isAuthenticated = useAuthStore((state) => state.isAuthenticated);\n  \n  // TEMPORARILY DISABLED - Always allow access\n  // if (!isAuthenticated) {\n  //   return <Navigate to=\"/login\" replace />;\n  // }\n  \n  return <>{children}</>;\n};\n\nexport const Router = () => {\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <Routes>\n        {/* Auth routes */}\n        <Route element={<AuthLayout />}>\n          <Route path=\"/login\" element={<Login />} />\n        </Route>\n        \n        {/* Protected app routes */}\n        <Route\n          element={\n            <ProtectedRoute>\n              <AppLayout />\n            </ProtectedRoute>\n          }\n        >\n          <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n          <Route path=\"/home\" element={<Navigate to=\"/dashboard\" replace />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/customers\" element={<Customers />} />\n          <Route path=\"/customers/:id\" element={<CustomerDetail />} />\n          <Route path=\"/jobs\" element={<Jobs />} />\n          <Route path=\"/jobs/:id\" element={<JobDetail />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/materials\" element={<Materials />} />\n          <Route path=\"/workers\" element={<Workers />} />\n          <Route path=\"/schedule\" element={<ScheduleCalendar />} />\n          <Route path=\"/jobs/:id/photos\" element={<JobPhotos />} />\n          <Route path=\"/reports\" element={<Reports />} />\n          <Route path=\"/invoices\" element={<Invoices />} />\n          <Route path=\"/invoices/:id\" element={<InvoiceDetail />} />\n          <Route path=\"/offline-dashboard\" element={<OfflineDataDashboard />} />\n          <Route path=\"/security\" element={<PracticalSecurity />} />\n          <Route path=\"/sync-debug\" element={<SyncDebug />} />\n        </Route>\n        \n        {/* Catch all */}\n        <Route path=\"*\" element={<Navigate to=\"/dashboard\" replace />} />\n      </Routes>\n    </Suspense>\n  );\n};","import { create } from 'zustand';\n// Inline type definitions\ninterface SyncError {\n  id: string;\n  message: string;\n  code: string;\n  timestamp: string;\n  operation?: string;\n  entityType?: string;\n  entityId?: string;\n  details?: any;\n}\n\ninterface SyncState {\n  isOnline: boolean;\n  isSyncing: boolean;\n  lastSyncTime: Date | null;\n  errors: SyncError[];\n  pendingOperations: number;\n\n  // Actions\n  setOnline: (online: boolean) => void;\n  setSyncing: (syncing: boolean) => void;\n  setLastSyncTime: (time: Date) => void;\n  addError: (error: SyncError) => void;\n  clearErrors: () => void;\n  setPendingOperations: (count: number) => void;\n}\n\nexport const syncStore = create<SyncState>((set) => ({\n  isOnline: navigator.onLine,\n  isSyncing: false,\n  lastSyncTime: null,\n  errors: [],\n  pendingOperations: 0,\n\n  setOnline: (online) => set({ isOnline: online }),\n  setSyncing: (syncing) => set({ isSyncing: syncing }),\n  setLastSyncTime: (time) => set({ lastSyncTime: time }),\n  addError: (error) => set((state) => ({ errors: [...state.errors, error] })),\n  clearErrors: () => set({ errors: [] }),\n  setPendingOperations: (count) => set({ pendingOperations: count }),\n}));\n\n// Helper hooks\nexport const useSyncStatus = () => {\n  const { isOnline, isSyncing, lastSyncTime, pendingOperations } = syncStore();\n  return { isOnline, isSyncing, lastSyncTime, pendingOperations };\n};\n\nexport const useSyncErrors = () => {\n  const errors = syncStore((state) => state.errors);\n  return errors;\n};","import { offlineDb } from './db.service';\nimport { apiClient } from './api.service';\nimport { syncStore } from '@stores/sync.store';\n\n// Types defined inline\ninterface SyncOperation {\n  id: string;\n  operation: 'create' | 'update' | 'delete';\n  entityType: 'customer' | 'job' | 'material';\n  entityId?: string;\n  payload: any;\n  timestamp: Date;\n  attempts?: number;\n  lastError?: string;\n}\n\ninterface SyncStatus {\n  lastSync: Date | null;\n  syncInProgress: boolean;\n  pendingOperations: number;\n  errors: SyncError[];\n}\n\ninterface Customer {\n  id: string;\n  name: string;\n  phone: string | null;\n  email: string | null;\n  address: string;\n  notes: string | null;\n  isArchived: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface Job {\n  id: string;\n  title: string;\n  description: string | null;\n  status: string;\n  startDate: Date | null;\n  endDate: Date | null;\n  notes: string | null;\n  customerId: string;\n  createdById: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface Material {\n  id: string;\n  jobId: string;\n  itemName: string;\n  quantity: number;\n  unit: string;\n  purchased: boolean;\n  notes: string | null;\n  addedById: string;\n  purchasedById: string | null;\n  purchasedBy: any | null;\n  purchasedAt: Date | null;\n  isDeleted: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface SyncError {\n  operation: SyncOperation;\n  error: string;\n  timestamp: Date;\n}\n\n// Constants defined inline\nconst SYNC_CONFIG = {\n  AUTO_SYNC_INTERVAL: 30000, // 30 seconds\n  MAX_RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 5000,\n  BATCH_SIZE: 50\n};\n\nconst API_ENDPOINTS = {\n  CUSTOMERS: '/api/customers',\n  CUSTOMER_BY_ID: (id: string) => `/api/customers/${id}`,\n  JOBS: '/api/jobs',\n  JOB_BY_ID: (id: string) => `/api/jobs/${id}`,\n  JOB_MATERIALS: (jobId: string) => `/api/jobs/${jobId}/materials`,\n  MATERIAL_BY_ID: (id: string) => `/api/materials/${id}`,\n  MATERIALS_BULK_UPDATE: '/api/materials/bulk-update'\n};\n\nconst ERROR_CODES = {\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  CONFLICT: 'CONFLICT',\n  NOT_FOUND: 'NOT_FOUND',\n  VALIDATION_ERROR: 'VALIDATION_ERROR'\n};\n\ninterface ConflictResolutionStrategy {\n  name: 'server_wins' | 'client_wins' | 'merge' | 'manual';\n  resolve: (serverData: any, clientData: any) => Promise<any>;\n}\n\ninterface SyncResult {\n  success: boolean;\n  conflicts: number;\n  processed: number;\n  errors: SyncError[];\n}\n\nclass SyncService {\n  private syncInProgress = false;\n  private syncInterval: NodeJS.Timeout | null = null;\n  private onlineListener: (() => void) | null = null;\n  private offlineListener: (() => void) | null = null;\n  private retryTimeouts = new Map<string, NodeJS.Timeout>();\n  private conflictResolutionStrategies = new Map<string, ConflictResolutionStrategy>();\n  private syncPriorities = {\n    customer: 1,\n    job: 2, \n    material: 3,\n  };\n\n  initialize(): void {\n    // Setup conflict resolution strategies\n    this.setupConflictResolutionStrategies();\n\n    // Start auto-sync interval\n    this.startAutoSync();\n\n    // Listen for online/offline events\n    this.onlineListener = () => this.handleOnline();\n    this.offlineListener = () => this.handleOffline();\n    \n    window.addEventListener('online', this.onlineListener);\n    window.addEventListener('offline', this.offlineListener);\n\n    // Set initial online status\n    syncStore.getState().setOnline(navigator.onLine);\n\n    // Resume failed operations on startup\n    this.resumeFailedOperations();\n  }\n\n  destroy(): void {\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval);\n    }\n    \n    if (this.onlineListener) {\n      window.removeEventListener('online', this.onlineListener);\n    }\n    \n    if (this.offlineListener) {\n      window.removeEventListener('offline', this.offlineListener);\n    }\n\n    // Clear all retry timeouts\n    this.retryTimeouts.forEach(timeout => clearTimeout(timeout));\n    this.retryTimeouts.clear();\n  }\n\n  private startAutoSync(): void {\n    this.syncInterval = setInterval(() => {\n      if (navigator.onLine && !this.syncInProgress) {\n        this.sync();\n      }\n    }, SYNC_CONFIG.AUTO_SYNC_INTERVAL);\n  }\n\n  private handleOnline(): void {\n    syncStore.getState().setOnline(true);\n    // Resume failed operations\n    this.resumeFailedOperations();\n    // Sync immediately when coming online\n    this.sync();\n  }\n\n  private handleOffline(): void {\n    syncStore.getState().setOnline(false);\n  }\n\n  async sync(): Promise<SyncResult> {\n    if (this.syncInProgress || !navigator.onLine) {\n      return { success: false, conflicts: 0, processed: 0, errors: [] };\n    }\n\n    this.syncInProgress = true;\n    syncStore.getState().setSyncing(true);\n\n    const result: SyncResult = {\n      success: true,\n      conflicts: 0,\n      processed: 0,\n      errors: [],\n    };\n\n    try {\n      // Process sync queue first (push local changes)\n      const pushResult = await this.processSyncQueue();\n      result.processed += pushResult.processed;\n      result.conflicts += pushResult.conflicts;\n      result.errors.push(...pushResult.errors);\n\n      // Then pull latest data from server\n      const pullResult = await this.pullData();\n      result.conflicts += pullResult.conflicts;\n      result.errors.push(...pullResult.errors);\n\n      // Update last sync time\n      const now = new Date();\n      await offlineDb.setLastSyncTime(now);\n      syncStore.getState().setLastSyncTime(now);\n      \n      // Update sync store with results\n      if (result.errors.length === 0) {\n        syncStore.getState().clearErrors();\n      } else {\n        result.errors.forEach(error => syncStore.getState().addError(error));\n        result.success = false;\n      }\n    } catch (error) {\n      console.error('Sync failed:', error);\n      const syncError = {\n        operationId: `sync_${Date.now()}`,\n        error: error instanceof Error ? error.message : 'Sync failed',\n        timestamp: new Date(),\n      };\n      result.errors.push(syncError);\n      result.success = false;\n      syncStore.getState().addError(syncError);\n    } finally {\n      this.syncInProgress = false;\n      syncStore.getState().setSyncing(false);\n    }\n\n    return result;\n  }\n\n  private async processSyncQueue(): Promise<SyncResult> {\n    const result: SyncResult = {\n      success: true,\n      conflicts: 0,\n      processed: 0,\n      errors: [],\n    };\n\n    const operations = await offlineDb.getSyncQueueByPriority();\n    \n    for (const operation of operations) {\n      try {\n        await offlineDb.updateSyncOperationStatus(operation.id, 'processing');\n        \n        const opResult = await this.processSyncOperation(operation);\n        if (opResult.conflict) {\n          result.conflicts++;\n        }\n        \n        await offlineDb.updateSyncOperationStatus(operation.id, 'completed');\n        await offlineDb.removeSyncOperation(operation.id);\n        result.processed++;\n        \n        // Clear any existing retry timeout\n        if (this.retryTimeouts.has(operation.id)) {\n          clearTimeout(this.retryTimeouts.get(operation.id));\n          this.retryTimeouts.delete(operation.id);\n        }\n      } catch (error) {\n        console.error('Failed to process sync operation:', operation, error);\n        \n        const syncError = {\n          operationId: operation.id,\n          error: error instanceof Error ? error.message : 'Operation failed',\n          timestamp: new Date(),\n        };\n        result.errors.push(syncError);\n        \n        await this.handleOperationFailure(operation, error as Error);\n        result.success = false;\n      }\n    }\n\n    return result;\n  }\n\n  private async processSyncOperation(operation: SyncOperation): Promise<{ conflict: boolean }> {\n    const { entityType, entityId, operation: op, payload } = operation;\n    let conflict = false;\n\n    try {\n      switch (entityType) {\n        case 'customer':\n          conflict = await this.syncCustomerOperation(op, entityId, payload);\n          break;\n        case 'job':\n          conflict = await this.syncJobOperation(op, entityId, payload);\n          break;\n        case 'material':\n          conflict = await this.syncMaterialOperation(op, entityId, payload);\n          break;\n        default:\n          throw new Error(`Unknown entity type: ${entityType}`);\n      }\n    } catch (error) {\n      // Handle specific API errors\n      if (error instanceof Error) {\n        if (error.message.includes('404') || error.message.includes('not found')) {\n          // Entity was deleted on server, remove locally\n          await this.handleEntityDeleted(entityType, entityId || payload.id);\n          return { conflict: false };\n        } else if (error.message.includes('409') || error.message.includes('conflict')) {\n          // Conflict detected, attempt resolution\n          conflict = await this.handleConflict(entityType, entityId, payload);\n        }\n      }\n      \n      if (!conflict) {\n        throw error; // Re-throw if not handled\n      }\n    }\n\n    return { conflict };\n  }\n\n  private async syncCustomerOperation(\n    operation: string,\n    entityId: string | undefined,\n    payload: any,\n  ): Promise<boolean> {\n    let hasConflict = false;\n\n    try {\n      switch (operation) {\n        case 'create': {\n          const created = await apiClient.post<Customer>(API_ENDPOINTS.CUSTOMERS, payload);\n          // Update local ID with server ID and mark as synced\n          await offlineDb.deleteCustomer(payload.id);\n          await offlineDb.saveCustomer(created);\n          await offlineDb.markAsSynced('customer', created.id);\n          break;\n        }\n        case 'update':\n          if (entityId) {\n            try {\n              const updated = await apiClient.put<Customer>(\n                API_ENDPOINTS.CUSTOMER_BY_ID(entityId),\n                payload,\n              );\n              await offlineDb.saveCustomer(updated);\n              await offlineDb.markAsSynced('customer', entityId);\n            } catch (error) {\n              if (error instanceof Error && error.message.includes('409')) {\n                hasConflict = await this.handleConflict('customer', entityId, payload);\n              } else {\n                throw error;\n              }\n            }\n          }\n          break;\n        case 'delete':\n          if (entityId) {\n            await apiClient.delete(API_ENDPOINTS.CUSTOMER_BY_ID(entityId));\n            await offlineDb.deleteCustomer(entityId);\n          }\n          break;\n      }\n    } catch (error) {\n      if (!hasConflict) {\n        throw error;\n      }\n    }\n\n    return hasConflict;\n  }\n\n  private async syncJobOperation(\n    operation: string,\n    entityId: string | undefined,\n    payload: any,\n  ): Promise<boolean> {\n    let hasConflict = false;\n\n    try {\n      switch (operation) {\n        case 'create': {\n          const created = await apiClient.post<Job>(API_ENDPOINTS.JOBS, payload);\n          await offlineDb.deleteJob(payload.id);\n          await offlineDb.saveJob(created);\n          await offlineDb.markAsSynced('job', created.id);\n          break;\n        }\n        case 'update':\n          if (entityId) {\n            try {\n              const updated = await apiClient.put<Job>(\n                API_ENDPOINTS.JOB_BY_ID(entityId),\n                payload,\n              );\n              await offlineDb.saveJob(updated);\n              await offlineDb.markAsSynced('job', entityId);\n            } catch (error) {\n              if (error instanceof Error && error.message.includes('409')) {\n                hasConflict = await this.handleConflict('job', entityId, payload);\n              } else {\n                throw error;\n              }\n            }\n          }\n          break;\n        case 'delete':\n          if (entityId) {\n            await apiClient.delete(API_ENDPOINTS.JOB_BY_ID(entityId));\n            await offlineDb.deleteJob(entityId);\n          }\n          break;\n      }\n    } catch (error) {\n      if (!hasConflict) {\n        throw error;\n      }\n    }\n\n    return hasConflict;\n  }\n\n  private async syncMaterialOperation(\n    operation: string,\n    entityId: string | undefined,\n    payload: any,\n  ): Promise<boolean> {\n    let hasConflict = false;\n\n    try {\n      switch (operation) {\n        case 'create': {\n          const created = await apiClient.post<Material>(\n            API_ENDPOINTS.JOB_MATERIALS(payload.jobId),\n            payload,\n          );\n          await offlineDb.saveMaterial(created);\n          await offlineDb.markAsSynced('material', created.id);\n          break;\n        }\n        case 'update':\n          if (entityId) {\n            try {\n              const updated = await apiClient.put<Material>(\n                API_ENDPOINTS.MATERIAL_BY_ID(entityId),\n                payload,\n              );\n              await offlineDb.saveMaterial(updated);\n              await offlineDb.markAsSynced('material', entityId);\n            } catch (error) {\n              if (error instanceof Error && error.message.includes('409')) {\n                hasConflict = await this.handleConflict('material', entityId, payload);\n              } else {\n                throw error;\n              }\n            }\n          }\n          break;\n        case 'delete':\n          if (entityId) {\n            await apiClient.delete(API_ENDPOINTS.MATERIAL_BY_ID(entityId));\n            // Soft delete locally\n            const material = await offlineDb.getMaterials(payload.jobId)\n              .then(materials => materials.find(m => m.id === entityId));\n            if (material) {\n              await offlineDb.saveMaterial({ ...material, isDeleted: true });\n            }\n          }\n          break;\n      }\n    } catch (error) {\n      if (!hasConflict) {\n        throw error;\n      }\n    }\n\n    return hasConflict;\n  }\n\n  private async pullData(): Promise<SyncResult> {\n    const result: SyncResult = {\n      success: true,\n      conflicts: 0,\n      processed: 0,\n      errors: [],\n    };\n\n    const lastSync = await offlineDb.getLastSyncTime();\n    \n    try {\n      // Pull all data if first sync, otherwise pull changes since last sync\n      if (!lastSync) {\n        await this.pullAllData();\n      } else {\n        const pullResult = await this.pullChanges(lastSync);\n        result.conflicts += pullResult.conflicts;\n        result.errors.push(...pullResult.errors);\n      }\n    } catch (error) {\n      result.success = false;\n      result.errors.push({\n        operationId: `pull_${Date.now()}`,\n        error: error instanceof Error ? error.message : 'Pull failed',\n        timestamp: new Date(),\n      });\n    }\n\n    return result;\n  }\n\n  private async pullAllData(): Promise<void> {\n    // Clear existing data first\n    await offlineDb.clearAllData();\n\n    // Pull all customers\n    const customers = await apiClient.get<Customer[]>(API_ENDPOINTS.CUSTOMERS);\n    await offlineDb.bulkSaveCustomers(customers);\n\n    // Pull all jobs\n    const jobs = await apiClient.get<Job[]>(API_ENDPOINTS.JOBS);\n    await offlineDb.bulkSaveJobs(jobs);\n\n    // Pull materials for each job\n    for (const job of jobs) {\n      const materials = await apiClient.get<Material[]>(\n        API_ENDPOINTS.JOB_MATERIALS(job.id),\n      );\n      await offlineDb.bulkSaveMaterials(materials);\n    }\n  }\n\n  private async pullChanges(since: Date): Promise<SyncResult> {\n    const result: SyncResult = {\n      success: true,\n      conflicts: 0,\n      processed: 0,\n      errors: [],\n    };\n\n    try {\n      // Pull changed data since last sync\n      const params = { since: since.toISOString() };\n\n      // Pull changed customers\n      const customers = await apiClient.get<Customer[]>(API_ENDPOINTS.CUSTOMERS, { params });\n      for (const customer of customers) {\n        const conflictResolved = await this.resolveServerConflict('customer', customer);\n        if (conflictResolved) {\n          result.conflicts++;\n        }\n        await offlineDb.saveCustomer(customer);\n        await offlineDb.markAsSynced('customer', customer.id);\n        result.processed++;\n      }\n\n      // Pull changed jobs\n      const jobs = await apiClient.get<Job[]>(API_ENDPOINTS.JOBS, { params });\n      for (const job of jobs) {\n        const conflictResolved = await this.resolveServerConflict('job', job);\n        if (conflictResolved) {\n          result.conflicts++;\n        }\n        await offlineDb.saveJob(job);\n        await offlineDb.markAsSynced('job', job.id);\n        result.processed++;\n      }\n\n      // Pull changed materials\n      for (const job of jobs) {\n        const materials = await apiClient.get<Material[]>(\n          API_ENDPOINTS.JOB_MATERIALS(job.id),\n          { params },\n        );\n        for (const material of materials) {\n          const conflictResolved = await this.resolveServerConflict('material', material);\n          if (conflictResolved) {\n            result.conflicts++;\n          }\n          await offlineDb.saveMaterial(material);\n          await offlineDb.markAsSynced('material', material.id);\n          result.processed++;\n        }\n      }\n    } catch (error) {\n      result.success = false;\n      result.errors.push({\n        operationId: `pull_changes_${Date.now()}`,\n        error: error instanceof Error ? error.message : 'Failed to pull changes',\n        timestamp: new Date(),\n      });\n    }\n\n    return result;\n  }\n\n  // New helper methods for conflict resolution and retry logic\n  private setupConflictResolutionStrategies(): void {\n    // Server wins strategy (default)\n    this.conflictResolutionStrategies.set('server_wins', {\n      name: 'server_wins',\n      resolve: async (serverData, clientData) => serverData,\n    });\n\n    // Client wins strategy\n    this.conflictResolutionStrategies.set('client_wins', {\n      name: 'client_wins', \n      resolve: async (serverData, clientData) => clientData,\n    });\n\n    // Merge strategy (combines both with timestamps)\n    this.conflictResolutionStrategies.set('merge', {\n      name: 'merge',\n      resolve: async (serverData, clientData) => {\n        const merged = { ...serverData };\n        \n        // Use client data for fields that were modified more recently\n        const serverModified = new Date(serverData.updatedAt || serverData.createdAt).getTime();\n        const clientModified = (clientData as any)._lastModified || 0;\n        \n        if (clientModified > serverModified) {\n          // Merge client changes while preserving server structure\n          Object.keys(clientData).forEach(key => {\n            if (!key.startsWith('_') && key !== 'id' && key !== 'createdAt') {\n              merged[key] = clientData[key];\n            }\n          });\n          merged.updatedAt = new Date();\n        }\n        \n        return merged;\n      },\n    });\n  }\n\n  private async handleConflict(\n    entityType: string,\n    entityId: string | undefined,\n    clientData: any\n  ): Promise<boolean> {\n    if (!entityId) {\n      return false;\n    }\n\n    try {\n      // Get current server data\n      let serverData: any;\n      switch (entityType) {\n        case 'customer':\n          serverData = await apiClient.get<Customer>(API_ENDPOINTS.CUSTOMER_BY_ID(entityId));\n          break;\n        case 'job':\n          serverData = await apiClient.get<Job>(API_ENDPOINTS.JOB_BY_ID(entityId));\n          break;\n        case 'material':\n          serverData = await apiClient.get<Material>(API_ENDPOINTS.MATERIAL_BY_ID(entityId));\n          break;\n        default:\n          return false;\n      }\n\n      // Apply conflict resolution strategy\n      const strategy = this.conflictResolutionStrategies.get(SYNC_CONFIG.CONFLICT_RESOLUTION) \n        || this.conflictResolutionStrategies.get('server_wins')!;\n      \n      const resolvedData = await strategy.resolve(serverData, clientData);\n      \n      // Update both local and server with resolved data\n      await this.updateResolvedConflict(entityType, entityId, resolvedData);\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to resolve conflict:', error);\n      return false;\n    }\n  }\n\n  private async resolveServerConflict(entityType: string, serverData: any): Promise<boolean> {\n    // Check if we have local changes for this entity\n    let localData: any;\n    \n    try {\n      switch (entityType) {\n        case 'customer':\n          localData = await offlineDb.getCustomer(serverData.id);\n          break;\n        case 'job':\n          localData = await offlineDb.getJob(serverData.id);\n          break;\n        case 'material':\n          localData = await offlineDb.getMaterials(serverData.jobId)\n            .then(materials => materials.find(m => m.id === serverData.id));\n          break;\n        default:\n          return false;\n      }\n\n      // No local data or already synced, no conflict\n      if (!localData || (localData as any)._synced) {\n        return false;\n      }\n\n      // Check if local data has been modified since last sync\n      const lastSync = await offlineDb.getLastSyncTime();\n      const localModified = (localData as any)._lastModified || 0;\n      \n      if (lastSync && localModified > lastSync.getTime()) {\n        // We have a conflict, resolve it\n        await this.handleConflict(entityType, serverData.id, localData);\n        return true;\n      }\n    } catch (error) {\n      console.error('Error checking for server conflicts:', error);\n    }\n\n    return false;\n  }\n\n  private async updateResolvedConflict(\n    entityType: string,\n    entityId: string,\n    resolvedData: any\n  ): Promise<void> {\n    // Update server\n    switch (entityType) {\n      case 'customer':\n        await apiClient.put(API_ENDPOINTS.CUSTOMER_BY_ID(entityId), resolvedData);\n        await offlineDb.saveCustomer(resolvedData);\n        await offlineDb.markAsSynced('customer', entityId);\n        break;\n      case 'job':\n        await apiClient.put(API_ENDPOINTS.JOB_BY_ID(entityId), resolvedData);\n        await offlineDb.saveJob(resolvedData);\n        await offlineDb.markAsSynced('job', entityId);\n        break;\n      case 'material':\n        await apiClient.put(API_ENDPOINTS.MATERIAL_BY_ID(entityId), resolvedData);\n        await offlineDb.saveMaterial(resolvedData);\n        await offlineDb.markAsSynced('material', entityId);\n        break;\n    }\n  }\n\n  private async handleEntityDeleted(entityType: string, entityId: string): Promise<void> {\n    // Entity was deleted on server, remove from local storage\n    switch (entityType) {\n      case 'customer':\n        await offlineDb.deleteCustomer(entityId);\n        break;\n      case 'job':\n        await offlineDb.deleteJob(entityId);\n        break;\n      case 'material':\n        const materials = await offlineDb.getMaterials('');\n        const material = materials.find(m => m.id === entityId);\n        if (material) {\n          await offlineDb.saveMaterial({ ...material, isDeleted: true });\n        }\n        break;\n    }\n  }\n\n  private async handleOperationFailure(operation: SyncOperation, error: Error): Promise<void> {\n    const opWithAttempts = operation as any;\n    const maxRetries = SYNC_CONFIG.MAX_RETRY_ATTEMPTS;\n    \n    if (opWithAttempts._attempts >= maxRetries) {\n      // Max retries reached, mark as failed\n      await offlineDb.updateSyncOperationStatus(operation.id, 'failed', error.message);\n      return;\n    }\n\n    // Schedule retry with exponential backoff\n    const retryDelay = SYNC_CONFIG.RETRY_DELAY * Math.pow(2, opWithAttempts._attempts);\n    \n    // Clear any existing retry timeout\n    if (this.retryTimeouts.has(operation.id)) {\n      clearTimeout(this.retryTimeouts.get(operation.id));\n    }\n\n    // Schedule retry\n    const timeout = setTimeout(async () => {\n      if (navigator.onLine) {\n        try {\n          await offlineDb.updateSyncOperationStatus(operation.id, 'pending');\n          // The operation will be picked up in the next sync cycle\n          this.sync();\n        } catch (retryError) {\n          console.error('Retry scheduling failed:', retryError);\n        }\n      }\n      this.retryTimeouts.delete(operation.id);\n    }, retryDelay);\n\n    this.retryTimeouts.set(operation.id, timeout);\n    await offlineDb.updateSyncOperationStatus(operation.id, 'failed', error.message);\n  }\n\n  private async resumeFailedOperations(): Promise<void> {\n    const failedOps = await offlineDb.getFailedSyncOperations();\n    \n    for (const operation of failedOps) {\n      const opWithAttempts = operation as any;\n      if (opWithAttempts._attempts < SYNC_CONFIG.MAX_RETRY_ATTEMPTS) {\n        // Reset to pending for retry\n        await offlineDb.updateSyncOperationStatus(operation.id, 'pending');\n      }\n    }\n  }\n\n  // Public method to force sync\n  async forceSync(): Promise<SyncResult> {\n    return await this.sync();\n  }\n\n  // Add operation to sync queue with priority\n  async queueOperation(\n    operation: Omit<SyncOperation, 'id'>,\n    priority?: number\n  ): Promise<string> {\n    const entityPriority = this.syncPriorities[operation.entityType as keyof typeof this.syncPriorities] || 5;\n    const finalPriority = priority !== undefined ? priority : entityPriority;\n    \n    return await offlineDb.addToSyncQueue(operation, finalPriority);\n  }\n\n  // Clear all sync operations\n  async clearSyncQueue(): Promise<void> {\n    await offlineDb.clearSyncQueue();\n    // Clear any pending retry timeouts\n    this.retryTimeouts.forEach(timeout => clearTimeout(timeout));\n    this.retryTimeouts.clear();\n  }\n\n  // Get detailed sync statistics\n  async getSyncStatistics(): Promise<{\n    pendingOperations: number;\n    failedOperations: number;\n    inProgressOperations: number;\n    lastSyncTime?: Date;\n    nextRetryTime?: Date;\n  }> {\n    const [pendingOps, failedOps] = await Promise.all([\n      offlineDb.getPendingSyncOperations(),\n      offlineDb.getFailedSyncOperations(),\n    ]);\n    \n    const allOps = await offlineDb.getSyncQueue();\n    const inProgressOps = allOps.filter(op => (op as any)._status === 'processing');\n    \n    // Find next retry time\n    let nextRetryTime: Date | undefined;\n    this.retryTimeouts.forEach((timeout, operationId) => {\n      // This is a simplified approach - in a real implementation you'd track retry times\n      const retryTime = new Date(Date.now() + SYNC_CONFIG.RETRY_DELAY);\n      if (!nextRetryTime || retryTime < nextRetryTime) {\n        nextRetryTime = retryTime;\n      }\n    });\n\n    return {\n      pendingOperations: pendingOps.length,\n      failedOperations: failedOps.length,\n      inProgressOperations: inProgressOps.length,\n      lastSyncTime: await offlineDb.getLastSyncTime() || undefined,\n      nextRetryTime,\n    };\n  }\n\n  // Get current sync status (enhanced)\n  async getSyncStatus(): Promise<SyncStatus> {\n    const [pendingOps, failedOps] = await Promise.all([\n      offlineDb.getPendingSyncOperations(),\n      offlineDb.getFailedSyncOperations(),\n    ]);\n    const lastSync = await offlineDb.getLastSyncTime();\n    \n    return {\n      lastSyncAt: lastSync || undefined,\n      pendingOperations: pendingOps.length,\n      syncInProgress: this.syncInProgress,\n      errors: [\n        ...syncStore.getState().errors,\n        ...failedOps.map(op => ({\n          operationId: op.id,\n          error: `Failed operation: ${op.operation} ${op.entityType}`,\n          timestamp: new Date(op.timestamp),\n        })),\n      ],\n    };\n  }\n}\n\nexport const syncService = new SyncService();","import { openDB, DBSchema, IDBPDatabase } from 'idb';\n// Inline type definitions\ninterface Customer {\n  id: string;\n  name: string;\n  email?: string;\n  phone?: string;\n  address: string;\n  isArchived?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface Job {\n  id: string;\n  customerId: string;\n  title: string;\n  description?: string;\n  status: 'pending' | 'in_progress' | 'completed' | 'cancelled';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  scheduledDate?: string;\n  completedDate?: string;\n  estimatedHours?: number;\n  actualHours?: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface Material {\n  id: string;\n  name: string;\n  description?: string;\n  unit: string;\n  cost: number;\n  supplier?: string;\n  isArchived?: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface SyncOperation {\n  id: string;\n  operation: 'create' | 'update' | 'delete';\n  entityType: 'customer' | 'job' | 'material' | 'user';\n  entityId?: string;\n  payload: any;\n  timestamp: string;\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  attempts: number;\n  lastAttemptAt?: string;\n  errorMessage?: string;\n}\n\ninterface CacheMetadata {\n  lastUpdated: string;\n  priority: 'critical' | 'important' | 'normal';\n  expiresAt?: string;\n  version: number;\n}\n\ninterface OfflineCache extends DBSchema {\n  // Core construction data\n  jobs: {\n    key: string;\n    value: Job & { _metadata: CacheMetadata };\n    indexes: {\n      'by-status': string;\n      'by-priority': string;\n      'by-assigned-user': string;\n      'by-customer': string;\n      'by-date': string;\n    };\n  };\n  customers: {\n    key: string;\n    value: Customer & { _metadata: CacheMetadata };\n    indexes: {\n      'by-name': string;\n      'by-active': number;\n      'by-priority': string;\n    };\n  };\n  materials: {\n    key: string;\n    value: Material & { _metadata: CacheMetadata };\n    indexes: {\n      'by-job': string;\n      'by-needed': number;\n      'by-priority': string;\n    };\n  };\n  \n  // Field-specific caches\n  jobPhotos: {\n    key: string;\n    value: {\n      id: string;\n      jobId: string;\n      photoData: ArrayBuffer;\n      filename: string;\n      timestamp: string;\n      _metadata: CacheMetadata;\n    };\n    indexes: {\n      'by-job': string;\n      'by-timestamp': string;\n    };\n  };\n  \n  jobNotes: {\n    key: string;\n    value: {\n      id: string;\n      jobId: string;\n      note: string;\n      timestamp: string;\n      userId: string;\n      _metadata: CacheMetadata;\n    };\n    indexes: {\n      'by-job': string;\n      'by-user': string;\n      'by-timestamp': string;\n    };\n  };\n  \n  // Offline operations queue\n  syncQueue: {\n    key: string;\n    value: SyncOperation & { \n      retryCount: number;\n      lastAttempt?: string;\n      _metadata: CacheMetadata;\n    };\n    indexes: {\n      'by-priority': string;\n      'by-timestamp': string;\n      'by-retry-count': number;\n    };\n  };\n  \n  // App metadata\n  cacheMetadata: {\n    key: string;\n    value: any;\n  };\n}\n\nclass OfflineCacheService {\n  private db: IDBPDatabase<OfflineCache> | null = null;\n  private readonly DB_NAME = 'khs-crm-field-cache';\n  private readonly DB_VERSION = 2;\n  private readonly CACHE_PRIORITIES = {\n    ACTIVE_JOBS: 'critical' as const,\n    TODAY_JOBS: 'critical' as const,\n    ASSIGNED_JOBS: 'important' as const,\n    ACTIVE_CUSTOMERS: 'important' as const,\n    NEEDED_MATERIALS: 'critical' as const,\n    JOB_PHOTOS: 'important' as const,\n    JOB_NOTES: 'important' as const,\n    COMPLETED_JOBS: 'normal' as const,\n    ARCHIVED_DATA: 'normal' as const\n  };\n\n  async initialize(): Promise<void> {\n    if (this.db) return;\n\n    this.db = await openDB<OfflineCache>(this.DB_NAME, this.DB_VERSION, {\n      upgrade(db, oldVersion, newVersion, transaction) {\n        console.log(`Upgrading offline cache from version ${oldVersion} to ${newVersion}`);\n\n        // Jobs store\n        if (!db.objectStoreNames.contains('jobs')) {\n          const jobStore = db.createObjectStore('jobs', { keyPath: 'id' });\n          jobStore.createIndex('by-status', 'status');\n          jobStore.createIndex('by-priority', '_metadata.priority');\n          jobStore.createIndex('by-assigned-user', 'assignments.userId');\n          jobStore.createIndex('by-customer', 'customerId');\n          jobStore.createIndex('by-date', 'startDate');\n        }\n\n        // Customers store\n        if (!db.objectStoreNames.contains('customers')) {\n          const customerStore = db.createObjectStore('customers', { keyPath: 'id' });\n          customerStore.createIndex('by-name', 'name');\n          customerStore.createIndex('by-active', 'isArchived');\n          customerStore.createIndex('by-priority', '_metadata.priority');\n        }\n\n        // Materials store\n        if (!db.objectStoreNames.contains('materials')) {\n          const materialStore = db.createObjectStore('materials', { keyPath: 'id' });\n          materialStore.createIndex('by-job', 'jobId');\n          materialStore.createIndex('by-needed', 'needed');\n          materialStore.createIndex('by-priority', '_metadata.priority');\n        }\n\n        // Job photos store (new in v2)\n        if (!db.objectStoreNames.contains('jobPhotos')) {\n          const photoStore = db.createObjectStore('jobPhotos', { keyPath: 'id' });\n          photoStore.createIndex('by-job', 'jobId');\n          photoStore.createIndex('by-timestamp', 'timestamp');\n        }\n\n        // Job notes store (new in v2)\n        if (!db.objectStoreNames.contains('jobNotes')) {\n          const notesStore = db.createObjectStore('jobNotes', { keyPath: 'id' });\n          notesStore.createIndex('by-job', 'jobId');\n          notesStore.createIndex('by-user', 'userId');\n          notesStore.createIndex('by-timestamp', 'timestamp');\n        }\n\n        // Enhanced sync queue\n        if (!db.objectStoreNames.contains('syncQueue')) {\n          const syncStore = db.createObjectStore('syncQueue', { keyPath: 'id' });\n          syncStore.createIndex('by-priority', '_metadata.priority');\n          syncStore.createIndex('by-timestamp', 'timestamp');\n          syncStore.createIndex('by-retry-count', 'retryCount');\n        }\n\n        // Cache metadata\n        if (!db.objectStoreNames.contains('cacheMetadata')) {\n          db.createObjectStore('cacheMetadata', { keyPath: 'key' });\n        }\n      },\n    });\n\n    // Initialize critical data caching on startup\n    await this.initializeCriticalCache();\n  }\n\n  private async ensureDb(): Promise<IDBPDatabase<OfflineCache>> {\n    if (!this.db) {\n      await this.initialize();\n    }\n    return this.db!;\n  }\n\n  private createMetadata(priority: 'critical' | 'important' | 'normal', ttl?: number): CacheMetadata {\n    const now = new Date().toISOString();\n    return {\n      lastUpdated: now,\n      priority,\n      expiresAt: ttl ? new Date(Date.now() + ttl).toISOString() : undefined,\n      version: 1\n    };\n  }\n\n  // Initialize critical data for field workers\n  private async initializeCriticalCache(): Promise<void> {\n    const db = await this.ensureDb();\n    \n    try {\n      // Mark critical data that should always be available offline\n      const criticalJobStatuses = ['active', 'in-progress', 'pending'];\n      const today = new Date().toISOString().split('T')[0];\n\n      await Promise.all([\n        this.setCacheMetadata('lastCriticalSync', new Date().toISOString()),\n        this.setCacheMetadata('fieldWorkerPreferences', {\n          preloadTodaysJobs: true,\n          preloadAssignedJobs: true,\n          preloadActiveMaterials: true,\n          maxPhotoCache: 100, // MB\n          syncInterval: 300000 // 5 minutes\n        })\n      ]);\n    } catch (error) {\n      console.error('Failed to initialize critical cache:', error);\n    }\n  }\n\n  // Job operations optimized for field work\n  async cacheJob(job: Job, priority?: 'critical' | 'important' | 'normal'): Promise<void> {\n    const db = await this.ensureDb();\n    \n    // Determine priority based on job characteristics\n    let jobPriority = priority || this.CACHE_PRIORITIES.COMPLETED_JOBS;\n    \n    const today = new Date().toISOString().split('T')[0];\n    const jobDate = new Date(job.startDate || job.createdAt).toISOString().split('T')[0];\n    \n    if (['active', 'in-progress'].includes(job.status)) {\n      jobPriority = this.CACHE_PRIORITIES.ACTIVE_JOBS;\n    } else if (jobDate === today) {\n      jobPriority = this.CACHE_PRIORITIES.TODAY_JOBS;\n    } else if (job.assignments?.some(a => a.userId === this.getCurrentUserId())) {\n      jobPriority = this.CACHE_PRIORITIES.ASSIGNED_JOBS;\n    }\n\n    const cachedJob = {\n      ...job,\n      _metadata: this.createMetadata(jobPriority, this.getTTL(jobPriority))\n    };\n\n    await db.put('jobs', cachedJob);\n  }\n\n  async getCachedJobs(filters?: {\n    status?: string[];\n    assignedTo?: string;\n    priority?: 'critical' | 'important' | 'normal';\n    includeExpired?: boolean;\n  }): Promise<Job[]> {\n    const db = await this.ensureDb();\n    let jobs = await db.getAll('jobs');\n\n    // Filter expired data unless explicitly requested\n    if (!filters?.includeExpired) {\n      jobs = jobs.filter(job => !this.isExpired(job._metadata));\n    }\n\n    // Apply filters\n    if (filters?.status) {\n      jobs = jobs.filter(job => filters.status!.includes(job.status));\n    }\n    \n    if (filters?.assignedTo) {\n      jobs = jobs.filter(job => \n        job.assignments?.some(a => a.userId === filters.assignedTo)\n      );\n    }\n    \n    if (filters?.priority) {\n      jobs = jobs.filter(job => job._metadata.priority === filters.priority);\n    }\n\n    // Sort by priority and date\n    return jobs\n      .sort((a, b) => {\n        const priorityOrder = { critical: 3, important: 2, normal: 1 };\n        const aPriority = priorityOrder[a._metadata.priority];\n        const bPriority = priorityOrder[b._metadata.priority];\n        \n        if (aPriority !== bPriority) {\n          return bPriority - aPriority;\n        }\n        \n        return new Date(b.startDate || b.createdAt).getTime() - \n               new Date(a.startDate || a.createdAt).getTime();\n      })\n      .map(({ _metadata, ...job }) => job);\n  }\n\n  // Material operations for field shopping lists\n  async cacheMaterials(materials: Material[], jobId: string): Promise<void> {\n    const db = await this.ensureDb();\n    const tx = db.transaction('materials', 'readwrite');\n    \n    await Promise.all(\n      materials.map(material => {\n        const priority = material.needed ? \n          this.CACHE_PRIORITIES.NEEDED_MATERIALS : \n          this.CACHE_PRIORITIES.COMPLETED_JOBS;\n          \n        const cachedMaterial = {\n          ...material,\n          jobId,\n          _metadata: this.createMetadata(priority, this.getTTL(priority))\n        };\n        \n        return tx.store.put(cachedMaterial);\n      })\n    );\n    \n    await tx.done;\n  }\n\n  async getCachedMaterials(jobId?: string, onlyNeeded?: boolean): Promise<Material[]> {\n    const db = await this.ensureDb();\n    \n    let materials: Array<Material & { _metadata: CacheMetadata }>;\n    \n    if (jobId) {\n      materials = await db.getAllFromIndex('materials', 'by-job', jobId);\n    } else {\n      materials = await db.getAll('materials');\n    }\n\n    // Filter out expired and apply filters\n    materials = materials.filter(material => !this.isExpired(material._metadata));\n    \n    if (onlyNeeded) {\n      materials = materials.filter(material => material.needed);\n    }\n\n    return materials\n      .sort((a, b) => {\n        // Needed materials first, then by priority\n        if (a.needed !== b.needed) {\n          return a.needed ? -1 : 1;\n        }\n        \n        const priorityOrder = { critical: 3, important: 2, normal: 1 };\n        const aPriority = priorityOrder[a._metadata.priority];\n        const bPriority = priorityOrder[b._metadata.priority];\n        \n        return bPriority - aPriority;\n      })\n      .map(({ _metadata, ...material }) => material);\n  }\n\n  // Photo caching for job documentation\n  async cacheJobPhoto(jobId: string, photoData: ArrayBuffer, filename: string): Promise<string> {\n    const db = await this.ensureDb();\n    \n    const photoId = `photo_${jobId}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    \n    const cachedPhoto = {\n      id: photoId,\n      jobId,\n      photoData,\n      filename,\n      timestamp: new Date().toISOString(),\n      _metadata: this.createMetadata(this.CACHE_PRIORITIES.JOB_PHOTOS, 7 * 24 * 60 * 60 * 1000) // 7 days\n    };\n\n    await db.put('jobPhotos', cachedPhoto);\n    \n    // Cleanup old photos if we exceed storage limits\n    await this.cleanupPhotoCache();\n    \n    return photoId;\n  }\n\n  async getCachedJobPhotos(jobId: string): Promise<Array<{\n    id: string;\n    photoData: ArrayBuffer;\n    filename: string;\n    timestamp: string;\n  }>> {\n    const db = await this.ensureDb();\n    const photos = await db.getAllFromIndex('jobPhotos', 'by-job', jobId);\n    \n    return photos\n      .filter(photo => !this.isExpired(photo._metadata))\n      .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())\n      .map(({ _metadata, ...photo }) => photo);\n  }\n\n  // Sync queue with priority handling\n  async addToSyncQueue(operation: Omit<SyncOperation, 'id'>, priority: 'critical' | 'important' | 'normal' = 'normal'): Promise<void> {\n    const db = await this.ensureDb();\n    \n    const id = `sync_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const syncOperation = {\n      ...operation,\n      id,\n      retryCount: 0,\n      _metadata: this.createMetadata(priority)\n    };\n\n    await db.add('syncQueue', syncOperation);\n  }\n\n  async getSyncQueue(priority?: 'critical' | 'important' | 'normal'): Promise<SyncOperation[]> {\n    const db = await this.ensureDb();\n    \n    let operations;\n    if (priority) {\n      operations = await db.getAllFromIndex('syncQueue', 'by-priority', priority);\n    } else {\n      operations = await db.getAll('syncQueue');\n    }\n\n    return operations\n      .sort((a, b) => {\n        // Critical operations first, then by timestamp\n        const priorityOrder = { critical: 3, important: 2, normal: 1 };\n        const aPriority = priorityOrder[a._metadata.priority];\n        const bPriority = priorityOrder[b._metadata.priority];\n        \n        if (aPriority !== bPriority) {\n          return bPriority - aPriority;\n        }\n        \n        return new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime();\n      })\n      .map(({ _metadata, retryCount, lastAttempt, ...operation }) => operation);\n  }\n\n  // Cache maintenance\n  async cleanupExpiredCache(): Promise<void> {\n    const db = await this.ensureDb();\n    const stores = ['jobs', 'customers', 'materials', 'jobPhotos', 'jobNotes'];\n    \n    for (const storeName of stores) {\n      const tx = db.transaction(storeName, 'readwrite');\n      const store = tx.objectStore(storeName);\n      const cursor = await store.openCursor();\n      \n      if (cursor) {\n        do {\n          const value = cursor.value as any;\n          if (value._metadata && this.isExpired(value._metadata)) {\n            await cursor.delete();\n          }\n        } while (await cursor.continue());\n      }\n      \n      await tx.done;\n    }\n  }\n\n  private async cleanupPhotoCache(): Promise<void> {\n    const db = await this.ensureDb();\n    \n    // Check storage usage\n    const usage = await this.getStorageUsage();\n    const maxPhotoStorage = 100 * 1024 * 1024; // 100MB\n    \n    if (usage > maxPhotoStorage) {\n      // Remove oldest photos first\n      const photos = await db.getAllFromIndex('jobPhotos', 'by-timestamp');\n      const sortedPhotos = photos.sort((a, b) => \n        new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime()\n      );\n      \n      // Remove oldest 20% of photos\n      const toRemove = sortedPhotos.slice(0, Math.ceil(photos.length * 0.2));\n      \n      for (const photo of toRemove) {\n        await db.delete('jobPhotos', photo.id);\n      }\n    }\n  }\n\n  // Utility methods\n  private isExpired(metadata: CacheMetadata): boolean {\n    if (!metadata.expiresAt) return false;\n    return new Date(metadata.expiresAt) < new Date();\n  }\n\n  private getTTL(priority: 'critical' | 'important' | 'normal'): number {\n    switch (priority) {\n      case 'critical': return 24 * 60 * 60 * 1000; // 24 hours\n      case 'important': return 12 * 60 * 60 * 1000; // 12 hours\n      case 'normal': return 6 * 60 * 60 * 1000; // 6 hours\n    }\n  }\n\n  private getCurrentUserId(): string {\n    // This would get the current user ID from your auth system\n    return localStorage.getItem('currentUserId') || 'unknown';\n  }\n\n  private async getStorageUsage(): Promise<number> {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      const estimate = await navigator.storage.estimate();\n      return estimate.usage || 0;\n    }\n    return 0;\n  }\n\n  private async setCacheMetadata(key: string, value: any): Promise<void> {\n    const db = await this.ensureDb();\n    await db.put('cacheMetadata', { key, value });\n  }\n\n  async getCacheMetadata(key: string): Promise<any> {\n    const db = await this.ensureDb();\n    const result = await db.get('cacheMetadata', key);\n    return result?.value;\n  }\n}\n\nexport const offlineCacheService = new OfflineCacheService();","import { offlineCacheService } from './offline-cache.service';\nimport { syncService } from './sync.service';\nimport { syncStore } from '@stores/sync.store';\n\ninterface SyncConfig {\n  backgroundSync: boolean;\n  syncInterval: number;\n  retryInterval: number;\n  maxRetries: number;\n  prioritizedSync: boolean;\n}\n\ninterface SyncStrategy {\n  name: string;\n  condition: () => boolean;\n  priority: 'critical' | 'important' | 'normal';\n  execute: () => Promise<void>;\n}\n\nclass BackgroundSyncService {\n  private syncWorker: Worker | null = null;\n  private periodicSyncRegistration: any = null;\n  private config: SyncConfig = {\n    backgroundSync: true,\n    syncInterval: 5 * 60 * 1000, // 5 minutes\n    retryInterval: 30 * 1000, // 30 seconds\n    maxRetries: 3,\n    prioritizedSync: true\n  };\n  private isInitialized = false;\n  private syncStrategies: SyncStrategy[] = [];\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    try {\n      await this.setupBackgroundSync();\n      await this.setupPeriodicSync();\n      this.setupSyncStrategies();\n      this.setupNetworkListeners();\n      \n      this.isInitialized = true;\n      console.log('Background sync service initialized');\n    } catch (error) {\n      console.error('Failed to initialize background sync:', error);\n    }\n  }\n\n  private async setupBackgroundSync(): Promise<void> {\n    if ('serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype) {\n      try {\n        const registration = await navigator.serviceWorker.ready;\n        \n        // Register background sync for critical construction data\n        await registration.sync.register('construction-data-sync');\n        \n        console.log('Background sync registered for construction data');\n      } catch (error) {\n        console.warn('Background sync not supported or failed:', error);\n      }\n    }\n  }\n\n  private async setupPeriodicSync(): Promise<void> {\n    if ('serviceWorker' in navigator && 'periodicSync' in window.ServiceWorkerRegistration.prototype) {\n      try {\n        const registration = await navigator.serviceWorker.ready;\n        \n        // Register periodic sync for field data refresh (if supported)\n        const status = await navigator.permissions.query({ name: 'periodic-background-sync' as any });\n        \n        if (status.state === 'granted') {\n          await (registration as any).periodicSync.register('construction-data-refresh', {\n            minInterval: this.config.syncInterval\n          });\n          \n          console.log('Periodic sync registered for construction data');\n        }\n      } catch (error) {\n        console.warn('Periodic sync not supported:', error);\n      }\n    }\n  }\n\n  private setupSyncStrategies(): void {\n    this.syncStrategies = [\n      {\n        name: 'Critical Field Data Sync',\n        condition: () => navigator.onLine && this.hasCriticalPendingData(),\n        priority: 'critical',\n        execute: async () => {\n          await this.syncCriticalFieldData();\n        }\n      },\n      {\n        name: 'Active Jobs Sync',\n        condition: () => navigator.onLine && this.hasActiveJobsData(),\n        priority: 'important',\n        execute: async () => {\n          await this.syncActiveJobs();\n        }\n      },\n      {\n        name: 'Materials Updates',\n        condition: () => navigator.onLine && this.hasMaterialUpdates(),\n        priority: 'important',\n        execute: async () => {\n          await this.syncMaterialUpdates();\n        }\n      },\n      {\n        name: 'Photo Uploads',\n        condition: () => navigator.onLine && this.hasPendingPhotos(),\n        priority: 'normal',\n        execute: async () => {\n          await this.syncJobPhotos();\n        }\n      },\n      {\n        name: 'General Data Sync',\n        condition: () => navigator.onLine,\n        priority: 'normal',\n        execute: async () => {\n          await syncService.sync();\n        }\n      }\n    ];\n  }\n\n  private setupNetworkListeners(): void {\n    // Enhanced network monitoring for field conditions\n    window.addEventListener('online', async () => {\n      console.log('Network connection restored');\n      syncStore.getState().setOnline(true);\n      \n      // Immediate sync of critical data when coming online\n      await this.executeImmediateSync();\n    });\n\n    window.addEventListener('offline', () => {\n      console.log('Network connection lost');\n      syncStore.getState().setOnline(false);\n    });\n\n    // Monitor connection quality changes\n    if ('connection' in navigator) {\n      const connection = (navigator as any).connection;\n      \n      const handleConnectionChange = () => {\n        const { effectiveType, downlink, rtt } = connection;\n        console.log(`Connection changed: ${effectiveType}, downlink: ${downlink}, rtt: ${rtt}`);\n        \n        // Adjust sync strategy based on connection quality\n        this.adjustSyncStrategy(effectiveType, downlink, rtt);\n      };\n      \n      connection.addEventListener('change', handleConnectionChange);\n    }\n  }\n\n  private async executeImmediateSync(): Promise<void> {\n    if (!navigator.onLine) return;\n\n    try {\n      syncStore.getState().setSyncing(true);\n      \n      // Execute sync strategies in priority order\n      const prioritizedStrategies = this.syncStrategies\n        .filter(strategy => strategy.condition())\n        .sort((a, b) => {\n          const priorityOrder = { critical: 3, important: 2, normal: 1 };\n          return priorityOrder[b.priority] - priorityOrder[a.priority];\n        });\n\n      for (const strategy of prioritizedStrategies) {\n        try {\n          console.log(`Executing sync strategy: ${strategy.name}`);\n          await strategy.execute();\n        } catch (error) {\n          console.error(`Sync strategy ${strategy.name} failed:`, error);\n        }\n      }\n    } catch (error) {\n      console.error('Immediate sync failed:', error);\n      syncStore.getState().addError({\n        operationId: `immediate_sync_${Date.now()}`,\n        error: error instanceof Error ? error.message : 'Immediate sync failed',\n        timestamp: new Date()\n      });\n    } finally {\n      syncStore.getState().setSyncing(false);\n    }\n  }\n\n  private adjustSyncStrategy(effectiveType: string, downlink: number, rtt: number): void {\n    // Adjust sync behavior based on connection quality\n    let newInterval = this.config.syncInterval;\n    \n    switch (effectiveType) {\n      case 'slow-2g':\n      case '2g':\n        newInterval = 15 * 60 * 1000; // 15 minutes for slow connections\n        break;\n      case '3g':\n        newInterval = 10 * 60 * 1000; // 10 minutes for 3G\n        break;\n      case '4g':\n      default:\n        newInterval = 5 * 60 * 1000; // 5 minutes for good connections\n        break;\n    }\n    \n    if (newInterval !== this.config.syncInterval) {\n      this.config.syncInterval = newInterval;\n      console.log(`Adjusted sync interval to ${newInterval / 60000} minutes based on connection: ${effectiveType}`);\n    }\n  }\n\n  // Check for different types of pending data\n  private async hasCriticalPendingData(): Promise<boolean> {\n    try {\n      const criticalOps = await offlineCacheService.getSyncQueue('critical');\n      return criticalOps.length > 0;\n    } catch {\n      return false;\n    }\n  }\n\n  private async hasActiveJobsData(): Promise<boolean> {\n    try {\n      const activeJobs = await offlineCacheService.getCachedJobs({\n        status: ['active', 'in-progress'],\n        priority: 'critical'\n      });\n      return activeJobs.length > 0;\n    } catch {\n      return false;\n    }\n  }\n\n  private async hasMaterialUpdates(): Promise<boolean> {\n    try {\n      const pendingMaterials = await offlineCacheService.getSyncQueue('important');\n      return pendingMaterials.some(op => op.entityType === 'material');\n    } catch {\n      return false;\n    }\n  }\n\n  private async hasPendingPhotos(): Promise<boolean> {\n    try {\n      // Check for cached photos that haven't been uploaded\n      const metadata = await offlineCacheService.getCacheMetadata('pendingPhotoUploads');\n      return metadata && metadata.length > 0;\n    } catch {\n      return false;\n    }\n  }\n\n  // Specialized sync methods for construction data\n  private async syncCriticalFieldData(): Promise<void> {\n    console.log('Syncing critical field data...');\n    \n    try {\n      // Sync in order of priority for field workers\n      await Promise.allSettled([\n        this.syncJobStatusUpdates(),\n        this.syncMaterialPurchases(),\n        this.syncCustomerContacts(),\n        this.syncJobAssignments()\n      ]);\n    } catch (error) {\n      console.error('Critical field data sync failed:', error);\n      throw error;\n    }\n  }\n\n  private async syncActiveJobs(): Promise<void> {\n    console.log('Syncing active jobs...');\n    \n    try {\n      const activeJobOps = await offlineCacheService.getSyncQueue();\n      const jobOps = activeJobOps.filter(op => \n        op.entityType === 'job' && \n        ['active', 'in-progress'].includes(op.payload?.status)\n      );\n\n      for (const op of jobOps) {\n        await this.processSyncOperation(op);\n      }\n    } catch (error) {\n      console.error('Active jobs sync failed:', error);\n      throw error;\n    }\n  }\n\n  private async syncMaterialUpdates(): Promise<void> {\n    console.log('Syncing material updates...');\n    \n    try {\n      const materialOps = await offlineCacheService.getSyncQueue();\n      const filteredOps = materialOps.filter(op => op.entityType === 'material');\n\n      // Prioritize needed materials and purchase updates\n      const prioritized = filteredOps.sort((a, b) => {\n        const aNeeded = a.payload?.needed ? 1 : 0;\n        const bNeeded = b.payload?.needed ? 1 : 0;\n        return bNeeded - aNeeded;\n      });\n\n      for (const op of prioritized) {\n        await this.processSyncOperation(op);\n      }\n    } catch (error) {\n      console.error('Material updates sync failed:', error);\n      throw error;\n    }\n  }\n\n  private async syncJobPhotos(): Promise<void> {\n    console.log('Syncing job photos...');\n    \n    try {\n      // This would integrate with your photo upload API\n      const pendingPhotos = await offlineCacheService.getCacheMetadata('pendingPhotoUploads') || [];\n      \n      for (const photoId of pendingPhotos) {\n        try {\n          // Upload photo logic would go here\n          await this.uploadJobPhoto(photoId);\n          \n          // Remove from pending list\n          const remaining = pendingPhotos.filter(id => id !== photoId);\n          await offlineCacheService.getCacheMetadata('pendingPhotoUploads', remaining);\n        } catch (error) {\n          console.error(`Failed to upload photo ${photoId}:`, error);\n        }\n      }\n    } catch (error) {\n      console.error('Job photos sync failed:', error);\n    }\n  }\n\n  // Individual sync operations\n  private async syncJobStatusUpdates(): Promise<void> {\n    const statusOps = await offlineCacheService.getSyncQueue();\n    const jobStatusOps = statusOps.filter(op => \n      op.entityType === 'job' && \n      op.operation === 'update' &&\n      op.payload?.status\n    );\n\n    for (const op of jobStatusOps) {\n      await this.processSyncOperation(op);\n    }\n  }\n\n  private async syncMaterialPurchases(): Promise<void> {\n    const materialOps = await offlineCacheService.getSyncQueue();\n    const purchaseOps = materialOps.filter(op => \n      op.entityType === 'material' && \n      op.payload?.purchased !== undefined\n    );\n\n    for (const op of purchaseOps) {\n      await this.processSyncOperation(op);\n    }\n  }\n\n  private async syncCustomerContacts(): Promise<void> {\n    const customerOps = await offlineCacheService.getSyncQueue();\n    const contactOps = customerOps.filter(op => op.entityType === 'customer');\n\n    for (const op of contactOps) {\n      await this.processSyncOperation(op);\n    }\n  }\n\n  private async syncJobAssignments(): Promise<void> {\n    const jobOps = await offlineCacheService.getSyncQueue();\n    const assignmentOps = jobOps.filter(op => \n      op.entityType === 'job' && \n      op.payload?.assignments\n    );\n\n    for (const op of assignmentOps) {\n      await this.processSyncOperation(op);\n    }\n  }\n\n  private async processSyncOperation(operation: any): Promise<void> {\n    try {\n      // Use existing sync service to process the operation\n      await syncService.forceSync();\n      console.log(`Processed sync operation: ${operation.id}`);\n    } catch (error) {\n      console.error(`Failed to process sync operation ${operation.id}:`, error);\n      throw error;\n    }\n  }\n\n  private async uploadJobPhoto(photoId: string): Promise<void> {\n    // This would implement the actual photo upload logic\n    // For now, just simulate success\n    console.log(`Uploading photo: ${photoId}`);\n    \n    // Simulate upload delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    console.log(`Photo uploaded successfully: ${photoId}`);\n  }\n\n  // Public methods\n  async triggerSync(priority?: 'critical' | 'important' | 'normal'): Promise<void> {\n    if (!navigator.onLine) {\n      console.log('Cannot sync while offline');\n      return;\n    }\n\n    const strategies = priority \n      ? this.syncStrategies.filter(s => s.priority === priority)\n      : this.syncStrategies;\n\n    for (const strategy of strategies) {\n      if (strategy.condition()) {\n        try {\n          await strategy.execute();\n        } catch (error) {\n          console.error(`Sync strategy ${strategy.name} failed:`, error);\n        }\n      }\n    }\n  }\n\n  async scheduleBackgroundSync(tag: string, options?: any): Promise<void> {\n    if ('serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype) {\n      try {\n        const registration = await navigator.serviceWorker.ready;\n        await registration.sync.register(tag);\n        console.log(`Background sync scheduled: ${tag}`);\n      } catch (error) {\n        console.error(`Failed to schedule background sync: ${tag}`, error);\n      }\n    }\n  }\n\n  getConfig(): SyncConfig {\n    return { ...this.config };\n  }\n\n  updateConfig(newConfig: Partial<SyncConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    console.log('Background sync config updated:', this.config);\n  }\n}\n\nexport const backgroundSyncService = new BackgroundSyncService();","/**\n * Service Layer Index\n * \n * This file exports all the service modules for the KHS CRM application.\n * Services provide the business logic and data access layer for the application.\n */\n\n// Core services\nexport { apiClient } from './api.service';\n// Temporarily use simple version to avoid initialization errors\nexport { offlineDb } from './db.service.simple';\n// export { offlineDb } from './db.service';\nexport { syncService } from './sync.service';\n\n// Offline-first services\nexport { offlineAuthService } from './offline-auth.service';\nexport { offlineDataService } from './offline-data.service';\nexport { optimisticUpdatesService } from './optimistic-updates.service';\n\n// Import for internal use\nimport { offlineDb } from './db.service.simple';\nimport { syncService } from './sync.service';\nimport { offlineAuthService } from './offline-auth.service';\nimport { offlineDataService } from './offline-data.service';\n\n// Entity services\nexport { customerService } from './customer.service';\nexport { jobService } from './job.service';\nexport { materialService } from './material.service';\n\n// Background services (if they exist)\nexport * from './background-sync.service';\nexport * from './offline-cache.service';\n\n/**\n * Service initialization function\n * Call this once when the app starts to initialize all services\n */\nexport const initializeServices = async (): Promise<void> => {\n  // Simplified initialization - skip complex services for now\n  // [SERVICES] Using simplified initialization\n  return Promise.resolve();\n};\n\n/**\n * Service cleanup function\n * Call this when the app is shutting down\n */\nexport const cleanupServices = (): void => {\n  // [SERVICES] Cleanup skipped - using simplified services\n};","import { useState, useEffect } from 'react';\nimport { backgroundSyncService } from '../services/background-sync.service';\nimport { offlineCacheService } from '../services/offline-cache.service';\n\ninterface BeforeInstallPromptEvent extends Event {\n  prompt: () => Promise<void>;\n  userChoice: Promise<{ outcome: 'accepted' | 'dismissed' }>;\n}\n\ninterface PWACapabilities {\n  isInstallable: boolean;\n  isPWA: boolean;\n  supportsBackgroundSync: boolean;\n  supportsPeriodicSync: boolean;\n  supportsPushNotifications: boolean;\n  supportsOfflineStorage: boolean;\n  deviceType: 'mobile' | 'desktop' | 'tablet';\n  connectionType: string;\n}\n\nexport const usePWA = () => {\n  const [isInstallable, setIsInstallable] = useState(false);\n  const [isPWA, setIsPWA] = useState(false);\n  const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);\n  const [capabilities, setCapabilities] = useState<PWACapabilities | null>(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useEffect(() => {\n    const initializePWA = async () => {\n      try {\n        // Initialize PWA services\n        await Promise.all([\n          backgroundSyncService.initialize(),\n          offlineCacheService.initialize()\n        ]);\n        \n        // Check PWA capabilities\n        const pwaCaps = await checkPWACapabilities();\n        setCapabilities(pwaCaps);\n        \n        setIsInitialized(true);\n        console.log('PWA services initialized successfully');\n      } catch (error) {\n        console.error('Failed to initialize PWA services:', error);\n      }\n    };\n\n    initializePWA();\n  }, []);\n\n  useEffect(() => {\n    // Check if app is running as PWA\n    const checkPWA = () => {\n      const isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n      const isInWebAppiOS = (window.navigator as any).standalone === true;\n      const isMinimalUI = window.matchMedia('(display-mode: minimal-ui)').matches;\n      \n      setIsPWA(isStandalone || isInWebAppiOS || isMinimalUI);\n    };\n\n    checkPWA();\n\n    // Listen for beforeinstallprompt event\n    const handleBeforeInstallPrompt = (e: Event) => {\n      e.preventDefault();\n      setDeferredPrompt(e as BeforeInstallPromptEvent);\n      setIsInstallable(true);\n      \n      // Track install prompt availability\n      if (typeof gtag !== 'undefined') {\n        gtag('event', 'pwa_install_prompt_available', {\n          device_type: capabilities?.deviceType || 'unknown'\n        });\n      }\n    };\n\n    // Listen for app installed event\n    const handleAppInstalled = () => {\n      setIsInstallable(false);\n      setDeferredPrompt(null);\n      setIsPWA(true);\n      \n      // Track successful installation\n      if (typeof gtag !== 'undefined') {\n        gtag('event', 'pwa_installed', {\n          device_type: capabilities?.deviceType || 'unknown'\n        });\n      }\n      \n      // Initialize post-install features\n      initializePostInstall();\n    };\n\n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n    window.addEventListener('appinstalled', handleAppInstalled);\n\n    // Check display mode changes\n    const mediaQuery = window.matchMedia('(display-mode: standalone)');\n    mediaQuery.addEventListener('change', checkPWA);\n\n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n      window.removeEventListener('appinstalled', handleAppInstalled);\n      mediaQuery.removeEventListener('change', checkPWA);\n    };\n  }, [capabilities]);\n\n  const checkPWACapabilities = async (): Promise<PWACapabilities> => {\n    const capabilities: PWACapabilities = {\n      isInstallable: false,\n      isPWA: window.matchMedia('(display-mode: standalone)').matches ||\n             (window.navigator as any).standalone === true,\n      supportsBackgroundSync: 'serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype,\n      supportsPeriodicSync: 'serviceWorker' in navigator && 'periodicSync' in window.ServiceWorkerRegistration.prototype,\n      supportsPushNotifications: 'serviceWorker' in navigator && 'PushManager' in window,\n      supportsOfflineStorage: 'indexedDB' in window,\n      deviceType: getDeviceType(),\n      connectionType: getConnectionType()\n    };\n\n    return capabilities;\n  };\n\n  const getDeviceType = (): 'mobile' | 'desktop' | 'tablet' => {\n    const userAgent = navigator.userAgent.toLowerCase();\n    \n    if (/tablet|ipad/.test(userAgent)) {\n      return 'tablet';\n    } else if (/mobile|iphone|ipod|android|blackberry|opera|mini|windows\\sce|palm|smartphone|iemobile/.test(userAgent)) {\n      return 'mobile';\n    } else {\n      return 'desktop';\n    }\n  };\n\n  const getConnectionType = (): string => {\n    if ('connection' in navigator) {\n      return (navigator as any).connection.effectiveType || 'unknown';\n    }\n    return 'unknown';\n  };\n\n  const initializePostInstall = async () => {\n    try {\n      // Request notification permissions for job updates\n      if ('Notification' in window) {\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n          console.log('Notification permissions granted');\n        }\n      }\n\n      // Setup push notifications if supported\n      if (capabilities?.supportsPushNotifications) {\n        await setupPushNotifications();\n      }\n\n      // Preload critical data for offline use\n      await preloadCriticalData();\n      \n    } catch (error) {\n      console.error('Post-install initialization failed:', error);\n    }\n  };\n\n  const setupPushNotifications = async () => {\n    try {\n      const registration = await navigator.serviceWorker.ready;\n      \n      // Subscribe to push notifications for job updates\n      const subscription = await registration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: process.env.VAPID_PUBLIC_KEY // You'd set this in your env\n      });\n\n      // Send subscription to your server\n      console.log('Push notification subscription:', subscription);\n      \n    } catch (error) {\n      console.error('Failed to setup push notifications:', error);\n    }\n  };\n\n  const preloadCriticalData = async () => {\n    try {\n      // Preload today's jobs and active customers for offline access\n      if (isInitialized) {\n        await backgroundSyncService.triggerSync('critical');\n      }\n    } catch (error) {\n      console.error('Failed to preload critical data:', error);\n    }\n  };\n\n  const install = async () => {\n    if (!deferredPrompt) {\n      return false;\n    }\n\n    try {\n      await deferredPrompt.prompt();\n      const { outcome } = await deferredPrompt.userChoice;\n      \n      if (outcome === 'accepted') {\n        setIsInstallable(false);\n        setDeferredPrompt(null);\n        \n        // Track successful installation\n        if (typeof gtag !== 'undefined') {\n          gtag('event', 'pwa_install_completed', {\n            device_type: capabilities?.deviceType || 'unknown',\n            connection_type: capabilities?.connectionType || 'unknown'\n          });\n        }\n        \n        return true;\n      } else {\n        // Track dismissal\n        if (typeof gtag !== 'undefined') {\n          gtag('event', 'pwa_install_dismissed', {\n            device_type: capabilities?.deviceType || 'unknown'\n          });\n        }\n      }\n      \n      return false;\n    } catch (error) {\n      console.error('Error installing PWA:', error);\n      return false;\n    }\n  };\n\n  const checkForUpdates = async () => {\n    try {\n      if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.ready;\n        await registration.update();\n        console.log('Checked for service worker updates');\n      }\n    } catch (error) {\n      console.error('Failed to check for updates:', error);\n    }\n  };\n\n  const getInstallationInstructions = () => {\n    const deviceType = capabilities?.deviceType || 'unknown';\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n    \n    if (isIOS) {\n      return {\n        title: 'Install KHS CRM on iOS',\n        steps: [\n          'Tap the Share button in Safari',\n          'Scroll down and tap \"Add to Home Screen\"',\n          'Tap \"Add\" to install the app'\n        ]\n      };\n    } else if (deviceType === 'mobile') {\n      return {\n        title: 'Install KHS CRM on Android',\n        steps: [\n          'Tap the menu button (3 dots)',\n          'Select \"Add to Home screen\" or \"Install app\"',\n          'Tap \"Install\" when prompted'\n        ]\n      };\n    } else {\n      return {\n        title: 'Install KHS CRM on Desktop',\n        steps: [\n          'Click the install icon in the address bar',\n          'Or use the menu: Settings > Install KHS CRM',\n          'Click \"Install\" to add to your desktop'\n        ]\n      };\n    }\n  };\n\n  return {\n    isInstallable,\n    isPWA,\n    install,\n    capabilities,\n    isInitialized,\n    checkForUpdates,\n    getInstallationInstructions,\n    preloadCriticalData\n  };\n};","import { useState, useEffect } from 'react';\nimport { usePWA } from '../hooks/usePWA';\n\ninterface InstallBenefits {\n  icon: string;\n  title: string;\n  description: string;\n}\n\nconst FIELD_BENEFITS: InstallBenefits[] = [\n  {\n    icon: '🔄',\n    title: 'Offline Access',\n    description: 'Work in remote job sites without internet'\n  },\n  {\n    icon: '⚡',\n    title: 'Faster Loading',\n    description: 'Quick access to job data and materials'\n  },\n  {\n    icon: '📱',\n    title: 'Native Feel',\n    description: 'App-like experience on phone and desktop'\n  },\n  {\n    icon: '🔔',\n    title: 'Job Notifications',\n    description: 'Get instant updates about project changes'\n  }\n];\n\nexport const PWAInstallBanner = () => {\n  const { isInstallable, install, isPWA } = usePWA();\n  const [isDismissed, setIsDismissed] = useState(false);\n  const [isInstalling, setIsInstalling] = useState(false);\n  const [showDetailed, setShowDetailed] = useState(false);\n  const [deviceType, setDeviceType] = useState<'mobile' | 'desktop'>('mobile');\n\n  useEffect(() => {\n    // Check if banner was dismissed in the last 7 days\n    const dismissed = localStorage.getItem('pwa-banner-dismissed');\n    if (dismissed) {\n      const dismissedTime = new Date(dismissed).getTime();\n      const sevenDaysAgo = Date.now() - (7 * 24 * 60 * 60 * 1000);\n      if (dismissedTime > sevenDaysAgo) {\n        setIsDismissed(true);\n      }\n    }\n\n    // Detect device type\n    const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    setDeviceType(isMobile ? 'mobile' : 'desktop');\n  }, []);\n\n  if (!isInstallable || isDismissed || isPWA) {\n    return null;\n  }\n\n  const handleInstall = async () => {\n    setIsInstalling(true);\n    const success = await install();\n    \n    if (success) {\n      // Track successful installation\n      if (typeof gtag !== 'undefined') {\n        gtag('event', 'pwa_install', {\n          device_type: deviceType,\n          installation_prompt: showDetailed ? 'detailed' : 'simple'\n        });\n      }\n    } else {\n      setIsInstalling(false);\n      setIsDismissed(true);\n    }\n  };\n\n  const handleDismiss = () => {\n    setIsDismissed(true);\n    localStorage.setItem('pwa-banner-dismissed', new Date().toISOString());\n  };\n\n  const handleShowDetails = () => {\n    setShowDetailed(true);\n  };\n\n  if (showDetailed) {\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-end sm:items-center justify-center z-50 p-4\">\n        <div className=\"bg-white rounded-t-3xl sm:rounded-2xl max-w-md w-full max-h-[90vh] overflow-y-auto\">\n          <div className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-12 h-12 bg-blue-600 rounded-xl flex items-center justify-center\">\n                  <span className=\"text-2xl\">🏗️</span>\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Install KHS CRM</h3>\n                  <p className=\"text-sm text-gray-600\">Field Operations App</p>\n                </div>\n              </div>\n              <button\n                onClick={() => setShowDetailed(false)}\n                className=\"text-gray-400 hover:text-gray-600 p-1\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"mb-6\">\n              <h4 className=\"font-medium text-gray-900 mb-3\">Perfect for Construction Field Work:</h4>\n              <div className=\"space-y-3\">\n                {FIELD_BENEFITS.map((benefit, index) => (\n                  <div key={index} className=\"flex items-start space-x-3\">\n                    <span className=\"text-lg\">{benefit.icon}</span>\n                    <div>\n                      <p className=\"font-medium text-gray-900 text-sm\">{benefit.title}</p>\n                      <p className=\"text-xs text-gray-600\">{benefit.description}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"bg-blue-50 rounded-lg p-4 mb-6\">\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"text-lg\">💡</span>\n                <div>\n                  <p className=\"font-medium text-blue-900 text-sm\">\n                    {deviceType === 'mobile' ? 'Mobile Installation' : 'Desktop Installation'}\n                  </p>\n                  <p className=\"text-xs text-blue-700\">\n                    {deviceType === 'mobile' \n                      ? 'Add to your home screen for instant access on job sites'\n                      : 'Install as a desktop app for easy access from your computer'\n                    }\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex space-x-3\">\n              <button\n                onClick={handleInstall}\n                disabled={isInstalling}\n                className=\"flex-1 bg-blue-600 text-white px-6 py-3 rounded-lg text-sm font-medium hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {isInstalling ? (\n                  <span className=\"flex items-center justify-center space-x-2\">\n                    <svg className=\"animate-spin h-4 w-4\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\"/>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                    </svg>\n                    <span>Installing...</span>\n                  </span>\n                ) : (\n                  `Install ${deviceType === 'mobile' ? 'on Phone' : 'on Desktop'}`\n                )}\n              </button>\n              <button\n                onClick={handleDismiss}\n                className=\"px-6 py-3 border border-gray-300 text-gray-700 rounded-lg text-sm font-medium hover:bg-gray-50 transition-colors\"\n              >\n                Not Now\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fixed bottom-20 left-4 right-4 bg-blue-600 text-white rounded-lg shadow-lg p-4 z-40 max-w-md mx-auto\">\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex items-start space-x-3 flex-1\">\n          <div className=\"w-10 h-10 bg-blue-500 rounded-lg flex items-center justify-center flex-shrink-0\">\n            <span className=\"text-lg\">🏗️</span>\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <h3 className=\"font-semibold text-white text-sm\">Install KHS CRM</h3>\n            <p className=\"text-xs text-blue-100 mt-1\">\n              Get the full construction field app experience - works offline!\n            </p>\n            <button\n              onClick={handleShowDetails}\n              className=\"text-xs text-blue-200 underline mt-1 hover:text-white\"\n            >\n              See all benefits →\n            </button>\n          </div>\n        </div>\n        <button\n          onClick={handleDismiss}\n          className=\"text-blue-200 hover:text-white p-1 flex-shrink-0 ml-2\"\n          aria-label=\"Dismiss\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n      \n      <div className=\"mt-3 flex space-x-2\">\n        <button\n          onClick={handleInstall}\n          disabled={isInstalling}\n          className=\"flex-1 bg-white text-blue-600 px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n        >\n          {isInstalling ? 'Installing...' : 'Install App'}\n        </button>\n        <button\n          onClick={handleShowDetails}\n          className=\"px-4 py-2 bg-blue-500 text-white rounded-md text-sm font-medium hover:bg-blue-400 transition-colors\"\n        >\n          Details\n        </button>\n      </div>\n    </div>\n  );\n};","import { useState, useEffect } from 'react';\n\ninterface RegisterSWOptions {\n  immediate?: boolean;\n  onNeedRefresh?: () => void;\n  onOfflineReady?: () => void;\n  onRegistered?: (r: ServiceWorkerRegistration) => void;\n  onRegisterError?: (error: any) => void;\n}\n\ninterface RegisterSWReturn {\n  needRefresh: [boolean, (value: boolean) => void];\n  offlineReady: [boolean, (value: boolean) => void];\n  updateServiceWorker: (reloadPage?: boolean) => Promise<void>;\n}\n\nexport function useRegisterSW(options: RegisterSWOptions = {}): RegisterSWReturn {\n  const [needRefresh, setNeedRefresh] = useState(false);\n  const [offlineReady, setOfflineReady] = useState(false);\n  const [registration, setRegistration] = useState<ServiceWorkerRegistration | null>(null);\n\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisterError\n  } = options;\n\n  useEffect(() => {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker\n        .register('/sw.js', {\n          scope: '/',\n          updateViaCache: 'none'\n        })\n        .then((r) => {\n          setRegistration(r);\n          onRegistered?.(r);\n\n          if (r.waiting && !r.active) {\n            setNeedRefresh(true);\n            onNeedRefresh?.();\n          }\n\n          if (r.active && !r.waiting) {\n            setOfflineReady(true);\n            onOfflineReady?.();\n          }\n\n          r.addEventListener('updatefound', () => {\n            const newWorker = r.installing;\n            if (newWorker) {\n              newWorker.addEventListener('statechange', () => {\n                if (newWorker.state === 'installed') {\n                  if (navigator.serviceWorker.controller) {\n                    setNeedRefresh(true);\n                    onNeedRefresh?.();\n                  } else {\n                    setOfflineReady(true);\n                    onOfflineReady?.();\n                  }\n                }\n              });\n            }\n          });\n        })\n        .catch((error) => {\n          onRegisterError?.(error);\n        });\n    }\n  }, [immediate, onNeedRefresh, onOfflineReady, onRegistered, onRegisterError]);\n\n  const updateServiceWorker = async (reloadPage = false) => {\n    if (!registration || !registration.waiting) {\n      return;\n    }\n\n    registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n\n    if (reloadPage) {\n      window.location.reload();\n    } else {\n      setNeedRefresh(false);\n    }\n  };\n\n  return {\n    needRefresh: [needRefresh, setNeedRefresh],\n    offlineReady: [offlineReady, setOfflineReady],\n    updateServiceWorker,\n  };\n}","import { useState, useEffect } from 'react';\nimport { useRegisterSW } from '../hooks/usePWARegister';\n\ninterface UpdateInfo {\n  version?: string;\n  features?: string[];\n  isUrgent?: boolean;\n}\n\nconst UPDATE_FEATURES = [\n  'Improved offline sync reliability',\n  'Enhanced job status tracking',\n  'Better material list management',\n  'Performance improvements for field use',\n  'Bug fixes and stability updates'\n];\n\nexport const PWAUpdateNotification = () => {\n  const [showNotification, setShowNotification] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [updateInfo, setUpdateInfo] = useState<UpdateInfo>({});\n  \n  const {\n    needRefresh: [needRefresh, setNeedRefresh],\n    updateServiceWorker,\n  } = useRegisterSW({\n    onRegistered() {\n      console.log('Service Worker registered successfully');\n    },\n    onRegisterError(error) {\n      console.error('Service Worker registration failed:', error);\n    },\n    onNeedRefresh() {\n      setShowNotification(true);\n      setUpdateInfo({\n        version: '2.1.0', // This would come from your app version\n        features: UPDATE_FEATURES.slice(0, 3), // Show top 3 features\n        isUrgent: false\n      });\n    },\n    onOfflineReady() {\n      console.log('App is ready to work offline');\n      // Could show a toast notification here\n    },\n  });\n\n  const handleUpdate = async () => {\n    setIsUpdating(true);\n    \n    try {\n      // Track update acceptance\n      if (typeof gtag !== 'undefined') {\n        gtag('event', 'pwa_update_accepted', {\n          version: updateInfo.version || 'unknown',\n          update_type: updateInfo.isUrgent ? 'urgent' : 'regular'\n        });\n      }\n      \n      await updateServiceWorker(true);\n      \n      // Show updating message briefly before reload\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n      \n    } catch (error) {\n      console.error('Update failed:', error);\n      setIsUpdating(false);\n    }\n  };\n\n  const handleDismiss = () => {\n    setShowNotification(false);\n    setNeedRefresh(false);\n    \n    // Track update dismissal\n    if (typeof gtag !== 'undefined') {\n      gtag('event', 'pwa_update_dismissed', {\n        version: updateInfo.version || 'unknown'\n      });\n    }\n  };\n\n  const handleLater = () => {\n    setShowNotification(false);\n    \n    // Show again in 24 hours for non-urgent updates\n    if (!updateInfo.isUrgent) {\n      localStorage.setItem('pwa-update-remind', \n        (Date.now() + 24 * 60 * 60 * 1000).toString()\n      );\n    }\n  };\n\n  useEffect(() => {\n    // Check if we should remind about update\n    const remindTime = localStorage.getItem('pwa-update-remind');\n    if (remindTime && Date.now() > parseInt(remindTime) && needRefresh) {\n      setShowNotification(true);\n      localStorage.removeItem('pwa-update-remind');\n    }\n  }, [needRefresh]);\n\n  if (!showNotification) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-end sm:items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-t-3xl sm:rounded-2xl max-w-md w-full\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${\n                updateInfo.isUrgent ? 'bg-orange-500' : 'bg-green-500'\n              }`}>\n                <span className=\"text-2xl\">\n                  {updateInfo.isUrgent ? '⚠️' : '🔄'}\n                </span>\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">\n                  {updateInfo.isUrgent ? 'Important Update' : 'App Update Available'}\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  {updateInfo.version && `Version ${updateInfo.version}`}\n                </p>\n              </div>\n            </div>\n            {!updateInfo.isUrgent && (\n              <button\n                onClick={handleDismiss}\n                className=\"text-gray-400 hover:text-gray-600 p-1\"\n              >\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            )}\n          </div>\n\n          <div className=\"mb-6\">\n            <p className=\"text-gray-700 mb-4\">\n              {updateInfo.isUrgent \n                ? 'This update contains critical fixes for field operations. We recommend installing it now.'\n                : 'A new version with improvements and bug fixes is available.'\n              }\n            </p>\n            \n            {updateInfo.features && updateInfo.features.length > 0 && (\n              <div className=\"bg-blue-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-blue-900 text-sm mb-2\">What's New:</h4>\n                <ul className=\"space-y-1\">\n                  {updateInfo.features.map((feature, index) => (\n                    <li key={index} className=\"text-xs text-blue-700 flex items-start\">\n                      <span className=\"text-blue-500 mr-2\">•</span>\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n\n          {updateInfo.isUrgent && (\n            <div className=\"bg-orange-50 border border-orange-200 rounded-lg p-3 mb-4\">\n              <div className=\"flex items-start space-x-2\">\n                <span className=\"text-orange-500 text-sm\">⚠️</span>\n                <p className=\"text-xs text-orange-700\">\n                  <strong>Critical Update:</strong> This update fixes important issues that may affect your work in the field. \n                  The update will take less than 30 seconds.\n                </p>\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={handleUpdate}\n              disabled={isUpdating}\n              className={`flex-1 text-white px-6 py-3 rounded-lg text-sm font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed ${\n                updateInfo.isUrgent \n                  ? 'bg-orange-600 hover:bg-orange-700' \n                  : 'bg-green-600 hover:bg-green-700'\n              }`}\n            >\n              {isUpdating ? (\n                <span className=\"flex items-center justify-center space-x-2\">\n                  <svg className=\"animate-spin h-4 w-4\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\"/>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                  </svg>\n                  <span>Updating...</span>\n                </span>\n              ) : (\n                `${updateInfo.isUrgent ? 'Install Critical Update' : 'Update Now'}`\n              )}\n            </button>\n            \n            {!updateInfo.isUrgent && (\n              <button\n                onClick={handleLater}\n                className=\"px-6 py-3 border border-gray-300 text-gray-700 rounded-lg text-sm font-medium hover:bg-gray-50 transition-colors\"\n              >\n                Later\n              </button>\n            )}\n          </div>\n\n          {!updateInfo.isUrgent && (\n            <p className=\"text-xs text-gray-500 text-center mt-3\">\n              The app will continue to work normally. You can update anytime from Settings.\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};","import { useState, useEffect } from 'react';\n\nexport const useOnlineStatus = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  return isOnline;\n};","import { useOnlineStatus } from '../hooks/useOnlineStatus';\nimport { useEffect, useState } from 'react';\n\nexport const OfflineIndicator = () => {\n  const isOnline = useOnlineStatus();\n  const [showReconnected, setShowReconnected] = useState(false);\n  const [wasOffline, setWasOffline] = useState(false);\n\n  useEffect(() => {\n    if (!isOnline) {\n      setWasOffline(true);\n    } else if (wasOffline && isOnline) {\n      // Show reconnected message\n      setShowReconnected(true);\n      const timer = setTimeout(() => {\n        setShowReconnected(false);\n        setWasOffline(false);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [isOnline, wasOffline]);\n\n  if (!isOnline) {\n    return (\n      <div className=\"fixed top-14 left-0 right-0 bg-yellow-500 text-white px-4 py-2 text-center z-40\">\n        <div className=\"flex items-center justify-center space-x-2\">\n          <svg className=\"w-5 h-5 animate-pulse\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 5.636a9 9 0 010 12.728m0 0l-2.829-2.829m2.829 2.829L21 21M15.536 8.464a5 5 0 010 7.072m0 0l-2.829-2.829m-4.243 2.829a4.978 4.978 0 01-1.414-2.83m-1.414 5.658a9 9 0 01-2.167-9.238m7.824 2.167a1 1 0 111.414 1.414m-1.414-1.414L3 3m8.293 8.293l1.414 1.414\" />\n          </svg>\n          <span className=\"text-sm font-medium\">No internet connection</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (showReconnected) {\n    return (\n      <div className=\"fixed top-14 left-0 right-0 bg-green-500 text-white px-4 py-2 text-center z-40\">\n        <div className=\"flex items-center justify-center space-x-2\">\n          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n          </svg>\n          <span className=\"text-sm font-medium\">Back online</span>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};","import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { PWAInstallBanner } from './PWAInstallBanner';\nimport { PWAUpdateNotification } from './PWAUpdateNotification';\nimport { OfflineIndicator } from './OfflineIndicator';\nimport { usePWA } from '../hooks/usePWA';\nimport { useOnlineStatus } from '../hooks/useOnlineStatus';\nimport { backgroundSyncService } from '../services/background-sync.service';\n\ninterface PWAContextValue {\n  isPWA: boolean;\n  isOnline: boolean;\n  capabilities: any;\n  triggerSync: (priority?: 'critical' | 'important' | 'normal') => Promise<void>;\n  checkForUpdates: () => Promise<void>;\n  preloadCriticalData: () => Promise<void>;\n}\n\nconst PWAContext = createContext<PWAContextValue | null>(null);\n\nexport const usePWAContext = () => {\n  const context = useContext(PWAContext);\n  if (!context) {\n    throw new Error('usePWAContext must be used within a PWAProvider');\n  }\n  return context;\n};\n\ninterface PWAProviderProps {\n  children: React.ReactNode;\n}\n\nexport const PWAProvider: React.FC<PWAProviderProps> = ({ children }) => {\n  const pwa = usePWA();\n  const isOnline = useOnlineStatus();\n  const [isServiceWorkerRegistered, setIsServiceWorkerRegistered] = useState(false);\n\n  useEffect(() => {\n    // Register service worker and initialize PWA features\n    const initializePWA = async () => {\n      try {\n        if ('serviceWorker' in navigator) {\n          // Register service worker\n          const registration = await navigator.serviceWorker.register('/sw.js', {\n            scope: '/',\n            updateViaCache: 'none'\n          });\n\n          setIsServiceWorkerRegistered(true);\n\n          // Listen for service worker updates\n          registration.addEventListener('updatefound', () => {\n            const newWorker = registration.installing;\n            if (newWorker) {\n              newWorker.addEventListener('statechange', () => {\n                if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n                  // Show update notification\n                  // Service worker update available\n                }\n              });\n            }\n          });\n\n          // Service Worker registered successfully\n        }\n\n        // Initialize background sync if PWA is initialized\n        if (pwa.isInitialized) {\n          await backgroundSyncService.initialize();\n        }\n\n      } catch (error) {\n        // Service Worker registration failed\n      }\n    };\n\n    initializePWA();\n  }, [pwa.isInitialized]);\n\n  // Auto-sync when coming online\n  useEffect(() => {\n    if (isOnline && isServiceWorkerRegistered && pwa.isInitialized) {\n      // Trigger sync after coming online\n      const timeoutId = setTimeout(() => {\n        backgroundSyncService.triggerSync('critical').catch(console.error);\n      }, 2000); // Small delay to ensure connection is stable\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isOnline, isServiceWorkerRegistered, pwa.isInitialized]);\n\n  // Show PWA install banner for construction workers\n  useEffect(() => {\n    if (pwa.capabilities?.deviceType === 'mobile' && pwa.isInstallable) {\n      // Show install banner after 30 seconds for mobile users\n      const timeoutId = setTimeout(() => {\n        // PWA installation available for mobile construction worker\n      }, 30000);\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [pwa.capabilities, pwa.isInstallable]);\n\n  const contextValue: PWAContextValue = {\n    isPWA: pwa.isPWA,\n    isOnline,\n    capabilities: pwa.capabilities,\n    triggerSync: async (priority) => {\n      if (isOnline) {\n        await backgroundSyncService.triggerSync(priority);\n      }\n    },\n    checkForUpdates: pwa.checkForUpdates,\n    preloadCriticalData: pwa.preloadCriticalData\n  };\n\n  return (\n    <PWAContext.Provider value={contextValue}>\n      {children}\n      \n      {/* PWA Components */}\n      <PWAInstallBanner />\n      <PWAUpdateNotification />\n      <OfflineIndicator />\n      \n      {/* Construction-specific PWA features */}\n      {pwa.isPWA && (\n        <ConstructionPWAFeatures />\n      )}\n    </PWAContext.Provider>\n  );\n};\n\n// Construction-specific PWA features\nconst ConstructionPWAFeatures: React.FC = () => {\n  const { isOnline, triggerSync } = usePWAContext();\n\n  useEffect(() => {\n    // Setup periodic sync for field workers\n    const setupPeriodicSync = () => {\n      // Sync critical data every 5 minutes when online\n      const intervalId = setInterval(async () => {\n        if (isOnline) {\n          try {\n            await triggerSync('critical');\n          } catch (error) {\n            // Periodic sync failed\n          }\n        }\n      }, 5 * 60 * 1000); // 5 minutes\n\n      return () => clearInterval(intervalId);\n    };\n\n    const cleanup = setupPeriodicSync();\n    return cleanup;\n  }, [isOnline, triggerSync]);\n\n  return null; // This component doesn't render anything visible\n};\n\n// Hook for easy access to PWA functionality in components\nexport const usePWAFeatures = () => {\n  return usePWAContext();\n};","// Security Types and Interfaces for KHS CRM\n\nexport enum DataClassification {\n  PUBLIC = 'public',           // Business operational data (names, addresses, schedules)\n  INTERNAL = 'internal',       // Work-related data (jobs, materials, assignments)\n  CONFIDENTIAL = 'confidential', // Financial data (pricing, payments, margins)\n  RESTRICTED = 'restricted',    // Truly private (SSN, medical, banking)\n}\n\nexport interface SecurityMetadata {\n  classification: DataClassification;\n  lastModified: string;\n  lastAccessed?: string;\n  accessCount?: number;\n  encryptionStatus?: 'none' | 'at-rest' | 'in-transit' | 'full';\n}\n\nexport interface AuditLogEntry {\n  timestamp: string;\n  action: 'read' | 'write' | 'delete' | 'sync' | 'export';\n  dataType: string;\n  userId?: string;\n  details?: string;\n  success: boolean;\n}\n\nexport interface SecuritySettings {\n  enableAuditLogging: boolean;\n  enableEncryption: boolean;\n  syncEnabled: boolean;\n  allowedSyncTypes: DataClassification[];\n  localNetworkSyncOnly: boolean;\n  requireAuthentication: boolean;\n}\n\n// Default security settings - practical for business use\nexport const DEFAULT_SECURITY_SETTINGS: SecuritySettings = {\n  enableAuditLogging: true,\n  enableEncryption: true,\n  syncEnabled: true,\n  allowedSyncTypes: [DataClassification.PUBLIC, DataClassification.INTERNAL],\n  localNetworkSyncOnly: false,\n  requireAuthentication: true,\n};\n\n// Helper to determine if data can be synced\nexport function canSyncData(\n  classification: DataClassification,\n  settings: SecuritySettings,\n): boolean {\n  if (!settings.syncEnabled) {\n    return false;\n  }\n  if (classification === DataClassification.RESTRICTED) {\n    return false;\n  }\n  return settings.allowedSyncTypes.includes(classification);\n}\n\n// Helper to redact sensitive data for logging\nexport function redactSensitiveData(data: unknown, classification: DataClassification): unknown {\n  if (classification === DataClassification.PUBLIC) {\n    return data;\n  }\n  \n  if (classification === DataClassification.RESTRICTED) {\n    return '[REDACTED - RESTRICTED DATA]';\n  }\n  \n  // For other classifications, redact specific fields\n  if (typeof data === 'object' && data !== null) {\n    const redacted = { ...data } as Record<string, unknown>;\n    const sensitiveFields = ['phone', 'email', 'address', 'ssn', 'creditCard'];\n    \n    for (const field of sensitiveFields) {\n      if (field in redacted) {\n        redacted[field] = '[REDACTED]';\n      }\n    }\n    \n    return redacted;\n  }\n  \n  return data;\n}","// Encryption Service for KHS CRM\n// Handles encryption/decryption of sensitive data\n\nimport { DataClassification } from '../types/security';\n\n// Use Web Crypto API for encryption\nconst ALGORITHM = 'AES-GCM';\nconst KEY_LENGTH = 256;\nconst IV_LENGTH = 12; // 96 bits for AES-GCM\nconst SALT_LENGTH = 16; // 128 bits\n\nexport class EncryptionService {\n  private encryptionKey: CryptoKey | null = null;\n  private isInitialized = false;\n\n  // Initialize encryption with a user-provided password\n  async initialize(password: string): Promise<void> {\n    if (!password) {\n      throw new Error('Password is required for encryption');\n    }\n\n    try {\n      // Derive encryption key from password\n      const salt = this.getSalt();\n      this.encryptionKey = await this.deriveKey(password, salt);\n      this.isInitialized = true;\n    } catch (error) {\n      console.error('Failed to initialize encryption:', error);\n      throw new Error('Failed to initialize encryption service');\n    }\n  }\n\n  // Check if encryption is ready\n  isReady(): boolean {\n    return this.isInitialized && this.encryptionKey !== null;\n  }\n\n  // Encrypt data based on classification\n  async encrypt(data: unknown, classification: DataClassification): Promise<string> {\n    // Only encrypt CONFIDENTIAL data\n    if (classification !== DataClassification.CONFIDENTIAL) {\n      return JSON.stringify(data);\n    }\n\n    if (!this.isReady()) {\n      throw new Error('Encryption not initialized');\n    }\n\n    try {\n      const plaintext = JSON.stringify(data);\n      const encoder = new TextEncoder();\n      const encodedData = encoder.encode(plaintext);\n\n      // Generate random IV for each encryption\n      const iv = crypto.getRandomValues(new Uint8Array(IV_LENGTH));\n\n      // Encrypt the data\n      const encryptedData = await crypto.subtle.encrypt(\n        {\n          name: ALGORITHM,\n          iv: iv,\n        },\n        this.encryptionKey!,\n        encodedData,\n      );\n\n      // Combine IV and encrypted data\n      const combined = new Uint8Array(iv.length + encryptedData.byteLength);\n      combined.set(iv, 0);\n      combined.set(new Uint8Array(encryptedData), iv.length);\n\n      // Convert to base64 for storage\n      return btoa(String.fromCharCode(...combined));\n    } catch (error) {\n      console.error('Encryption failed:', error);\n      throw new Error('Failed to encrypt data');\n    }\n  }\n\n  // Decrypt data\n  async decrypt(encryptedData: string, classification: DataClassification): Promise<unknown> {\n    // Only decrypt data that was encrypted\n    if (classification !== DataClassification.CONFIDENTIAL) {\n      return JSON.parse(encryptedData);\n    }\n\n    if (!this.isReady()) {\n      throw new Error('Encryption not initialized');\n    }\n\n    try {\n      // Convert from base64\n      const combined = Uint8Array.from(atob(encryptedData), c => c.charCodeAt(0));\n\n      // Extract IV and encrypted data\n      const iv = combined.slice(0, IV_LENGTH);\n      const encrypted = combined.slice(IV_LENGTH);\n\n      // Decrypt the data\n      const decryptedData = await crypto.subtle.decrypt(\n        {\n          name: ALGORITHM,\n          iv: iv,\n        },\n        this.encryptionKey!,\n        encrypted,\n      );\n\n      // Convert back to string and parse JSON\n      const decoder = new TextDecoder();\n      const plaintext = decoder.decode(decryptedData);\n      return JSON.parse(plaintext);\n    } catch (error) {\n      console.error('Decryption failed:', error);\n      throw new Error('Failed to decrypt data');\n    }\n  }\n\n  // Derive encryption key from password\n  private async deriveKey(password: string, salt: Uint8Array): Promise<CryptoKey> {\n    const encoder = new TextEncoder();\n    const passwordData = encoder.encode(password);\n\n    // Import password as key material\n    const keyMaterial = await crypto.subtle.importKey(\n      'raw',\n      passwordData,\n      'PBKDF2',\n      false,\n      ['deriveKey'],\n    );\n\n    // Derive AES-GCM key from password\n    return crypto.subtle.deriveKey(\n      {\n        name: 'PBKDF2',\n        salt: salt,\n        iterations: 100000,\n        hash: 'SHA-256',\n      },\n      keyMaterial,\n      {\n        name: ALGORITHM,\n        length: KEY_LENGTH,\n      },\n      false,\n      ['encrypt', 'decrypt'],\n    );\n  }\n\n  // Get or generate salt for key derivation\n  private getSalt(): Uint8Array {\n    const storedSalt = localStorage.getItem('khs-crm-encryption-salt');\n    \n    if (storedSalt) {\n      // Convert from base64\n      return Uint8Array.from(atob(storedSalt), c => c.charCodeAt(0));\n    }\n\n    // Generate new salt\n    const salt = crypto.getRandomValues(new Uint8Array(SALT_LENGTH));\n    \n    // Store for future use\n    localStorage.setItem('khs-crm-encryption-salt', btoa(String.fromCharCode(...salt)));\n    \n    return salt;\n  }\n\n  // Clear encryption key (for logout)\n  clear(): void {\n    this.encryptionKey = null;\n    this.isInitialized = false;\n  }\n\n  // Test encryption/decryption\n  async test(): Promise<boolean> {\n    if (!this.isReady()) {\n      return false;\n    }\n\n    try {\n      const testData = { test: 'encryption test', timestamp: Date.now() };\n      const encrypted = await this.encrypt(testData, DataClassification.CONFIDENTIAL);\n      const decrypted = await this.decrypt(encrypted, DataClassification.CONFIDENTIAL);\n      \n      return JSON.stringify(testData) === JSON.stringify(decrypted);\n    } catch (error) {\n      console.error('Encryption test failed:', error);\n      return false;\n    }\n  }\n}\n\n// Export singleton instance\nexport const encryptionService = new EncryptionService();\n\n// Helper function to check if data needs encryption\nexport function needsEncryption(classification: DataClassification): boolean {\n  return classification === DataClassification.CONFIDENTIAL;\n}\n\n// Secure string comparison (constant time)\nexport function secureCompare(a: string, b: string): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  let result = 0;\n  for (let i = 0; i < a.length; i++) {\n    result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n  }\n\n  return result === 0;\n}","// Audit Logging Service for KHS CRM\n// Tracks all data access and modifications for security compliance\n\nimport { AuditLogEntry, DataClassification, redactSensitiveData } from '../types/security';\n\nconst AUDIT_LOG_KEY = 'khs-crm-audit-log';\nconst MAX_LOG_ENTRIES = 1000; // Keep last 1000 entries\n\nclass AuditService {\n  private enabled: boolean = true;\n\n  // Log a data access event\n  logAccess(\n    action: AuditLogEntry['action'],\n    dataType: string,\n    classification: DataClassification,\n    details?: unknown,\n    success = true,\n  ): void {\n    if (!this.enabled) return;\n\n    const entry: AuditLogEntry = {\n      timestamp: new Date().toISOString(),\n      action,\n      dataType,\n      details: redactSensitiveData(details, classification),\n      success,\n    };\n\n    this.addEntry(entry);\n  }\n\n  // Add entry to the audit log\n  private addEntry(entry: AuditLogEntry): void {\n    try {\n      const logs = this.getAuditLog();\n      logs.push(entry);\n\n      // Keep only the most recent entries\n      if (logs.length > MAX_LOG_ENTRIES) {\n        logs.splice(0, logs.length - MAX_LOG_ENTRIES);\n      }\n\n      localStorage.setItem(AUDIT_LOG_KEY, JSON.stringify(logs));\n    } catch (error) {\n      console.error('Failed to write audit log:', error);\n    }\n  }\n\n  // Get the full audit log\n  getAuditLog(): AuditLogEntry[] {\n    try {\n      const stored = localStorage.getItem(AUDIT_LOG_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Failed to read audit log:', error);\n      return [];\n    }\n  }\n\n  // Get audit log for specific data type\n  getLogsByDataType(dataType: string): AuditLogEntry[] {\n    return this.getAuditLog().filter(entry => entry.dataType === dataType);\n  }\n\n  // Get audit log for specific time range\n  getLogsByTimeRange(startDate: Date, endDate: Date): AuditLogEntry[] {\n    const start = startDate.getTime();\n    const end = endDate.getTime();\n    \n    return this.getAuditLog().filter(entry => {\n      const entryTime = new Date(entry.timestamp).getTime();\n      return entryTime >= start && entryTime <= end;\n    });\n  }\n\n  // Clear audit log (requires special permission in future)\n  clearAuditLog(): void {\n    // Log the clear action itself\n    this.logAccess('delete', 'audit-log', DataClassification.CONFIDENTIAL, 'Audit log cleared');\n    localStorage.removeItem(AUDIT_LOG_KEY);\n  }\n\n  // Enable/disable audit logging\n  setEnabled(enabled: boolean): void {\n    this.enabled = enabled;\n    if (enabled) {\n      this.logAccess('write', 'audit-settings', DataClassification.INTERNAL, 'Audit logging enabled');\n    }\n  }\n\n  // Export audit log for analysis\n  exportLog(): string {\n    const logs = this.getAuditLog();\n    return JSON.stringify(logs, null, 2);\n  }\n\n  // Get summary statistics\n  getStats(): {\n    totalEntries: number;\n    byAction: Record<string, number>;\n    byDataType: Record<string, number>;\n    recentFailures: AuditLogEntry[];\n  } {\n    const logs = this.getAuditLog();\n    const byAction: Record<string, number> = {};\n    const byDataType: Record<string, number> = {};\n    const recentFailures: AuditLogEntry[] = [];\n    \n    logs.forEach(entry => {\n      // Count by action\n      byAction[entry.action] = (byAction[entry.action] || 0) + 1;\n      \n      // Count by data type\n      byDataType[entry.dataType] = (byDataType[entry.dataType] || 0) + 1;\n      \n      // Collect recent failures\n      if (!entry.success && recentFailures.length < 10) {\n        recentFailures.push(entry);\n      }\n    });\n\n    return {\n      totalEntries: logs.length,\n      byAction,\n      byDataType,\n      recentFailures,\n    };\n  }\n}\n\n// Export singleton instance\nexport const auditService = new AuditService();\n\n// Helper function to create audit-aware storage operations\nexport function auditedOperation<T>(\n  operation: () => T,\n  action: AuditLogEntry['action'],\n  dataType: string,\n  classification: DataClassification,\n  details?: unknown,\n): T {\n  try {\n    const result = operation();\n    auditService.logAccess(action, dataType, classification, details, true);\n    return result;\n  } catch (error) {\n    auditService.logAccess(action, dataType, classification, { error: (error as Error).message }, false);\n    throw error;\n  }\n}","// Secure Authentication Service for KHS CRM\n// Handles local authentication without exposing credentials\n\nimport { encryptionService, secureCompare } from './encryptionService';\nimport { auditService } from './auditService';\nimport { DataClassification } from '../types/security';\n\nconst AUTH_KEY = 'khs-crm-auth';\nconst SESSION_KEY = 'khs-crm-session';\nconst MAX_LOGIN_ATTEMPTS = 5;\nconst LOCKOUT_DURATION = 15 * 60 * 1000; // 15 minutes\n\ninterface AuthData {\n  passwordHash: string;\n  salt: string;\n  iterations: number;\n  lockoutUntil?: number;\n  failedAttempts: number;\n}\n\ninterface Session {\n  id: string;\n  createdAt: number;\n  expiresAt: number;\n  lastActivity: number;\n}\n\nclass AuthService {\n  private currentSession: Session | null = null;\n\n  // Initialize authentication (first time setup)\n  async initialize(password: string): Promise<void> {\n    if (this.isInitialized()) {\n      throw new Error('Authentication already initialized');\n    }\n\n    // Generate salt for password hashing\n    const salt = crypto.getRandomValues(new Uint8Array(16));\n    const saltStr = btoa(String.fromCharCode(...salt));\n\n    // Hash password with PBKDF2\n    const hash = await this.hashPassword(password, saltStr);\n\n    const authData: AuthData = {\n      passwordHash: hash,\n      salt: saltStr,\n      iterations: 100000,\n      failedAttempts: 0,\n    };\n\n    // Store auth data\n    localStorage.setItem(AUTH_KEY, JSON.stringify(authData));\n    \n    // Log security event\n    auditService.logAccess('write', 'auth-setup', DataClassification.CONFIDENTIAL, 'Authentication initialized');\n  }\n\n  // Check if authentication is set up\n  isInitialized(): boolean {\n    return localStorage.getItem(AUTH_KEY) !== null;\n  }\n\n  // Login with password\n  async login(password: string): Promise<boolean> {\n    const authData = this.getAuthData();\n    if (!authData) {\n      throw new Error('Authentication not initialized');\n    }\n\n    // Check if account is locked\n    if (authData.lockoutUntil && Date.now() < authData.lockoutUntil) {\n      const remainingTime = Math.ceil((authData.lockoutUntil - Date.now()) / 1000 / 60);\n      auditService.logAccess('read', 'auth-login', DataClassification.CONFIDENTIAL, 'Login attempt during lockout', false);\n      throw new Error(`Account locked. Try again in ${remainingTime} minutes.`);\n    }\n\n    // Hash provided password\n    const hash = await this.hashPassword(password, authData.salt);\n\n    // Compare hashes\n    if (!secureCompare(hash, authData.passwordHash)) {\n      // Increment failed attempts\n      authData.failedAttempts++;\n      \n      // Lock account if too many failed attempts\n      if (authData.failedAttempts >= MAX_LOGIN_ATTEMPTS) {\n        authData.lockoutUntil = Date.now() + LOCKOUT_DURATION;\n        authData.failedAttempts = 0;\n      }\n      \n      this.saveAuthData(authData);\n      auditService.logAccess('read', 'auth-login', DataClassification.CONFIDENTIAL, 'Invalid password', false);\n      return false;\n    }\n\n    // Reset failed attempts on successful login\n    authData.failedAttempts = 0;\n    delete authData.lockoutUntil;\n    this.saveAuthData(authData);\n\n    // Create session\n    this.createSession();\n    \n    // Initialize encryption if enabled\n    if (localStorage.getItem('khs-crm-encryption-enabled') === 'true') {\n      await encryptionService.initialize(password);\n    }\n\n    auditService.logAccess('read', 'auth-login', DataClassification.CONFIDENTIAL, 'Login successful');\n    return true;\n  }\n\n  // Logout\n  logout(): void {\n    this.currentSession = null;\n    sessionStorage.removeItem(SESSION_KEY);\n    encryptionService.clear();\n    \n    auditService.logAccess('write', 'auth-logout', DataClassification.CONFIDENTIAL, 'User logged out');\n  }\n\n  // Check if user is authenticated\n  isAuthenticated(): boolean {\n    // For practical use, check if auth is initialized\n    // This allows the app to work without constant re-authentication\n    if (!this.isInitialized()) {\n      return true; // Allow access if no auth setup\n    }\n    \n    const session = this.getSession();\n    if (!session) {\n      return false;\n    }\n\n    // Check if session expired (24 hours for construction workers)\n    if (Date.now() > session.expiresAt) {\n      this.logout();\n      return false;\n    }\n\n    // Update last activity\n    session.lastActivity = Date.now();\n    this.saveSession(session);\n\n    return true;\n  }\n\n  // Change password\n  async changePassword(currentPassword: string, newPassword: string): Promise<void> {\n    // Verify current password\n    const isValid = await this.login(currentPassword);\n    if (!isValid) {\n      throw new Error('Current password is incorrect');\n    }\n\n    // Generate new salt\n    const salt = crypto.getRandomValues(new Uint8Array(16));\n    const saltStr = btoa(String.fromCharCode(...salt));\n\n    // Hash new password\n    const hash = await this.hashPassword(newPassword, saltStr);\n\n    const authData = this.getAuthData()!;\n    authData.passwordHash = hash;\n    authData.salt = saltStr;\n    \n    this.saveAuthData(authData);\n    \n    // Re-initialize encryption with new password if enabled\n    if (encryptionService.isReady()) {\n      await encryptionService.initialize(newPassword);\n    }\n\n    auditService.logAccess('write', 'auth-password-change', DataClassification.CONFIDENTIAL, 'Password changed');\n  }\n\n  // Reset authentication (requires confirmation)\n  async reset(confirmPhrase: string): Promise<void> {\n    if (confirmPhrase !== 'RESET AUTHENTICATION') {\n      throw new Error('Invalid confirmation phrase');\n    }\n\n    localStorage.removeItem(AUTH_KEY);\n    this.logout();\n    \n    auditService.logAccess('delete', 'auth-reset', DataClassification.CONFIDENTIAL, 'Authentication reset');\n  }\n\n  // Private methods\n\n  private async hashPassword(password: string, salt: string): Promise<string> {\n    const encoder = new TextEncoder();\n    const passwordData = encoder.encode(password);\n    const saltData = Uint8Array.from(atob(salt), c => c.charCodeAt(0));\n\n    // Import password as key material\n    const keyMaterial = await crypto.subtle.importKey(\n      'raw',\n      passwordData,\n      'PBKDF2',\n      false,\n      ['deriveBits'],\n    );\n\n    // Derive bits using PBKDF2\n    const derivedBits = await crypto.subtle.deriveBits(\n      {\n        name: 'PBKDF2',\n        salt: saltData,\n        iterations: 100000,\n        hash: 'SHA-256',\n      },\n      keyMaterial,\n      256, // 32 bytes\n    );\n\n    // Convert to base64\n    const hashArray = new Uint8Array(derivedBits);\n    return btoa(String.fromCharCode(...hashArray));\n  }\n\n  private createSession(): void {\n    const session: Session = {\n      id: crypto.randomUUID(),\n      createdAt: Date.now(),\n      expiresAt: Date.now() + (24 * 60 * 60 * 1000), // 24 hours for field workers\n      lastActivity: Date.now(),\n    };\n\n    this.currentSession = session;\n    this.saveSession(session);\n  }\n\n  private getSession(): Session | null {\n    if (this.currentSession) {\n      return this.currentSession;\n    }\n\n    const stored = sessionStorage.getItem(SESSION_KEY);\n    if (stored) {\n      this.currentSession = JSON.parse(stored);\n      return this.currentSession;\n    }\n\n    return null;\n  }\n\n  private saveSession(session: Session): void {\n    sessionStorage.setItem(SESSION_KEY, JSON.stringify(session));\n  }\n\n  private getAuthData(): AuthData | null {\n    const stored = localStorage.getItem(AUTH_KEY);\n    return stored ? JSON.parse(stored) : null;\n  }\n\n  private saveAuthData(authData: AuthData): void {\n    localStorage.setItem(AUTH_KEY, JSON.stringify(authData));\n  }\n}\n\n// Export singleton instance\nexport const authService = new AuthService();","import { useState } from 'react';\nimport { authService } from '../services/authService';\n\ninterface AuthSetupProps {\n  onComplete: () => void;\n}\n\nexport const AuthSetup = ({ onComplete }: AuthSetupProps) => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSetup = async () => {\n    setError(null);\n\n    // Validate passwords\n    if (!password) {\n      setError('Password is required');\n      return;\n    }\n\n    if (password.length < 8) {\n      setError('Password must be at least 8 characters long');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    // Check password strength\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumbers = /\\d/.test(password);\n    const hasSpecialChar = /[!@#$%^&*]/.test(password);\n\n    if (!hasUpperCase || !hasLowerCase || !hasNumbers) {\n      setError('Password must contain uppercase, lowercase, and numbers');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // Initialize authentication\n      await authService.initialize(password);\n\n      // Clear password from memory\n      setPassword('');\n      setConfirmPassword('');\n\n      onComplete();\n    } catch (error) {\n      // Auth setup failed\n      setError('Failed to set up authentication. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{\n      maxWidth: '400px',\n      margin: '40px auto',\n      padding: '20px',\n      backgroundColor: 'white',\n      borderRadius: '8px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n    }}>\n      <h2 style={{ \n        margin: '0 0 8px 0', \n        fontSize: '24px', \n        fontWeight: '600',\n        textAlign: 'center',\n      }}>\n        Set Up Authentication\n      </h2>\n\n      <p style={{ \n        margin: '0 0 24px 0', \n        fontSize: '14px',\n        color: '#6B7280',\n        textAlign: 'center',\n      }}>\n        Create a password to secure your KHS CRM data\n      </p>\n\n      <div style={{ marginBottom: '16px' }}>\n        <label style={{ \n          display: 'block', \n          marginBottom: '4px',\n          fontSize: '14px',\n          fontWeight: '500',\n        }}>\n          Password\n        </label>\n        <div style={{ position: 'relative' }}>\n          <input\n            type={showPassword ? 'text' : 'password'}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Enter password\"\n            style={{\n              width: '100%',\n              padding: '8px 40px 8px 12px',\n              border: '1px solid #D1D5DB',\n              borderRadius: '6px',\n              fontSize: '14px',\n            }}\n          />\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            style={{\n              position: 'absolute',\n              right: '8px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              padding: '4px 8px',\n              backgroundColor: 'transparent',\n              border: 'none',\n              cursor: 'pointer',\n              fontSize: '12px',\n            }}\n          >\n            {showPassword ? '👁️' : '👁️‍🗨️'}\n          </button>\n        </div>\n      </div>\n\n      <div style={{ marginBottom: '20px' }}>\n        <label style={{ \n          display: 'block', \n          marginBottom: '4px',\n          fontSize: '14px',\n          fontWeight: '500',\n        }}>\n          Confirm Password\n        </label>\n        <input\n          type=\"password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          placeholder=\"Confirm password\"\n          style={{\n            width: '100%',\n            padding: '8px 12px',\n            border: '1px solid #D1D5DB',\n            borderRadius: '6px',\n            fontSize: '14px',\n          }}\n        />\n      </div>\n\n      {error && (\n        <div style={{\n          padding: '12px',\n          backgroundColor: '#FEE2E2',\n          border: '1px solid #FCA5A5',\n          borderRadius: '6px',\n          marginBottom: '16px',\n        }}>\n          <p style={{ \n            margin: 0, \n            fontSize: '14px',\n            color: '#DC2626',\n          }}>\n            ⚠️ {error}\n          </p>\n        </div>\n      )}\n\n      <div style={{\n        padding: '12px',\n        backgroundColor: '#EFF6FF',\n        border: '1px solid #3B82F6',\n        borderRadius: '6px',\n        marginBottom: '20px',\n      }}>\n        <h4 style={{ \n          margin: '0 0 8px 0', \n          fontSize: '14px',\n          fontWeight: '600',\n          color: '#1E40AF',\n        }}>\n          Password Requirements:\n        </h4>\n        <ul style={{ \n          margin: 0, \n          paddingLeft: '20px',\n          fontSize: '13px',\n          color: '#1E40AF',\n        }}>\n          <li>At least 8 characters long</li>\n          <li>Contains uppercase and lowercase letters</li>\n          <li>Contains at least one number</li>\n          <li>Recommended: Include special characters (!@#$%^&*)</li>\n        </ul>\n      </div>\n\n      <button\n        onClick={handleSetup}\n        disabled={isLoading}\n        style={{\n          padding: '10px 20px',\n          backgroundColor: isLoading ? '#9CA3AF' : '#3B82F6',\n          color: 'white',\n          border: 'none',\n          borderRadius: '6px',\n          cursor: isLoading ? 'not-allowed' : 'pointer',\n          fontSize: '14px',\n          fontWeight: '500',\n          width: '100%',\n        }}\n      >\n        {isLoading ? 'Setting up...' : 'Set Up Authentication'}\n      </button>\n    </div>\n  );\n};","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authService } from '../services/authService';\n\nexport const LoginForm = () => {\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleLogin = async () => {\n    setError(null);\n\n    if (!password) {\n      setError('Password is required');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const success = await authService.login(password);\n      \n      if (success) {\n        // Clear password from memory\n        setPassword('');\n        \n        // Navigate to dashboard\n        navigate('/dashboard');\n      } else {\n        setError('Invalid password');\n      }\n    } catch (error) {\n      // Login failed\n      setError((error as Error).message || 'Login failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleLogin();\n    }\n  };\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#F3F4F6',\n    }}>\n      <div style={{\n        width: '100%',\n        maxWidth: '400px',\n        padding: '20px',\n      }}>\n        <div style={{\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          padding: '32px',\n        }}>\n          <div style={{ textAlign: 'center', marginBottom: '24px' }}>\n            <h1 style={{ \n              margin: '0 0 8px 0', \n              fontSize: '28px', \n              fontWeight: '700',\n              color: '#111827',\n            }}>\n              KHS CRM\n            </h1>\n            <p style={{ \n              margin: 0, \n              fontSize: '14px',\n              color: '#6B7280',\n            }}>\n              Sign in to continue\n            </p>\n          </div>\n\n          <div style={{ marginBottom: '16px' }}>\n            <label style={{ \n              display: 'block', \n              marginBottom: '4px',\n              fontSize: '14px',\n              fontWeight: '500',\n              color: '#374151',\n            }}>\n              Password\n            </label>\n            <div style={{ position: 'relative' }}>\n              <input\n                type={showPassword ? 'text' : 'password'}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Enter your password\"\n                autoFocus\n                style={{\n                  width: '100%',\n                  padding: '10px 40px 10px 12px',\n                  border: '1px solid #D1D5DB',\n                  borderRadius: '6px',\n                  fontSize: '14px',\n                  outline: 'none',\n                  transition: 'border-color 0.2s',\n                }}\n                onFocus={(e) => {\n                  e.target.style.borderColor = '#3B82F6';\n                }}\n                onBlur={(e) => {\n                  e.target.style.borderColor = '#D1D5DB';\n                }}\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                style={{\n                  position: 'absolute',\n                  right: '8px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  padding: '4px 8px',\n                  backgroundColor: 'transparent',\n                  border: 'none',\n                  cursor: 'pointer',\n                  fontSize: '12px',\n                }}\n              >\n                {showPassword ? '👁️' : '👁️‍🗨️'}\n              </button>\n            </div>\n          </div>\n\n          {error && (\n            <div style={{\n              padding: '12px',\n              backgroundColor: '#FEE2E2',\n              border: '1px solid #FCA5A5',\n              borderRadius: '6px',\n              marginBottom: '16px',\n            }}>\n              <p style={{ \n                margin: 0, \n                fontSize: '14px',\n                color: '#DC2626',\n              }}>\n                {error}\n              </p>\n            </div>\n          )}\n\n          <button\n            onClick={handleLogin}\n            disabled={isLoading}\n            style={{\n              width: '100%',\n              padding: '10px 20px',\n              backgroundColor: isLoading ? '#9CA3AF' : '#3B82F6',\n              color: 'white',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: isLoading ? 'not-allowed' : 'pointer',\n              fontSize: '14px',\n              fontWeight: '500',\n              transition: 'background-color 0.2s',\n            }}\n            onMouseEnter={(e) => {\n              if (!isLoading) {\n                e.currentTarget.style.backgroundColor = '#2563EB';\n              }\n            }}\n            onMouseLeave={(e) => {\n              if (!isLoading) {\n                e.currentTarget.style.backgroundColor = '#3B82F6';\n              }\n            }}\n          >\n            {isLoading ? 'Signing in...' : 'Sign In'}\n          </button>\n\n          <div style={{\n            marginTop: '24px',\n            padding: '16px',\n            backgroundColor: '#F9FAFB',\n            borderRadius: '6px',\n            border: '1px solid #E5E7EB',\n          }}>\n            <p style={{ \n              margin: 0, \n              fontSize: '13px',\n              color: '#6B7280',\n              textAlign: 'center',\n            }}>\n              🔒 Your data is secured with local authentication and encryption\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","\"use client\";\nfunction Mt(t){if(!t||typeof document==\"undefined\")return;let o=document.head||document.getElementsByTagName(\"head\")[0],e=document.createElement(\"style\");e.type=\"text/css\",o.firstChild?o.insertBefore(e,o.firstChild):o.appendChild(e),e.styleSheet?e.styleSheet.cssText=t:e.appendChild(document.createTextNode(t))}Mt(`:root{--toastify-color-light: #fff;--toastify-color-dark: #121212;--toastify-color-info: #3498db;--toastify-color-success: #07bc0c;--toastify-color-warning: #f1c40f;--toastify-color-error: hsl(6, 78%, 57%);--toastify-color-transparent: rgba(255, 255, 255, .7);--toastify-icon-color-info: var(--toastify-color-info);--toastify-icon-color-success: var(--toastify-color-success);--toastify-icon-color-warning: var(--toastify-color-warning);--toastify-icon-color-error: var(--toastify-color-error);--toastify-container-width: fit-content;--toastify-toast-width: 320px;--toastify-toast-offset: 16px;--toastify-toast-top: max(var(--toastify-toast-offset), env(safe-area-inset-top));--toastify-toast-right: max(var(--toastify-toast-offset), env(safe-area-inset-right));--toastify-toast-left: max(var(--toastify-toast-offset), env(safe-area-inset-left));--toastify-toast-bottom: max(var(--toastify-toast-offset), env(safe-area-inset-bottom));--toastify-toast-background: #fff;--toastify-toast-padding: 14px;--toastify-toast-min-height: 64px;--toastify-toast-max-height: 800px;--toastify-toast-bd-radius: 6px;--toastify-toast-shadow: 0px 4px 12px rgba(0, 0, 0, .1);--toastify-font-family: sans-serif;--toastify-z-index: 9999;--toastify-text-color-light: #757575;--toastify-text-color-dark: #fff;--toastify-text-color-info: #fff;--toastify-text-color-success: #fff;--toastify-text-color-warning: #fff;--toastify-text-color-error: #fff;--toastify-spinner-color: #616161;--toastify-spinner-color-empty-area: #e0e0e0;--toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);--toastify-color-progress-dark: #bb86fc;--toastify-color-progress-info: var(--toastify-color-info);--toastify-color-progress-success: var(--toastify-color-success);--toastify-color-progress-warning: var(--toastify-color-warning);--toastify-color-progress-error: var(--toastify-color-error);--toastify-color-progress-bgo: .2}.Toastify__toast-container{z-index:var(--toastify-z-index);-webkit-transform:translate3d(0,0,var(--toastify-z-index));position:fixed;width:var(--toastify-container-width);box-sizing:border-box;color:#fff;display:flex;flex-direction:column}.Toastify__toast-container--top-left{top:var(--toastify-toast-top);left:var(--toastify-toast-left)}.Toastify__toast-container--top-center{top:var(--toastify-toast-top);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--top-right{top:var(--toastify-toast-top);right:var(--toastify-toast-right);align-items:end}.Toastify__toast-container--bottom-left{bottom:var(--toastify-toast-bottom);left:var(--toastify-toast-left)}.Toastify__toast-container--bottom-center{bottom:var(--toastify-toast-bottom);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--bottom-right{bottom:var(--toastify-toast-bottom);right:var(--toastify-toast-right);align-items:end}.Toastify__toast{--y: 0;position:relative;touch-action:none;width:var(--toastify-toast-width);min-height:var(--toastify-toast-min-height);box-sizing:border-box;margin-bottom:1rem;padding:var(--toastify-toast-padding);border-radius:var(--toastify-toast-bd-radius);box-shadow:var(--toastify-toast-shadow);max-height:var(--toastify-toast-max-height);font-family:var(--toastify-font-family);z-index:0;display:flex;flex:1 auto;align-items:center;word-break:break-word}@media only screen and (max-width: 480px){.Toastify__toast-container{width:100vw;left:env(safe-area-inset-left);margin:0}.Toastify__toast-container--top-left,.Toastify__toast-container--top-center,.Toastify__toast-container--top-right{top:env(safe-area-inset-top);transform:translate(0)}.Toastify__toast-container--bottom-left,.Toastify__toast-container--bottom-center,.Toastify__toast-container--bottom-right{bottom:env(safe-area-inset-bottom);transform:translate(0)}.Toastify__toast-container--rtl{right:env(safe-area-inset-right);left:initial}.Toastify__toast{--toastify-toast-width: 100%;margin-bottom:0;border-radius:0}}.Toastify__toast-container[data-stacked=true]{width:var(--toastify-toast-width)}.Toastify__toast--stacked{position:absolute;width:100%;transform:translate3d(0,var(--y),0) scale(var(--s));transition:transform .3s}.Toastify__toast--stacked[data-collapsed] .Toastify__toast-body,.Toastify__toast--stacked[data-collapsed] .Toastify__close-button{transition:opacity .1s}.Toastify__toast--stacked[data-collapsed=false]{overflow:visible}.Toastify__toast--stacked[data-collapsed=true]:not(:last-child)>*{opacity:0}.Toastify__toast--stacked:after{content:\"\";position:absolute;left:0;right:0;height:calc(var(--g) * 1px);bottom:100%}.Toastify__toast--stacked[data-pos=top]{top:0}.Toastify__toast--stacked[data-pos=bot]{bottom:0}.Toastify__toast--stacked[data-pos=bot].Toastify__toast--stacked:before{transform-origin:top}.Toastify__toast--stacked[data-pos=top].Toastify__toast--stacked:before{transform-origin:bottom}.Toastify__toast--stacked:before{content:\"\";position:absolute;left:0;right:0;bottom:0;height:100%;transform:scaleY(3);z-index:-1}.Toastify__toast--rtl{direction:rtl}.Toastify__toast--close-on-click{cursor:pointer}.Toastify__toast-icon{margin-inline-end:10px;width:22px;flex-shrink:0;display:flex}.Toastify--animate{animation-fill-mode:both;animation-duration:.5s}.Toastify--animate-icon{animation-fill-mode:both;animation-duration:.3s}.Toastify__toast-theme--dark{background:var(--toastify-color-dark);color:var(--toastify-text-color-dark)}.Toastify__toast-theme--light,.Toastify__toast-theme--colored.Toastify__toast--default{background:var(--toastify-color-light);color:var(--toastify-text-color-light)}.Toastify__toast-theme--colored.Toastify__toast--info{color:var(--toastify-text-color-info);background:var(--toastify-color-info)}.Toastify__toast-theme--colored.Toastify__toast--success{color:var(--toastify-text-color-success);background:var(--toastify-color-success)}.Toastify__toast-theme--colored.Toastify__toast--warning{color:var(--toastify-text-color-warning);background:var(--toastify-color-warning)}.Toastify__toast-theme--colored.Toastify__toast--error{color:var(--toastify-text-color-error);background:var(--toastify-color-error)}.Toastify__progress-bar-theme--light{background:var(--toastify-color-progress-light)}.Toastify__progress-bar-theme--dark{background:var(--toastify-color-progress-dark)}.Toastify__progress-bar--info{background:var(--toastify-color-progress-info)}.Toastify__progress-bar--success{background:var(--toastify-color-progress-success)}.Toastify__progress-bar--warning{background:var(--toastify-color-progress-warning)}.Toastify__progress-bar--error{background:var(--toastify-color-progress-error)}.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--success,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--warning,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--error{background:var(--toastify-color-transparent)}.Toastify__close-button{color:#fff;position:absolute;top:6px;right:6px;background:transparent;outline:none;border:none;padding:0;cursor:pointer;opacity:.7;transition:.3s ease;z-index:1}.Toastify__toast--rtl .Toastify__close-button{left:6px;right:unset}.Toastify__close-button--light{color:#000;opacity:.3}.Toastify__close-button>svg{fill:currentColor;height:16px;width:14px}.Toastify__close-button:hover,.Toastify__close-button:focus{opacity:1}@keyframes Toastify__trackProgress{0%{transform:scaleX(1)}to{transform:scaleX(0)}}.Toastify__progress-bar{position:absolute;bottom:0;left:0;width:100%;height:100%;z-index:1;opacity:.7;transform-origin:left}.Toastify__progress-bar--animated{animation:Toastify__trackProgress linear 1 forwards}.Toastify__progress-bar--controlled{transition:transform .2s}.Toastify__progress-bar--rtl{right:0;left:initial;transform-origin:right;border-bottom-left-radius:initial}.Toastify__progress-bar--wrp{position:absolute;overflow:hidden;bottom:0;left:0;width:100%;height:5px;border-bottom-left-radius:var(--toastify-toast-bd-radius);border-bottom-right-radius:var(--toastify-toast-bd-radius)}.Toastify__progress-bar--wrp[data-hidden=true]{opacity:0}.Toastify__progress-bar--bg{opacity:var(--toastify-color-progress-bgo);width:100%;height:100%}.Toastify__spinner{width:20px;height:20px;box-sizing:border-box;border:2px solid;border-radius:100%;border-color:var(--toastify-spinner-color-empty-area);border-right-color:var(--toastify-spinner-color);animation:Toastify__spin .65s linear infinite}@keyframes Toastify__bounceInRight{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutRight{20%{opacity:1;transform:translate3d(-20px,var(--y),0)}to{opacity:0;transform:translate3d(2000px,var(--y),0)}}@keyframes Toastify__bounceInLeft{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0)}60%{opacity:1;transform:translate3d(25px,0,0)}75%{transform:translate3d(-10px,0,0)}90%{transform:translate3d(5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutLeft{20%{opacity:1;transform:translate3d(20px,var(--y),0)}to{opacity:0;transform:translate3d(-2000px,var(--y),0)}}@keyframes Toastify__bounceInUp{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0)}60%{opacity:1;transform:translate3d(0,-20px,0)}75%{transform:translate3d(0,10px,0)}90%{transform:translate3d(0,-5px,0)}to{transform:translateZ(0)}}@keyframes Toastify__bounceOutUp{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,-2000px,0)}}@keyframes Toastify__bounceInDown{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0)}60%{opacity:1;transform:translate3d(0,25px,0)}75%{transform:translate3d(0,-10px,0)}90%{transform:translate3d(0,5px,0)}to{transform:none}}@keyframes Toastify__bounceOutDown{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,2000px,0)}}.Toastify__bounce-enter--top-left,.Toastify__bounce-enter--bottom-left{animation-name:Toastify__bounceInLeft}.Toastify__bounce-enter--top-right,.Toastify__bounce-enter--bottom-right{animation-name:Toastify__bounceInRight}.Toastify__bounce-enter--top-center{animation-name:Toastify__bounceInDown}.Toastify__bounce-enter--bottom-center{animation-name:Toastify__bounceInUp}.Toastify__bounce-exit--top-left,.Toastify__bounce-exit--bottom-left{animation-name:Toastify__bounceOutLeft}.Toastify__bounce-exit--top-right,.Toastify__bounce-exit--bottom-right{animation-name:Toastify__bounceOutRight}.Toastify__bounce-exit--top-center{animation-name:Toastify__bounceOutUp}.Toastify__bounce-exit--bottom-center{animation-name:Toastify__bounceOutDown}@keyframes Toastify__zoomIn{0%{opacity:0;transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes Toastify__zoomOut{0%{opacity:1}50%{opacity:0;transform:translate3d(0,var(--y),0) scale3d(.3,.3,.3)}to{opacity:0}}.Toastify__zoom-enter{animation-name:Toastify__zoomIn}.Toastify__zoom-exit{animation-name:Toastify__zoomOut}@keyframes Toastify__flipIn{0%{transform:perspective(400px) rotateX(90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotateX(-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotateX(10deg);opacity:1}80%{transform:perspective(400px) rotateX(-5deg)}to{transform:perspective(400px)}}@keyframes Toastify__flipOut{0%{transform:translate3d(0,var(--y),0) perspective(400px)}30%{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(-20deg);opacity:1}to{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(90deg);opacity:0}}.Toastify__flip-enter{animation-name:Toastify__flipIn}.Toastify__flip-exit{animation-name:Toastify__flipOut}@keyframes Toastify__slideInRight{0%{transform:translate3d(110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInLeft{0%{transform:translate3d(-110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInUp{0%{transform:translate3d(0,110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInDown{0%{transform:translate3d(0,-110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideOutRight{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(110%,var(--y),0)}}@keyframes Toastify__slideOutLeft{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(-110%,var(--y),0)}}@keyframes Toastify__slideOutDown{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,500px,0)}}@keyframes Toastify__slideOutUp{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,-500px,0)}}.Toastify__slide-enter--top-left,.Toastify__slide-enter--bottom-left{animation-name:Toastify__slideInLeft}.Toastify__slide-enter--top-right,.Toastify__slide-enter--bottom-right{animation-name:Toastify__slideInRight}.Toastify__slide-enter--top-center{animation-name:Toastify__slideInDown}.Toastify__slide-enter--bottom-center{animation-name:Toastify__slideInUp}.Toastify__slide-exit--top-left,.Toastify__slide-exit--bottom-left{animation-name:Toastify__slideOutLeft;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-right,.Toastify__slide-exit--bottom-right{animation-name:Toastify__slideOutRight;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-center{animation-name:Toastify__slideOutUp;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--bottom-center{animation-name:Toastify__slideOutDown;animation-timing-function:ease-in;animation-duration:.3s}@keyframes Toastify__spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\n`);import{isValidElement as $t}from\"react\";var L=t=>typeof t==\"number\"&&!isNaN(t),N=t=>typeof t==\"string\",P=t=>typeof t==\"function\",mt=t=>N(t)||L(t),B=t=>N(t)||P(t)?t:null,pt=(t,o)=>t===!1||L(t)&&t>0?t:o,z=t=>$t(t)||N(t)||P(t)||L(t);import ut,{useEffect as Rt,useLayoutEffect as Bt,useRef as zt}from\"react\";function Z(t,o,e=300){let{scrollHeight:r,style:s}=t;requestAnimationFrame(()=>{s.minHeight=\"initial\",s.height=r+\"px\",s.transition=`all ${e}ms`,requestAnimationFrame(()=>{s.height=\"0\",s.padding=\"0\",s.margin=\"0\",setTimeout(o,e)})})}function $({enter:t,exit:o,appendPosition:e=!1,collapse:r=!0,collapseDuration:s=300}){return function({children:a,position:d,preventExitTransition:c,done:T,nodeRef:g,isIn:v,playToast:x}){let C=e?`${t}--${d}`:t,S=e?`${o}--${d}`:o,E=zt(0);return Bt(()=>{let f=g.current,p=C.split(\" \"),b=n=>{n.target===g.current&&(x(),f.removeEventListener(\"animationend\",b),f.removeEventListener(\"animationcancel\",b),E.current===0&&n.type!==\"animationcancel\"&&f.classList.remove(...p))};(()=>{f.classList.add(...p),f.addEventListener(\"animationend\",b),f.addEventListener(\"animationcancel\",b)})()},[]),Rt(()=>{let f=g.current,p=()=>{f.removeEventListener(\"animationend\",p),r?Z(f,T,s):T()};v||(c?p():(()=>{E.current=1,f.className+=` ${S}`,f.addEventListener(\"animationend\",p)})())},[v]),ut.createElement(ut.Fragment,null,a)}}import{cloneElement as Ft,isValidElement as Ut}from\"react\";function J(t,o){return{content:tt(t.content,t.props),containerId:t.props.containerId,id:t.props.toastId,theme:t.props.theme,type:t.props.type,data:t.props.data||{},isLoading:t.props.isLoading,icon:t.props.icon,reason:t.removalReason,status:o}}function tt(t,o,e=!1){return Ut(t)&&!N(t.type)?Ft(t,{closeToast:o.closeToast,toastProps:o,data:o.data,isPaused:e}):P(t)?t({closeToast:o.closeToast,toastProps:o,data:o.data,isPaused:e}):t}import ot from\"react\";function yt({closeToast:t,theme:o,ariaLabel:e=\"close\"}){return ot.createElement(\"button\",{className:`Toastify__close-button Toastify__close-button--${o}`,type:\"button\",onClick:r=>{r.stopPropagation(),t(!0)},\"aria-label\":e},ot.createElement(\"svg\",{\"aria-hidden\":\"true\",viewBox:\"0 0 14 16\"},ot.createElement(\"path\",{fillRule:\"evenodd\",d:\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"})))}import et from\"react\";import Tt from\"clsx\";function gt({delay:t,isRunning:o,closeToast:e,type:r=\"default\",hide:s,className:l,controlledProgress:a,progress:d,rtl:c,isIn:T,theme:g}){let v=s||a&&d===0,x={animationDuration:`${t}ms`,animationPlayState:o?\"running\":\"paused\"};a&&(x.transform=`scaleX(${d})`);let C=Tt(\"Toastify__progress-bar\",a?\"Toastify__progress-bar--controlled\":\"Toastify__progress-bar--animated\",`Toastify__progress-bar-theme--${g}`,`Toastify__progress-bar--${r}`,{[\"Toastify__progress-bar--rtl\"]:c}),S=P(l)?l({rtl:c,type:r,defaultClassName:C}):Tt(C,l),E={[a&&d>=1?\"onTransitionEnd\":\"onAnimationEnd\"]:a&&d<1?null:()=>{T&&e()}};return et.createElement(\"div\",{className:\"Toastify__progress-bar--wrp\",\"data-hidden\":v},et.createElement(\"div\",{className:`Toastify__progress-bar--bg Toastify__progress-bar-theme--${g} Toastify__progress-bar--${r}`}),et.createElement(\"div\",{role:\"progressbar\",\"aria-hidden\":v?\"true\":\"false\",\"aria-label\":\"notification timer\",className:S,style:x,...E}))}import Dt from\"clsx\";import ct,{useEffect as yo,useRef as To,useState as go}from\"react\";var Xt=1,at=()=>`${Xt++}`;function _t(t,o,e){let r=1,s=0,l=[],a=[],d=o,c=new Map,T=new Set,g=i=>(T.add(i),()=>T.delete(i)),v=()=>{a=Array.from(c.values()),T.forEach(i=>i())},x=({containerId:i,toastId:n,updateId:u})=>{let h=i?i!==t:t!==1,m=c.has(n)&&u==null;return h||m},C=(i,n)=>{c.forEach(u=>{var h;(n==null||n===u.props.toastId)&&((h=u.toggle)==null||h.call(u,i))})},S=i=>{var n,u;(u=(n=i.props)==null?void 0:n.onClose)==null||u.call(n,i.removalReason),i.isActive=!1},E=i=>{if(i==null)c.forEach(S);else{let n=c.get(i);n&&S(n)}v()},f=()=>{s-=l.length,l=[]},p=i=>{var m,_;let{toastId:n,updateId:u}=i.props,h=u==null;i.staleId&&c.delete(i.staleId),i.isActive=!0,c.set(n,i),v(),e(J(i,h?\"added\":\"updated\")),h&&((_=(m=i.props).onOpen)==null||_.call(m))};return{id:t,props:d,observe:g,toggle:C,removeToast:E,toasts:c,clearQueue:f,buildToast:(i,n)=>{if(x(n))return;let{toastId:u,updateId:h,data:m,staleId:_,delay:k}=n,M=h==null;M&&s++;let A={...d,style:d.toastStyle,key:r++,...Object.fromEntries(Object.entries(n).filter(([D,Y])=>Y!=null)),toastId:u,updateId:h,data:m,isIn:!1,className:B(n.className||d.toastClassName),progressClassName:B(n.progressClassName||d.progressClassName),autoClose:n.isLoading?!1:pt(n.autoClose,d.autoClose),closeToast(D){c.get(u).removalReason=D,E(u)},deleteToast(){let D=c.get(u);if(D!=null){if(e(J(D,\"removed\")),c.delete(u),s--,s<0&&(s=0),l.length>0){p(l.shift());return}v()}}};A.closeButton=d.closeButton,n.closeButton===!1||z(n.closeButton)?A.closeButton=n.closeButton:n.closeButton===!0&&(A.closeButton=z(d.closeButton)?d.closeButton:!0);let R={content:i,props:A,staleId:_};d.limit&&d.limit>0&&s>d.limit&&M?l.push(R):L(k)?setTimeout(()=>{p(R)},k):p(R)},setProps(i){d=i},setToggle:(i,n)=>{let u=c.get(i);u&&(u.toggle=n)},isToastActive:i=>{var n;return(n=c.get(i))==null?void 0:n.isActive},getSnapshot:()=>a}}var I=new Map,F=[],st=new Set,Vt=t=>st.forEach(o=>o(t)),bt=()=>I.size>0;function Qt(){F.forEach(t=>nt(t.content,t.options)),F=[]}var vt=(t,{containerId:o})=>{var e;return(e=I.get(o||1))==null?void 0:e.toasts.get(t)};function X(t,o){var r;if(o)return!!((r=I.get(o))!=null&&r.isToastActive(t));let e=!1;return I.forEach(s=>{s.isToastActive(t)&&(e=!0)}),e}function ht(t){if(!bt()){F=F.filter(o=>t!=null&&o.options.toastId!==t);return}if(t==null||mt(t))I.forEach(o=>{o.removeToast(t)});else if(t&&(\"containerId\"in t||\"id\"in t)){let o=I.get(t.containerId);o?o.removeToast(t.id):I.forEach(e=>{e.removeToast(t.id)})}}var Ct=(t={})=>{I.forEach(o=>{o.props.limit&&(!t.containerId||o.id===t.containerId)&&o.clearQueue()})};function nt(t,o){z(t)&&(bt()||F.push({content:t,options:o}),I.forEach(e=>{e.buildToast(t,o)}))}function xt(t){var o;(o=I.get(t.containerId||1))==null||o.setToggle(t.id,t.fn)}function rt(t,o){I.forEach(e=>{(o==null||!(o!=null&&o.containerId)||(o==null?void 0:o.containerId)===e.id)&&e.toggle(t,o==null?void 0:o.id)})}function Et(t){let o=t.containerId||1;return{subscribe(e){let r=_t(o,t,Vt);I.set(o,r);let s=r.observe(e);return Qt(),()=>{s(),I.delete(o)}},setProps(e){var r;(r=I.get(o))==null||r.setProps(e)},getSnapshot(){var e;return(e=I.get(o))==null?void 0:e.getSnapshot()}}}function Pt(t){return st.add(t),()=>{st.delete(t)}}function Wt(t){return t&&(N(t.toastId)||L(t.toastId))?t.toastId:at()}function U(t,o){return nt(t,o),o.toastId}function V(t,o){return{...o,type:o&&o.type||t,toastId:Wt(o)}}function Q(t){return(o,e)=>U(o,V(t,e))}function y(t,o){return U(t,V(\"default\",o))}y.loading=(t,o)=>U(t,V(\"default\",{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1,...o}));function Gt(t,{pending:o,error:e,success:r},s){let l;o&&(l=N(o)?y.loading(o,s):y.loading(o.render,{...s,...o}));let a={isLoading:null,autoClose:null,closeOnClick:null,closeButton:null,draggable:null},d=(T,g,v)=>{if(g==null){y.dismiss(l);return}let x={type:T,...a,...s,data:v},C=N(g)?{render:g}:g;return l?y.update(l,{...x,...C}):y(C.render,{...x,...C}),v},c=P(t)?t():t;return c.then(T=>d(\"success\",r,T)).catch(T=>d(\"error\",e,T)),c}y.promise=Gt;y.success=Q(\"success\");y.info=Q(\"info\");y.error=Q(\"error\");y.warning=Q(\"warning\");y.warn=y.warning;y.dark=(t,o)=>U(t,V(\"default\",{theme:\"dark\",...o}));function qt(t){ht(t)}y.dismiss=qt;y.clearWaitingQueue=Ct;y.isActive=X;y.update=(t,o={})=>{let e=vt(t,o);if(e){let{props:r,content:s}=e,l={delay:100,...r,...o,toastId:o.toastId||t,updateId:at()};l.toastId!==t&&(l.staleId=t);let a=l.render||s;delete l.render,U(a,l)}};y.done=t=>{y.update(t,{progress:1})};y.onChange=Pt;y.play=t=>rt(!0,t);y.pause=t=>rt(!1,t);import{useRef as Kt,useSyncExternalStore as Yt}from\"react\";function It(t){var a;let{subscribe:o,getSnapshot:e,setProps:r}=Kt(Et(t)).current;r(t);let s=(a=Yt(o,e,e))==null?void 0:a.slice();function l(d){if(!s)return[];let c=new Map;return t.newestOnTop&&s.reverse(),s.forEach(T=>{let{position:g}=T.props;c.has(g)||c.set(g,[]),c.get(g).push(T)}),Array.from(c,T=>d(T[0],T[1]))}return{getToastToRender:l,isToastActive:X,count:s==null?void 0:s.length}}import{useEffect as Zt,useRef as St,useState as kt}from\"react\";function At(t){let[o,e]=kt(!1),[r,s]=kt(!1),l=St(null),a=St({start:0,delta:0,removalDistance:0,canCloseOnClick:!0,canDrag:!1,didMove:!1}).current,{autoClose:d,pauseOnHover:c,closeToast:T,onClick:g,closeOnClick:v}=t;xt({id:t.toastId,containerId:t.containerId,fn:e}),Zt(()=>{if(t.pauseOnFocusLoss)return x(),()=>{C()}},[t.pauseOnFocusLoss]);function x(){document.hasFocus()||p(),window.addEventListener(\"focus\",f),window.addEventListener(\"blur\",p)}function C(){window.removeEventListener(\"focus\",f),window.removeEventListener(\"blur\",p)}function S(m){if(t.draggable===!0||t.draggable===m.pointerType){b();let _=l.current;a.canCloseOnClick=!0,a.canDrag=!0,_.style.transition=\"none\",t.draggableDirection===\"x\"?(a.start=m.clientX,a.removalDistance=_.offsetWidth*(t.draggablePercent/100)):(a.start=m.clientY,a.removalDistance=_.offsetHeight*(t.draggablePercent===80?t.draggablePercent*1.5:t.draggablePercent)/100)}}function E(m){let{top:_,bottom:k,left:M,right:A}=l.current.getBoundingClientRect();m.nativeEvent.type!==\"touchend\"&&t.pauseOnHover&&m.clientX>=M&&m.clientX<=A&&m.clientY>=_&&m.clientY<=k?p():f()}function f(){e(!0)}function p(){e(!1)}function b(){a.didMove=!1,document.addEventListener(\"pointermove\",n),document.addEventListener(\"pointerup\",u)}function i(){document.removeEventListener(\"pointermove\",n),document.removeEventListener(\"pointerup\",u)}function n(m){let _=l.current;if(a.canDrag&&_){a.didMove=!0,o&&p(),t.draggableDirection===\"x\"?a.delta=m.clientX-a.start:a.delta=m.clientY-a.start,a.start!==m.clientX&&(a.canCloseOnClick=!1);let k=t.draggableDirection===\"x\"?`${a.delta}px, var(--y)`:`0, calc(${a.delta}px + var(--y))`;_.style.transform=`translate3d(${k},0)`,_.style.opacity=`${1-Math.abs(a.delta/a.removalDistance)}`}}function u(){i();let m=l.current;if(a.canDrag&&a.didMove&&m){if(a.canDrag=!1,Math.abs(a.delta)>a.removalDistance){s(!0),t.closeToast(!0),t.collapseAll();return}m.style.transition=\"transform 0.2s, opacity 0.2s\",m.style.removeProperty(\"transform\"),m.style.removeProperty(\"opacity\")}}let h={onPointerDown:S,onPointerUp:E};return d&&c&&(h.onMouseEnter=p,t.stacked||(h.onMouseLeave=f)),v&&(h.onClick=m=>{g&&g(m),a.canCloseOnClick&&T(!0)}),{playToast:f,pauseToast:p,isRunning:o,preventExitTransition:r,toastRef:l,eventHandlers:h}}import{useEffect as Jt,useLayoutEffect as to}from\"react\";var Ot=typeof window!=\"undefined\"?to:Jt;import it from\"clsx\";import q,{cloneElement as co,isValidElement as fo}from\"react\";import O,{cloneElement as oo,isValidElement as eo}from\"react\";var G=({theme:t,type:o,isLoading:e,...r})=>O.createElement(\"svg\",{viewBox:\"0 0 24 24\",width:\"100%\",height:\"100%\",fill:t===\"colored\"?\"currentColor\":`var(--toastify-icon-color-${o})`,...r});function ao(t){return O.createElement(G,{...t},O.createElement(\"path\",{d:\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"}))}function so(t){return O.createElement(G,{...t},O.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"}))}function no(t){return O.createElement(G,{...t},O.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"}))}function ro(t){return O.createElement(G,{...t},O.createElement(\"path\",{d:\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"}))}function io(){return O.createElement(\"div\",{className:\"Toastify__spinner\"})}var W={info:so,warning:ao,success:no,error:ro,spinner:io},lo=t=>t in W;function Nt({theme:t,type:o,isLoading:e,icon:r}){let s=null,l={theme:t,type:o};return r===!1||(P(r)?s=r({...l,isLoading:e}):eo(r)?s=oo(r,l):e?s=W.spinner():lo(o)&&(s=W[o](l))),s}var wt=t=>{let{isRunning:o,preventExitTransition:e,toastRef:r,eventHandlers:s,playToast:l}=At(t),{closeButton:a,children:d,autoClose:c,onClick:T,type:g,hideProgressBar:v,closeToast:x,transition:C,position:S,className:E,style:f,progressClassName:p,updateId:b,role:i,progress:n,rtl:u,toastId:h,deleteToast:m,isIn:_,isLoading:k,closeOnClick:M,theme:A,ariaLabel:R}=t,D=it(\"Toastify__toast\",`Toastify__toast-theme--${A}`,`Toastify__toast--${g}`,{[\"Toastify__toast--rtl\"]:u},{[\"Toastify__toast--close-on-click\"]:M}),Y=P(E)?E({rtl:u,position:S,type:g,defaultClassName:D}):it(D,E),ft=Nt(t),dt=!!n||!c,j={closeToast:x,type:g,theme:A},H=null;return a===!1||(P(a)?H=a(j):fo(a)?H=co(a,j):H=yt(j)),q.createElement(C,{isIn:_,done:m,position:S,preventExitTransition:e,nodeRef:r,playToast:l},q.createElement(\"div\",{id:h,tabIndex:0,onClick:T,\"data-in\":_,className:Y,...s,style:f,ref:r,..._&&{role:i,\"aria-label\":R}},ft!=null&&q.createElement(\"div\",{className:it(\"Toastify__toast-icon\",{[\"Toastify--animate-icon Toastify__zoom-enter\"]:!k})},ft),tt(d,t,!o),H,!t.customProgressBar&&q.createElement(gt,{...b&&!dt?{key:`p-${b}`}:{},rtl:u,theme:A,delay:c,isRunning:o,isIn:_,closeToast:x,hide:v,type:g,className:p,controlledProgress:dt,progress:n||0})))};var K=(t,o=!1)=>({enter:`Toastify--animate Toastify__${t}-enter`,exit:`Toastify--animate Toastify__${t}-exit`,appendPosition:o}),lt=$(K(\"bounce\",!0)),mo=$(K(\"slide\",!0)),po=$(K(\"zoom\")),uo=$(K(\"flip\"));var _o={position:\"top-right\",transition:lt,autoClose:5e3,closeButton:!0,pauseOnHover:!0,pauseOnFocusLoss:!0,draggable:\"touch\",draggablePercent:80,draggableDirection:\"x\",role:\"alert\",theme:\"light\",\"aria-label\":\"Notifications Alt+T\",hotKeys:t=>t.altKey&&t.code===\"KeyT\"};function Lt(t){let o={..._o,...t},e=t.stacked,[r,s]=go(!0),l=To(null),{getToastToRender:a,isToastActive:d,count:c}=It(o),{className:T,style:g,rtl:v,containerId:x,hotKeys:C}=o;function S(f){let p=Dt(\"Toastify__toast-container\",`Toastify__toast-container--${f}`,{[\"Toastify__toast-container--rtl\"]:v});return P(T)?T({position:f,rtl:v,defaultClassName:p}):Dt(p,B(T))}function E(){e&&(s(!0),y.play())}return Ot(()=>{var f;if(e){let p=l.current.querySelectorAll('[data-in=\"true\"]'),b=12,i=(f=o.position)==null?void 0:f.includes(\"top\"),n=0,u=0;Array.from(p).reverse().forEach((h,m)=>{let _=h;_.classList.add(\"Toastify__toast--stacked\"),m>0&&(_.dataset.collapsed=`${r}`),_.dataset.pos||(_.dataset.pos=i?\"top\":\"bot\");let k=n*(r?.2:1)+(r?0:b*m);_.style.setProperty(\"--y\",`${i?k:k*-1}px`),_.style.setProperty(\"--g\",`${b}`),_.style.setProperty(\"--s\",`${1-(r?u:0)}`),n+=_.offsetHeight,u+=.025})}},[r,c,e]),yo(()=>{function f(p){var i;let b=l.current;C(p)&&((i=b.querySelector('[tabIndex=\"0\"]'))==null||i.focus(),s(!1),y.pause()),p.key===\"Escape\"&&(document.activeElement===b||b!=null&&b.contains(document.activeElement))&&(s(!0),y.play())}return document.addEventListener(\"keydown\",f),()=>{document.removeEventListener(\"keydown\",f)}},[C]),ct.createElement(\"section\",{ref:l,className:\"Toastify\",id:x,onMouseEnter:()=>{e&&(s(!1),y.pause())},onMouseLeave:E,\"aria-live\":\"polite\",\"aria-atomic\":\"false\",\"aria-relevant\":\"additions text\",\"aria-label\":o[\"aria-label\"]},a((f,p)=>{let b=p.length?{...g}:{...g,pointerEvents:\"none\"};return ct.createElement(\"div\",{tabIndex:-1,className:S(f),\"data-stacked\":e,style:b,key:`c-${f}`},p.map(({content:i,props:n})=>ct.createElement(wt,{...n,stacked:e,collapseAll:E,isIn:d(n.toastId,n.containerId),key:`t-${n.key}`},i)))}))}export{lt as Bounce,uo as Flip,W as Icons,mo as Slide,Lt as ToastContainer,po as Zoom,Z as collapseToast,$ as cssTransition,y as toast};\n//# sourceMappingURL=index.mjs.map","import { offlineDb } from './db.service';\nimport { apiClient } from './api.service';\n\n// Types defined inline\ninterface Customer {\n  id: string;\n  reference: string;\n  name: string;\n  phone: string | null;\n  email: string | null;\n  address: string;\n  notes: string | null;\n  isArchived: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface Job {\n  id: string;\n  title: string;\n  customerId: string;\n  status: string;\n  // Add other job fields as needed\n}\n\ninterface Material {\n  id: string;\n  name: string;\n  // Add other material fields as needed\n}\n\n// API endpoints\nconst API_ENDPOINTS = {\n  CUSTOMERS: '/api/customers',\n  CUSTOMER_BY_ID: (id: string) => `/api/customers/${id}`,\n  JOBS: '/api/jobs',\n  JOB_BY_ID: (id: string) => `/api/jobs/${id}`\n};\n\ninterface SyncOperation {\n  id: string;\n  operation: 'create' | 'update' | 'delete';\n  entityType: 'customer' | 'job' | 'material';\n  entityId?: string;\n  payload: any;\n  timestamp: Date;\n  retryCount: number;\n}\n\n/**\n * Simplified sync service that actually works\n */\nclass SimpleSyncService {\n  private syncQueue: SyncOperation[] = [];\n  private syncing = false;\n\n  constructor() {\n    console.log('[SyncService] Initializing sync service...');\n    \n    // Load queue from localStorage on startup\n    this.loadQueue();\n    \n    // Start sync when online\n    window.addEventListener('online', () => {\n      console.log('[SyncService] Device is online, starting sync...');\n      this.syncAll();\n    });\n    \n    window.addEventListener('offline', () => {\n      console.log('[SyncService] Device went offline');\n    });\n    \n    // Auto-sync every 30 seconds if online\n    setInterval(() => {\n      if (navigator.onLine && !this.syncing) {\n        console.log('[SyncService] Auto-sync timer triggered');\n        this.syncAll();\n      }\n    }, 30000);\n    \n    // Initial sync on startup if online\n    if (navigator.onLine) {\n      console.log('[SyncService] Online at startup, syncing in 2 seconds...');\n      setTimeout(() => this.syncAll(), 2000);\n    }\n  }\n\n  private loadQueue() {\n    try {\n      const saved = localStorage.getItem('khs_sync_queue');\n      if (saved) {\n        this.syncQueue = JSON.parse(saved);\n        console.log('[SyncService] Loaded sync queue', this.syncQueue);\n      }\n    } catch (error) {\n      console.error('[SyncService] Failed to load queue', error);\n    }\n  }\n\n  private saveQueue() {\n    try {\n      localStorage.setItem('khs_sync_queue', JSON.stringify(this.syncQueue));\n    } catch (error) {\n      console.error('[SyncService] Failed to save queue', error);\n    }\n  }\n\n  async queueOperation(params: {\n    operation: 'create' | 'update' | 'delete';\n    entityType: 'customer' | 'job' | 'material';\n    entityId?: string;\n    payload: any;\n    timestamp: Date;\n  }) {\n    const op: SyncOperation = {\n      id: `sync_${Date.now()}_${Math.random()}`,\n      ...params,\n      retryCount: 0\n    };\n    \n    this.syncQueue.push(op);\n    this.saveQueue();\n    console.log('[SyncService] Queued operation', op);\n    \n    // Try to sync immediately if online\n    if (navigator.onLine) {\n      this.syncAll();\n    }\n  }\n\n  async syncAll(): Promise<{ success: boolean; synced: number; failed: number }> {\n    if (this.syncing || !navigator.onLine) {\n      return { success: false, synced: 0, failed: 0 };\n    }\n\n    this.syncing = true;\n    let synced = 0;\n    let failed = 0;\n\n    console.log('[SyncService] Starting sync, queue size:', this.syncQueue.length);\n\n    // Process queue in order\n    const queue = [...this.syncQueue];\n    for (const op of queue) {\n      try {\n        await this.syncOperation(op);\n        // Remove from queue on success\n        this.syncQueue = this.syncQueue.filter(q => q.id !== op.id);\n        synced++;\n        console.log('[SyncService] Synced operation', op);\n      } catch (error) {\n        console.error('[SyncService] Failed to sync operation', op, error);\n        op.retryCount++;\n        failed++;\n        \n        // Remove if too many retries\n        if (op.retryCount > 5) {\n          this.syncQueue = this.syncQueue.filter(q => q.id !== op.id);\n          console.error('[SyncService] Giving up on operation after 5 retries', op);\n        }\n      }\n    }\n\n    this.saveQueue();\n    this.syncing = false;\n\n    // Fetch latest data from server after sync\n    if (synced > 0) {\n      await this.refreshDataFromServer();\n    }\n\n    console.log(`[SyncService] Sync complete. Synced: ${synced}, Failed: ${failed}`);\n    return { success: true, synced, failed };\n  }\n\n  private async syncOperation(op: SyncOperation) {\n    switch (op.entityType) {\n      case 'customer':\n        await this.syncCustomer(op);\n        break;\n      case 'job':\n        await this.syncJob(op);\n        break;\n      case 'material':\n        await this.syncMaterial(op);\n        break;\n    }\n  }\n\n  private async syncCustomer(op: SyncOperation) {\n    switch (op.operation) {\n      case 'create': {\n        // Create on server\n        const created = await apiClient.post<Customer>(API_ENDPOINTS.CUSTOMERS, op.payload);\n        // Replace temp ID with real ID in IndexedDB\n        if (op.payload.id && op.payload.id.startsWith('temp_')) {\n          await offlineDb.deleteCustomer(op.payload.id);\n        }\n        await offlineDb.saveCustomer(created);\n        break;\n      }\n      case 'update': {\n        if (op.entityId && !op.entityId.startsWith('temp_')) {\n          const updated = await apiClient.put<Customer>(\n            API_ENDPOINTS.CUSTOMER_BY_ID(op.entityId),\n            op.payload\n          );\n          await offlineDb.saveCustomer(updated);\n        }\n        break;\n      }\n      case 'delete': {\n        if (op.entityId && !op.entityId.startsWith('temp_')) {\n          await apiClient.delete(API_ENDPOINTS.CUSTOMER_BY_ID(op.entityId));\n          await offlineDb.deleteCustomer(op.entityId);\n        }\n        break;\n      }\n    }\n  }\n\n  private async syncJob(op: SyncOperation) {\n    // Similar implementation for jobs\n    switch (op.operation) {\n      case 'create': {\n        const created = await apiClient.post<Job>(API_ENDPOINTS.JOBS, op.payload);\n        if (op.payload.id && op.payload.id.startsWith('temp_')) {\n          await offlineDb.deleteJob(op.payload.id);\n        }\n        await offlineDb.saveJob(created);\n        break;\n      }\n      // ... other operations\n    }\n  }\n\n  private async syncMaterial(op: SyncOperation) {\n    // Similar implementation for materials\n  }\n\n  private async refreshDataFromServer() {\n    try {\n      console.log('[SyncService] Refreshing data from server...');\n      \n      // Fetch all customers\n      const customers = await apiClient.get<Customer[]>(API_ENDPOINTS.CUSTOMERS);\n      for (const customer of customers) {\n        await offlineDb.saveCustomer(customer);\n      }\n      \n      // Fetch all jobs\n      const jobs = await apiClient.get<Job[]>(API_ENDPOINTS.JOBS);\n      for (const job of jobs) {\n        await offlineDb.saveJob(job);\n      }\n      \n      console.log('[SyncService] Data refresh complete');\n    } catch (error) {\n      console.error('[SyncService] Failed to refresh data', error);\n    }\n  }\n\n  // Debug methods\n  getPendingOperations(): SyncOperation[] {\n    return [...this.syncQueue];\n  }\n\n  getSyncStatus() {\n    return {\n      queueSize: this.syncQueue.length,\n      syncing: this.syncing,\n      online: navigator.onLine,\n      lastSyncTime: new Date() // TODO: Track this properly\n    };\n  }\n\n  clearQueue() {\n    this.syncQueue = [];\n    this.saveQueue();\n    console.log('[SyncService] Queue cleared');\n  }\n}\n\nexport const simpleSyncService = new SimpleSyncService();","// Initialize services that need to run on app startup\nimport { simpleSyncService } from './sync.service.simple';\n\n// This ensures the sync service is instantiated and starts its timers\nconsole.log('[ServiceInit] Initializing services...');\n\n// Export the instance to ensure it's created\nexport const syncServiceInstance = simpleSyncService;\n\n// Log sync status on startup\nsetTimeout(() => {\n  const status = simpleSyncService.getSyncStatus();\n  console.log('[ServiceInit] Initial sync status:', status);\n}, 1000);","import { useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { Router } from './router';\nimport { initializeServices, cleanupServices } from './services';\nimport { PWAProvider } from './components/PWAProvider';\nimport { AuthSetup } from './components/AuthSetup';\nimport { LoginForm } from './components/LoginForm';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// Initialize sync service\nimport './services/init';\n\n// Create a client optimized for construction field work\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 5 * 60 * 1000, // 5 minutes - keep data fresh for field workers\n      gcTime: 30 * 60 * 1000, // 30 minutes - longer cache for offline scenarios\n      retry: (failureCount, error) => {\n        // Don't retry on authentication errors\n        if (error?.status === 401 || error?.status === 403) {\n          return false;\n        }\n        // Retry network errors more aggressively for field conditions\n        if (error?.code === 'NETWORK_ERROR' || error?.status >= 500) {\n          return failureCount < 5;\n        }\n        // Don't retry on 4xx client errors (except auth)\n        if (error?.status && error.status >= 400 && error.status < 500) {\n          return false;\n        }\n        return failureCount < 3;\n      },\n      retryDelay: (attemptIndex) => {\n        // Progressive backoff for field conditions\n        return Math.min(1000 * 2 ** attemptIndex, 30000);\n      },\n      networkMode: 'offlineFirst', // Prioritize offline-first for field workers\n    },\n    mutations: {\n      retry: 3,\n      networkMode: 'offlineFirst',\n    },\n  },\n});\n\nfunction App() {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [needsAuthSetup, setNeedsAuthSetup] = useState(false);\n  const [needsLogin, setNeedsLogin] = useState(false);\n\n  useEffect(() => {\n    // Initialize all services\n    const initializeApp = async () => {\n      try {\n        await initializeServices();\n        setIsInitialized(true);\n      } catch (error) {\n        // Failed to initialize application\n        setIsInitialized(true); // Show the app even with initialization errors\n      }\n    };\n\n    initializeApp();\n\n    // Cleanup function\n    return () => {\n      cleanupServices();\n    };\n  }, []);\n\n  // Loading screen while initializing\n  if (!isInitialized) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-4 border-blue-600 mx-auto mb-4\"></div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Initializing KHS CRM</h2>\n          <p className=\"text-gray-600\">Setting up offline capabilities...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Skip onboarding for practical use\n\n  // Show auth setup if needed\n  if (needsAuthSetup) {\n    return (\n      <AuthSetup \n        onComplete={() => {\n          setNeedsAuthSetup(false);\n          setNeedsLogin(true);\n        }}\n      />\n    );\n  }\n\n  // Show login if needed\n  if (needsLogin) {\n    return <LoginForm />;\n  }\n\n  // Main app\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <PWAProvider>\n        <BrowserRouter>\n          <Router />\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </BrowserRouter>\n      </PWAProvider>\n      {import.meta.env.DEV && <ReactQueryDevtools initialIsOpen={false} />}\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\n// Check if service workers are supported\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    // Service worker will be registered by Vite PWA plugin\n  });\n}\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);"],"file":"assets/index-DEcLH6Mq.js"}