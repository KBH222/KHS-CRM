{"version":3,"file":"Materials-DeMTR3WJ.js","sources":["../../src/pages/Materials.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Materials = () => {\n  const navigate = useNavigate();\n  const [materials, setMaterials] = useState([]);\n  const [groupedMaterials, setGroupedMaterials] = useState({});\n  const [groupBy, setGroupBy] = useState('store'); // 'store' or 'job'\n  const [selectedStore, setSelectedStore] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Load materials from all jobs\n  useEffect(() => {\n    const loadMaterialsFromJobs = () => {\n      const allMaterials = [];\n      \n      // Get all jobs from localStorage\n      const savedJobs = localStorage.getItem('khs-crm-jobs');\n      const jobs = savedJobs ? JSON.parse(savedJobs) : [];\n      \n      // For each job, get its materials\n      jobs.forEach(job => {\n        const jobMaterials = localStorage.getItem(`job_materials_${job.id}`);\n        if (jobMaterials) {\n          const materials = JSON.parse(jobMaterials);\n          materials.forEach(material => {\n            allMaterials.push({\n              ...material,\n              jobId: job.id,\n              jobTitle: job.title,\n              customerName: job.customerName\n            });\n          });\n        }\n      });\n\n\n      setMaterials(allMaterials);\n    };\n\n    loadMaterialsFromJobs();\n  }, []);\n\n  // Group materials whenever materials or groupBy changes\n  useEffect(() => {\n    const grouped = {};\n    \n    materials.forEach(material => {\n      const key = groupBy === 'store' ? material.store : material.jobTitle;\n      if (!grouped[key]) {\n        grouped[key] = {\n          items: [],\n          total: 0,\n          count: 0\n        };\n      }\n      grouped[key].items.push(material);\n      grouped[key].total += material.total;\n      grouped[key].count += material.quantity;\n    });\n\n    setGroupedMaterials(grouped);\n  }, [materials, groupBy]);\n\n  // Filter materials based on search and selected store\n  const filteredMaterials = materials.filter(material => {\n    const matchesSearch = material.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         material.jobTitle.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         material.customerName.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStore = selectedStore === 'all' || material.store === selectedStore;\n    return matchesSearch && matchesStore;\n  });\n\n  // Get unique stores\n  const stores = [...new Set(materials.map(m => m.store))];\n\n  // Calculate totals\n  const totalCost = filteredMaterials.reduce((sum, m) => sum + m.total, 0);\n\n  return (\n    <div style={{ \n      height: '100%',\n      overflowY: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      paddingBottom: '100px'\n    }}>\n      <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n        {/* Header */}\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center', \n        marginBottom: '24px' \n      }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n          <button\n            onClick={() => navigate('/dashboard')}\n            style={{\n              background: 'none',\n              border: 'none',\n              padding: '8px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              color: '#6B7280',\n              borderRadius: '6px'\n            }}\n            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#F3F4F6'}\n            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = 'transparent'}\n          >\n            <svg style={{ width: '28px', height: '28px' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n          </button>\n          <div>\n            <h1 style={{ fontSize: '24px', fontWeight: 'bold', margin: '0 0 8px 0' }}>\n              Master Materials List\n            </h1>\n            <p style={{ color: '#6B7280', margin: 0 }}>\n              All materials from all jobs in one place\n            </p>\n          </div>\n        </div>\n        <button\n          onClick={() => navigate('/jobs')}\n          style={{\n            padding: '10px 20px',\n            backgroundColor: '#3B82F6',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: 'pointer',\n            fontSize: '14px',\n            fontWeight: '500'\n          }}\n        >\n          View Jobs\n        </button>\n      </div>\n\n      {/* Filters and Search */}\n      <div style={{\n        backgroundColor: 'white',\n        borderRadius: '8px',\n        padding: '16px',\n        marginBottom: '24px',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n        display: 'flex',\n        gap: '16px',\n        alignItems: 'center',\n        flexWrap: 'wrap'\n      }}>\n        <div style={{ flex: '1 1 300px' }}>\n          <input\n            type=\"text\"\n            placeholder=\"Search materials, jobs, or customers...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            style={{\n              width: '100%',\n              padding: '10px',\n              border: '1px solid #E5E7EB',\n              borderRadius: '6px',\n              fontSize: '14px'\n            }}\n          />\n        </div>\n        \n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n          <label style={{ fontSize: '14px', fontWeight: '500', color: '#374151' }}>\n            Store:\n          </label>\n          <select\n            value={selectedStore}\n            onChange={(e) => setSelectedStore(e.target.value)}\n            style={{\n              padding: '8px 12px',\n              border: '1px solid #E5E7EB',\n              borderRadius: '6px',\n              fontSize: '14px',\n              cursor: 'pointer'\n            }}\n          >\n            <option value=\"all\">All Stores</option>\n            {stores.map(store => (\n              <option key={store} value={store}>{store}</option>\n            ))}\n          </select>\n        </div>\n\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n          <label style={{ fontSize: '14px', fontWeight: '500', color: '#374151' }}>\n            Group by:\n          </label>\n          <select\n            value={groupBy}\n            onChange={(e) => setGroupBy(e.target.value)}\n            style={{\n              padding: '8px 12px',\n              border: '1px solid #E5E7EB',\n              borderRadius: '6px',\n              fontSize: '14px',\n              cursor: 'pointer'\n            }}\n          >\n            <option value=\"store\">Store</option>\n            <option value=\"job\">Job</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Summary Cards */}\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n        gap: '16px',\n        marginBottom: '24px'\n      }}>\n        <div style={{\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          padding: '20px',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n          borderLeft: '4px solid #3B82F6'\n        }}>\n          <h3 style={{ fontSize: '14px', color: '#6B7280', margin: '0 0 8px 0', fontWeight: '500' }}>\n            Total Materials\n          </h3>\n          <p style={{ fontSize: '28px', fontWeight: 'bold', margin: '0', color: '#111827' }}>\n            {filteredMaterials.length}\n          </p>\n          <p style={{ fontSize: '12px', color: '#9CA3AF', marginTop: '4px' }}>\n            Unique items\n          </p>\n        </div>\n\n        <div style={{\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          padding: '20px',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n          borderLeft: '4px solid #10B981'\n        }}>\n          <h3 style={{ fontSize: '14px', color: '#6B7280', margin: '0 0 8px 0', fontWeight: '500' }}>\n            Total Cost\n          </h3>\n          <p style={{ fontSize: '28px', fontWeight: 'bold', margin: '0', color: '#111827' }}>\n            ${totalCost.toFixed(2)}\n          </p>\n          <p style={{ fontSize: '12px', color: '#9CA3AF', marginTop: '4px' }}>\n            All materials\n          </p>\n        </div>\n\n        <div style={{\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          padding: '20px',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n          borderLeft: '4px solid #8B5CF6'\n        }}>\n          <h3 style={{ fontSize: '14px', color: '#6B7280', margin: '0 0 8px 0', fontWeight: '500' }}>\n            Stores\n          </h3>\n          <p style={{ fontSize: '28px', fontWeight: 'bold', margin: '0', color: '#111827' }}>\n            {stores.length}\n          </p>\n          <p style={{ fontSize: '12px', color: '#9CA3AF', marginTop: '4px' }}>\n            Different suppliers\n          </p>\n        </div>\n      </div>\n\n      {/* Grouped Materials */}\n      {Object.entries(groupedMaterials).map(([groupName, groupData]) => (\n        <div key={groupName} style={{\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          marginBottom: '16px',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n          overflow: 'hidden'\n        }}>\n          <div style={{\n            padding: '16px',\n            backgroundColor: '#F9FAFB',\n            borderBottom: '1px solid #E5E7EB',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          }}>\n            <div>\n              <h3 style={{ fontSize: '16px', fontWeight: '600', margin: '0', color: '#111827' }}>\n                {groupName}\n              </h3>\n              <p style={{ fontSize: '14px', color: '#6B7280', margin: '4px 0 0 0' }}>\n                {groupData.items.length} items • Total: ${groupData.total.toFixed(2)}\n              </p>\n            </div>\n            {groupBy === 'job' && (\n              <button\n                onClick={() => {\n                  const job = materials.find(m => m.jobTitle === groupName);\n                  if (job && job.jobId) {\n                    navigate(`/jobs/${job.jobId}`);\n                  }\n                }}\n                style={{\n                  padding: '6px 12px',\n                  backgroundColor: '#E5E7EB',\n                  color: '#374151',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  fontSize: '12px'\n                }}\n              >\n                View Job\n              </button>\n            )}\n          </div>\n\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n            <thead>\n              <tr style={{ borderBottom: '1px solid #E5E7EB' }}>\n                <th style={{ padding: '12px 16px', textAlign: 'left', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Material\n                </th>\n                <th style={{ padding: '12px 16px', textAlign: 'center', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Quantity\n                </th>\n                <th style={{ padding: '12px 16px', textAlign: 'center', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Unit\n                </th>\n                {groupBy === 'store' && (\n                  <th style={{ padding: '12px 16px', textAlign: 'left', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                    Job\n                  </th>\n                )}\n                {groupBy === 'job' && (\n                  <th style={{ padding: '12px 16px', textAlign: 'center', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                    Store\n                  </th>\n                )}\n                <th style={{ padding: '12px 16px', textAlign: 'right', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Price/Unit\n                </th>\n                <th style={{ padding: '12px 16px', textAlign: 'right', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Total\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {groupData.items\n                .filter(material => {\n                  const matchesSearch = material.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                                       material.jobTitle.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                                       material.customerName.toLowerCase().includes(searchTerm.toLowerCase());\n                  const matchesStore = selectedStore === 'all' || material.store === selectedStore;\n                  return matchesSearch && matchesStore;\n                })\n                .map((material, index) => (\n                  <tr key={material.id} style={{ \n                    borderBottom: index < groupData.items.length - 1 ? '1px solid #F3F4F6' : 'none' \n                  }}>\n                    <td style={{ padding: '16px', fontSize: '14px', color: '#111827' }}>\n                      {material.name}\n                    </td>\n                    <td style={{ padding: '16px', textAlign: 'center', fontSize: '14px', color: '#374151' }}>\n                      {material.quantity}\n                    </td>\n                    <td style={{ padding: '16px', textAlign: 'center', fontSize: '14px', color: '#374151' }}>\n                      {material.unit}\n                    </td>\n                    {groupBy === 'store' && (\n                      <td style={{ padding: '16px', fontSize: '14px', color: '#374151' }}>\n                        <div>\n                          <div style={{ fontWeight: '500' }}>{material.jobTitle}</div>\n                          <div style={{ fontSize: '12px', color: '#6B7280' }}>{material.customerName}</div>\n                        </div>\n                      </td>\n                    )}\n                    {groupBy === 'job' && (\n                      <td style={{ padding: '16px', textAlign: 'center', fontSize: '14px' }}>\n                        <span style={{\n                          padding: '4px 8px',\n                          backgroundColor: material.store === 'Home Depot' ? '#FEF3C7' : material.store === 'Lowes' ? '#DBEAFE' : '#E5E7EB',\n                          color: material.store === 'Home Depot' ? '#92400E' : material.store === 'Lowes' ? '#1E3A8A' : '#374151',\n                          borderRadius: '4px',\n                          fontSize: '12px',\n                          fontWeight: '500'\n                        }}>\n                          {material.store}\n                        </span>\n                      </td>\n                    )}\n                    <td style={{ padding: '16px', textAlign: 'right', fontSize: '14px', color: '#374151' }}>\n                      ${material.price.toFixed(2)}\n                    </td>\n                    <td style={{ padding: '16px', textAlign: 'right', fontSize: '14px', fontWeight: '600', color: '#111827' }}>\n                      ${material.total.toFixed(2)}\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      ))}\n\n      </div>\n    </div>\n  );\n};\n\nexport default Materials;"],"names":["Materials","navigate","useNavigate","materials","setMaterials","useState","groupedMaterials","setGroupedMaterials","groupBy","setGroupBy","selectedStore","setSelectedStore","searchTerm","setSearchTerm","useEffect","allMaterials","savedJobs","job","jobMaterials","material","grouped","key","filteredMaterials","matchesSearch","matchesStore","stores","m","totalCost","sum","jsx","jsxs","e","store","groupName","groupData","index"],"mappings":"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"}