{"version":3,"file":"CustomersEnhanced-09OTVS2s.js","sources":["../../src/services/api/customers.api.ts","../../src/services/api/jobs.api.ts","../../src/services/api/auth.api.ts","../../src/components/SyncDiagnostics.tsx","../../src/pages/CustomersEnhanced.tsx"],"sourcesContent":["import { customerServiceFixed } from '../customer.service.fixed';\nimport { simpleSyncService } from '../sync.service.simple';\n\n// Type defined inline\ninterface Customer {\n  id: string;\n  reference: string;\n  name: string;\n  phone: string | null;\n  email: string | null;\n  address: string;\n  notes: string | null;\n  isArchived: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n  createdBy: string;\n  modifiedBy: string;\n  jobs?: any[];\n}\n\n// Re-export the fixed customer service methods under the old API interface\nexport const customersApi = {\n  // Get all customers\n  async getAll(): Promise<Customer[]> {\n    console.log('[CustomersAPI] Getting all customers');\n    return customerServiceFixed.getCustomers();\n  },\n\n  // Get single customer\n  async getById(id: string): Promise<Customer> {\n    console.log('[CustomersAPI] Getting customer by ID:', id);\n    const customer = await customerServiceFixed.getCustomer(id);\n    if (!customer) {\n      throw new Error('Customer not found');\n    }\n    return customer;\n  },\n\n  // Create customer\n  async create(customer: Omit<Customer, 'id' | 'createdAt' | 'updatedAt' | 'createdBy' | 'modifiedBy' | 'isArchived' | 'reference'>): Promise<Customer> {\n    console.log('[CustomersAPI] Creating customer:', customer);\n    return customerServiceFixed.createCustomer({\n      name: customer.name,\n      phone: customer.phone || undefined,\n      email: customer.email || undefined,\n      address: customer.address,\n      notes: customer.notes || undefined\n    });\n  },\n\n  // Update customer\n  async update(id: string, customer: Partial<Customer>): Promise<Customer> {\n    console.log('[CustomersAPI] Updating customer:', id, customer);\n    return customerServiceFixed.updateCustomer(id, {\n      name: customer.name,\n      phone: customer.phone,\n      email: customer.email,\n      address: customer.address,\n      notes: customer.notes\n    });\n  },\n\n  // Delete (archive) customer\n  async delete(id: string): Promise<void> {\n    console.log('[CustomersAPI] Deleting customer:', id);\n    await customerServiceFixed.deleteCustomer(id);\n  },\n\n  // Sync local changes with server\n  async sync(): Promise<void> {\n    console.log('[CustomersAPI] Syncing...');\n    const result = await simpleSyncService.syncAll();\n    console.log('[CustomersAPI] Sync result:', result);\n  },\n\n  // Additional method for force refresh\n  async refresh(): Promise<void> {\n    console.log('[CustomersAPI] Refreshing from server...');\n    await customerServiceFixed.refreshFromServer();\n  }\n};","import axios from 'axios';\n// Inline type definitions\ninterface Job {\n  id: string;\n  customerId: string;\n  title: string;\n  description?: string;\n  status: 'pending' | 'in_progress' | 'completed' | 'cancelled';\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  scheduledDate?: string;\n  completedDate?: string;\n  estimatedHours?: number;\n  actualHours?: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nconst API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3001';\n\n// Create axios instance with auth\nconst api = axios.create({\n  baseURL: `${API_URL}/api`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('khs-crm-token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const jobsApi = {\n  // Get all jobs\n  async getAll(filters?: { status?: string; customerId?: string; priority?: string }): Promise<Job[]> {\n    try {\n      const response = await api.get('/jobs', { params: filters });\n      return response.data;\n    } catch (error) {\n      // Fallback to localStorage if API fails\n      const localJobs = localStorage.getItem('khs-crm-jobs');\n      if (localJobs) {\n        let jobs = JSON.parse(localJobs);\n        \n        // Apply filters if any\n        if (filters) {\n          if (filters.status) {\n            jobs = jobs.filter((j: Job) => j.status === filters.status);\n          }\n          if (filters.customerId) {\n            jobs = jobs.filter((j: Job) => j.customerId === filters.customerId);\n          }\n          if (filters.priority) {\n            jobs = jobs.filter((j: Job) => j.priority === filters.priority);\n          }\n        }\n        \n        return jobs;\n      }\n      throw error;\n    }\n  },\n\n  // Get single job\n  async getById(id: string): Promise<Job> {\n    const response = await api.get(`/jobs/${id}`);\n    return response.data;\n  },\n\n  // Create job\n  async create(job: Omit<Job, 'id' | 'createdAt' | 'updatedAt'>): Promise<Job> {\n    try {\n      const response = await api.post('/jobs', job);\n      return response.data;\n    } catch (error) {\n      // If offline, save to localStorage with temp ID\n      if (!navigator.onLine) {\n        const tempJob = {\n          ...job,\n          id: `temp_${Date.now()}`,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n        };\n        \n        const localJobs = localStorage.getItem('khs-crm-jobs');\n        const jobs = localJobs ? JSON.parse(localJobs) : [];\n        jobs.push(tempJob);\n        localStorage.setItem('khs-crm-jobs', JSON.stringify(jobs));\n        \n        // Queue for sync\n        const syncQueue = localStorage.getItem('khs-crm-sync-queue') || '[]';\n        const queue = JSON.parse(syncQueue);\n        queue.push({\n          type: 'job',\n          action: 'create',\n          data: tempJob,\n          timestamp: Date.now(),\n        });\n        localStorage.setItem('khs-crm-sync-queue', JSON.stringify(queue));\n        \n        return tempJob as Job;\n      }\n      throw error;\n    }\n  },\n\n  // Update job\n  async update(id: string, job: Partial<Job>): Promise<Job> {\n    try {\n      const response = await api.put(`/jobs/${id}`, job);\n      return response.data;\n    } catch (error) {\n      // If offline, update in localStorage\n      if (!navigator.onLine) {\n        const localJobs = localStorage.getItem('khs-crm-jobs');\n        if (localJobs) {\n          const jobs = JSON.parse(localJobs);\n          const index = jobs.findIndex((j: Job) => j.id === id);\n          if (index !== -1) {\n            jobs[index] = { ...jobs[index], ...job, updatedAt: new Date().toISOString() };\n            localStorage.setItem('khs-crm-jobs', JSON.stringify(jobs));\n            \n            // Queue for sync\n            const syncQueue = localStorage.getItem('khs-crm-sync-queue') || '[]';\n            const queue = JSON.parse(syncQueue);\n            queue.push({\n              type: 'job',\n              action: 'update',\n              id,\n              data: job,\n              timestamp: Date.now(),\n            });\n            localStorage.setItem('khs-crm-sync-queue', JSON.stringify(queue));\n            \n            return jobs[index];\n          }\n        }\n      }\n      throw error;\n    }\n  },\n\n  // Delete job\n  async delete(id: string): Promise<void> {\n    try {\n      await api.delete(`/jobs/${id}`);\n    } catch (error) {\n      // If offline, remove from localStorage\n      if (!navigator.onLine) {\n        const localJobs = localStorage.getItem('khs-crm-jobs');\n        if (localJobs) {\n          const jobs = JSON.parse(localJobs);\n          const filtered = jobs.filter((j: Job) => j.id !== id);\n          localStorage.setItem('khs-crm-jobs', JSON.stringify(filtered));\n          \n          // Queue for sync\n          const syncQueue = localStorage.getItem('khs-crm-sync-queue') || '[]';\n          const queue = JSON.parse(syncQueue);\n          queue.push({\n            type: 'job',\n            action: 'delete',\n            id,\n            timestamp: Date.now(),\n          });\n          localStorage.setItem('khs-crm-sync-queue', JSON.stringify(queue));\n        }\n      } else {\n        throw error;\n      }\n    }\n  },\n\n  // Get jobs for a customer\n  async getByCustomerId(customerId: string): Promise<Job[]> {\n    return this.getAll({ customerId });\n  },\n\n  // Sync local changes with server\n  async sync(): Promise<void> {\n    const syncQueue = localStorage.getItem('khs-crm-sync-queue');\n    if (!syncQueue) return;\n\n    const queue = JSON.parse(syncQueue);\n    const jobChanges = queue.filter((item: any) => item.type === 'job');\n    \n    if (jobChanges.length === 0) return;\n\n    try {\n      const localJobs = localStorage.getItem('khs-crm-jobs');\n      const jobs = localJobs ? JSON.parse(localJobs) : [];\n      \n      const response = await api.post('/jobs/sync', { jobs });\n      \n      // Update local storage with server IDs\n      const results = response.data.results;\n      for (const result of results) {\n        if (result.status === 'created' && result.data) {\n          // Replace temp ID with real ID\n          const tempId = result.id;\n          const realId = result.data.id;\n          \n          const jobIndex = jobs.findIndex((j: Job) => j.id === tempId);\n          if (jobIndex !== -1) {\n            jobs[jobIndex] = result.data;\n          }\n        }\n      }\n      \n      localStorage.setItem('khs-crm-jobs', JSON.stringify(jobs));\n      \n      // Clear processed items from sync queue\n      const remainingQueue = queue.filter((item: any) => item.type !== 'job');\n      localStorage.setItem('khs-crm-sync-queue', JSON.stringify(remainingQueue));\n    } catch (error) {\n      throw error;\n    }\n  },\n};","import axios from 'axios';\n\nconst API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: `${API_URL}/api`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const authApi = {\n  // Auto-login for now\n  async autoLogin(): Promise<{ token: string; user: any }> {\n    try {\n      // Try to login with default credentials\n      const response = await api.post('/auth/login', {\n        email: 'admin@khscrm.com',\n        password: 'admin123'\n      });\n      \n      const { token, refreshToken, user } = response.data;\n      \n      // Store tokens\n      localStorage.setItem('khs-crm-token', token);\n      localStorage.setItem('khs-crm-refresh-token', refreshToken);\n      localStorage.setItem('khs-crm-user', JSON.stringify(user));\n      \n      return { token, user };\n    } catch (error) {\n      // If login fails, create a mock token for development\n      const mockToken = 'dev-token-' + Date.now();\n      const mockUser = {\n        id: 'dev-user',\n        email: 'dev@khscrm.com',\n        name: 'Development User',\n        role: 'OWNER'\n      };\n      \n      localStorage.setItem('khs-crm-token', mockToken);\n      localStorage.setItem('khs-crm-user', JSON.stringify(mockUser));\n      \n      return { token: mockToken, user: mockUser };\n    }\n  },\n\n  // Get current user\n  getCurrentUser() {\n    const userStr = localStorage.getItem('khs-crm-user');\n    return userStr ? JSON.parse(userStr) : null;\n  },\n\n  // Get token\n  getToken() {\n    return localStorage.getItem('khs-crm-token');\n  },\n\n  // Logout\n  logout() {\n    localStorage.removeItem('khs-crm-token');\n    localStorage.removeItem('khs-crm-refresh-token');\n    localStorage.removeItem('khs-crm-user');\n  }\n};","import React, { useEffect, useState } from 'react';\nimport { apiClient } from '../services/api.service';\nimport { simpleSyncService } from '../services/sync.service.simple';\n\nexport function SyncDiagnostics() {\n  const [diagnostics, setDiagnostics] = useState({\n    apiUrl: import.meta.env.VITE_API_URL || 'http://localhost:3001',\n    online: navigator.onLine,\n    token: localStorage.getItem('khs-crm-token') ? 'Present' : 'Missing',\n    syncQueue: simpleSyncService.getPendingOperations(),\n    lastError: null as any\n  });\n\n  useEffect(() => {\n    const checkBackend = async () => {\n      try {\n        console.log('[SyncDiagnostics] Testing backend connection...');\n        const response = await apiClient.get('/api/health');\n        console.log('[SyncDiagnostics] Backend health check:', response);\n        setDiagnostics(prev => ({ ...prev, lastError: null }));\n      } catch (error) {\n        console.error('[SyncDiagnostics] Backend connection failed:', error);\n        setDiagnostics(prev => ({ ...prev, lastError: error }));\n      }\n    };\n\n    checkBackend();\n  }, []);\n\n  const testCustomerFetch = async () => {\n    try {\n      console.log('[SyncDiagnostics] Fetching customers...');\n      const customers = await apiClient.get('/api/customers');\n      console.log('[SyncDiagnostics] Customers fetched:', customers);\n      alert(`Fetched ${customers.length} customers from backend`);\n    } catch (error) {\n      console.error('[SyncDiagnostics] Customer fetch failed:', error);\n      alert(`Failed to fetch customers: ${error}`);\n    }\n  };\n\n  const testCustomerCreate = async () => {\n    try {\n      console.log('[SyncDiagnostics] Creating test customer...');\n      const customer = await apiClient.post('/api/customers', {\n        name: `Test Customer ${Date.now()}`,\n        address: '123 Test St',\n        phone: '555-0123'\n      });\n      console.log('[SyncDiagnostics] Customer created:', customer);\n      alert(`Created customer: ${customer.name} (ID: ${customer.id})`);\n    } catch (error) {\n      console.error('[SyncDiagnostics] Customer create failed:', error);\n      alert(`Failed to create customer: ${error}`);\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white shadow-lg rounded-lg p-4 max-w-sm z-50\">\n      <h3 className=\"font-bold text-sm mb-2\">Sync Diagnostics</h3>\n      <div className=\"text-xs space-y-1\">\n        <div>API URL: {diagnostics.apiUrl}</div>\n        <div>Online: {diagnostics.online ? '✅' : '❌'}</div>\n        <div>Auth Token: {diagnostics.token}</div>\n        <div>Queue Size: {diagnostics.syncQueue.length}</div>\n        {diagnostics.lastError && (\n          <div className=\"text-red-600\">Error: {diagnostics.lastError.message}</div>\n        )}\n      </div>\n      <div className=\"mt-2 space-y-1\">\n        <button\n          onClick={testCustomerFetch}\n          className=\"w-full text-xs bg-blue-500 text-white px-2 py-1 rounded\"\n        >\n          Test Fetch Customers\n        </button>\n        <button\n          onClick={testCustomerCreate}\n          className=\"w-full text-xs bg-green-500 text-white px-2 py-1 rounded\"\n        >\n          Test Create Customer\n        </button>\n      </div>\n    </div>\n  );\n}","import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { customersApi, jobsApi, authApi } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\nimport { SyncDiagnostics } from '../components/SyncDiagnostics';\r\n\r\nconst CustomersEnhanced = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  // State\r\n  const [customers, setCustomers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load customers from API\r\n  const loadCustomers = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await customersApi.getAll();\r\n      setCustomers(data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to load customers');\r\n      // Will fall back to localStorage in the API\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Auto-login and load data on mount\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      // Auto-login if no token\r\n      if (!authApi.getToken()) {\r\n        await authApi.autoLogin();\r\n      }\r\n      await loadCustomers();\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  // Auto-sync every 15 minutes and handle cross-tab synchronization\r\n  useEffect(() => {\r\n    // Function to sync data\r\n    const syncData = () => {\r\n      const savedCustomers = customerStorage.getAll();\r\n      \r\n      // Update state with latest data from localStorage\r\n      if (savedCustomers) {\r\n        setCustomers(savedCustomers);\r\n      }\r\n      \r\n      // Auto-sync completed\r\n    };\r\n\r\n    // Auto-sync every 15 minutes\r\n    const autoSync = async () => {\r\n      console.log('[CustomersPage] Running auto-sync...');\r\n      \r\n      // Save current data with timestamp\r\n      customerStorage.save(customers);\r\n      localStorage.setItem('khs-crm-last-sync', new Date().toISOString());\r\n      \r\n      // Trigger actual sync with backend\r\n      try {\r\n        await customersApi.sync();\r\n        console.log('[CustomersPage] Sync completed');\r\n        // Reload data after sync\r\n        await loadCustomers();\r\n      } catch (error) {\r\n        console.error('[CustomersPage] Sync failed:', error);\r\n      }\r\n      \r\n      // Trigger storage event for other tabs\r\n      window.dispatchEvent(new Event('storage'));\r\n      \r\n      syncData();\r\n    };\r\n\r\n    // Listen for storage changes from other tabs\r\n    const handleStorageChange = (e: StorageEvent) => {\r\n      if (e.key === 'khs-crm-customers' || e.key === 'khs-crm-jobs' || e.key === 'khs-crm-last-sync') {\r\n        // Storage change detected from another tab\r\n        syncData();\r\n      }\r\n    };\r\n\r\n    // Set up 15-minute interval (900000 ms)\r\n    const syncInterval = setInterval(autoSync, 900000);\r\n    \r\n    // Sync when coming online\r\n    const handleOnline = () => {\r\n      console.log('[CustomersPage] Device came online, syncing...');\r\n      autoSync();\r\n    };\r\n    \r\n    // Listen for online event\r\n    window.addEventListener('online', handleOnline);\r\n    \r\n    // Listen for storage events from other tabs\r\n    window.addEventListener('storage', handleStorageChange);\r\n\r\n    // Sync immediately on mount\r\n    syncData();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      clearInterval(syncInterval);\r\n      window.removeEventListener('storage', handleStorageChange);\r\n      window.removeEventListener('online', handleOnline);\r\n    };\r\n  }, []);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editingCustomer, setEditingCustomer] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortBy, setSortBy] = useState('name'); // name, reference, recent\r\n  const [showAddJobModal, setShowAddJobModal] = useState(false);\r\n  const [selectedCustomerForJob, setSelectedCustomerForJob] = useState(null);\r\n  const [editingJob, setEditingJob] = useState(null);\r\n\r\n  // Sort customers\r\n  const sortedCustomers = [...customers].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'name':\r\n        return a.name.localeCompare(b.name);\r\n      case 'reference':\r\n        // Define reference order: HOD first, then Yelp, then Cust\r\n        const refOrder: Record<string, number> = { 'HOD': 1, 'Yelp': 2, 'Cust': 3 };\r\n        const aOrder = refOrder[a.reference] || 4; // No reference goes last\r\n        const bOrder = refOrder[b.reference] || 4;\r\n        return aOrder - bOrder;\r\n      case 'recent':\r\n        return b.id.localeCompare(a.id); // Newer IDs are larger\r\n      default:\r\n        return 0;\r\n    }\r\n  });\r\n\r\n  // Filter customers\r\n  const filteredCustomers = sortedCustomers.filter(customer =>\r\n    customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    customer.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    customer.phone.includes(searchTerm) ||\r\n    customer.address.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    (customer.notes && customer.notes.toLowerCase().includes(searchTerm.toLowerCase()))\r\n  );\r\n\r\n  // Jobs state for customer display\r\n  const [customerJobs, setCustomerJobs] = useState({});\r\n\r\n  // Load jobs for all customers\r\n  useEffect(() => {\r\n    const loadJobs = async () => {\r\n      try {\r\n        const jobs = await jobsApi.getAll();\r\n        // Group jobs by customer\r\n        const jobsByCustomer = {};\r\n        jobs.forEach(job => {\r\n          if (!jobsByCustomer[job.customerId]) {\r\n            jobsByCustomer[job.customerId] = [];\r\n          }\r\n          jobsByCustomer[job.customerId].push(job);\r\n        });\r\n        setCustomerJobs(jobsByCustomer);\r\n      } catch (err) {\r\n        // Fallback handled in API\r\n      }\r\n    };\r\n    if (customers.length > 0) {\r\n      loadJobs();\r\n    }\r\n  }, [customers]);\r\n\r\n  // Get jobs for a customer\r\n  const getCustomerJobs = (customerId: string) => {\r\n    return customerJobs[customerId] || [];\r\n  };\r\n\r\n  const handleAddCustomer = async (newCustomer: any) => {\r\n    try {\r\n      const customer = await customersApi.create(newCustomer);\r\n      setCustomers([customer, ...customers]);\r\n      toast.success('Customer added successfully');\r\n      setShowModal(false);\r\n    } catch (err) {\r\n      toast.error('Failed to add customer');\r\n    }\r\n  };\r\n\r\n  const handleEditCustomer = async (updatedCustomer: any) => {\r\n    try {\r\n      const customer = await customersApi.update(editingCustomer.id, updatedCustomer);\r\n      setCustomers(customers.map(c => \r\n        c.id === customer.id ? customer : c\r\n      ));\r\n      toast.success('Customer updated successfully');\r\n      setEditingCustomer(null);\r\n      setShowModal(false);\r\n    } catch (err) {\r\n      toast.error('Failed to update customer');\r\n    }\r\n  };\r\n\r\n  const handleDeleteCustomer = async (id: string) => {\r\n    if (window.confirm('Are you sure you want to delete this customer?')) {\r\n      try {\r\n        await customersApi.delete(id);\r\n        setCustomers(customers.filter(c => c.id !== id));\r\n        toast.success('Customer deleted successfully');\r\n      } catch (err) {\r\n        toast.error('Failed to delete customer');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePhoneClick = (phone: string, e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    window.location.href = `tel:${phone.replace(/\\D/g, '')}`;\r\n  };\r\n\r\n  const handleAddressClick = (address: string, e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    const encodedAddress = encodeURIComponent(address);\r\n    window.open(`https://www.google.com/maps/search/?api=1&query=${encodedAddress}`, '_blank');\r\n  };\r\n\r\n  const handleEmailClick = (email: string, e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    window.location.href = `mailto:${email}`;\r\n  };\r\n\r\n  const handleAddJob = (customer: any) => {\r\n    setSelectedCustomerForJob(customer);\r\n    setShowAddJobModal(true);\r\n  };\r\n\r\n  const handleSaveJob = async (jobData: any) => {\r\n    try {\r\n      if (jobData.id) {\r\n        // Update existing job\r\n        const updatedJob = await jobsApi.update(jobData.id, jobData);\r\n        // Update local state\r\n        setCustomerJobs(prev => {\r\n          const customerJobs = [...(prev[updatedJob.customerId] || [])];\r\n          const index = customerJobs.findIndex(j => j.id === updatedJob.id);\r\n          if (index !== -1) {\r\n            customerJobs[index] = updatedJob;\r\n            return { ...prev, [updatedJob.customerId]: customerJobs };\r\n          }\r\n          return prev;\r\n        });\r\n        toast.success('Job updated successfully');\r\n      } else {\r\n        // Create new job\r\n        const newJob = await jobsApi.create({\r\n          ...jobData,\r\n          customerId: selectedCustomerForJob.id,\r\n          status: jobData.status || 'QUOTED',\r\n          priority: jobData.priority || 'medium',\r\n          totalCost: jobData.totalCost || 0,\r\n          depositPaid: jobData.depositPaid || 0\r\n        });\r\n        // Update local state\r\n        setCustomerJobs(prev => ({\r\n          ...prev,\r\n          [selectedCustomerForJob.id]: [...(prev[selectedCustomerForJob.id] || []), newJob]\r\n        }));\r\n        toast.success('Job created successfully');\r\n      }\r\n    } catch (err) {\r\n      toast.error('Failed to save job');\r\n    }\r\n    \r\n    setShowAddJobModal(false);\r\n    setSelectedCustomerForJob(null);\r\n    setEditingJob(null);\r\n  };\r\n\r\n  const handleDeleteJob = async (jobId: string) => {\r\n    try {\r\n      await jobsApi.delete(jobId);\r\n      // Update local state\r\n      setCustomerJobs(prev => {\r\n        const updated = { ...prev };\r\n        Object.keys(updated).forEach(customerId => {\r\n          updated[customerId] = updated[customerId].filter(j => j.id !== jobId);\r\n        });\r\n        return updated;\r\n      });\r\n      toast.success('Job deleted successfully');\r\n    } catch (err) {\r\n      toast.error('Failed to delete job');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n        height: '100%',\r\n        overflowY: 'auto',\r\n        WebkitOverflowScrolling: 'touch',\r\n        paddingBottom: '100px'\r\n      }}>\r\n      <div style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\r\n        {/* Header */}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '20px' }}>\r\n          <div style={{ display: 'flex', alignItems: 'flex-start', gap: '12px' }}>\r\n            <button\r\n              onClick={() => navigate('/dashboard')}\r\n              style={{\r\n                background: 'none',\r\n                border: 'none',\r\n                padding: '8px',\r\n                cursor: 'pointer',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                color: '#6B7280',\r\n                borderRadius: '6px',\r\n                marginTop: '-4px'\r\n              }}\r\n              onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#F3F4F6'}\r\n              onMouseLeave={(e) => e.currentTarget.style.backgroundColor = 'transparent'}\r\n            >\r\n              <svg style={{ width: '28px', height: '28px' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n              </svg>\r\n            </button>\r\n            <h1 style={{ fontSize: '24px', fontWeight: 'bold', margin: 0 }}>Customers</h1>\r\n          </div>\r\n          <button\r\n              onClick={() => {\r\n                setEditingCustomer(null);\r\n                setShowModal(true);\r\n              }}\r\n              style={{\r\n                padding: '8px 16px',\r\n                backgroundColor: '#3B82F6',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                cursor: 'pointer',\r\n                fontSize: '14px',\r\n                fontWeight: '500'\r\n              }}\r\n            >\r\n              + Add Customer\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search Bar */}\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search customers...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            style={{\r\n              width: '100%',\r\n              padding: '12px',\r\n              border: '1px solid #D1D5DB',\r\n              borderRadius: '8px',\r\n              fontSize: '16px'\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Buttons */}\r\n        <div style={{ marginBottom: '20px', display: 'flex', gap: '8px' }}>\r\n          <button\r\n            onClick={() => setSortBy('name')}\r\n            style={{\r\n              padding: '6px 12px',\r\n              backgroundColor: sortBy === 'name' ? '#3B82F6' : '#E5E7EB',\r\n              color: sortBy === 'name' ? 'white' : '#374151',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer',\r\n              fontSize: '14px'\r\n            }}\r\n          >\r\n            Name\r\n          </button>\r\n          <button\r\n            onClick={() => setSortBy('reference')}\r\n            style={{\r\n              padding: '6px 12px',\r\n              backgroundColor: sortBy === 'reference' ? '#3B82F6' : '#E5E7EB',\r\n              color: sortBy === 'reference' ? 'white' : '#374151',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer',\r\n              fontSize: '14px'\r\n            }}\r\n          >\r\n            Reference\r\n          </button>\r\n          <button\r\n            onClick={() => setSortBy('recent')}\r\n            style={{\r\n              padding: '6px 12px',\r\n              backgroundColor: sortBy === 'recent' ? '#3B82F6' : '#E5E7EB',\r\n              color: sortBy === 'recent' ? 'white' : '#374151',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer',\r\n              fontSize: '14px'\r\n            }}\r\n          >\r\n            Recent\r\n          </button>\r\n        </div>\r\n\r\n        {/* Customer Cards */}\r\n        {isLoading ? (\r\n          <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: '40px',\r\n            color: '#6B7280'\r\n          }}>\r\n            <div style={{ textAlign: 'center' }}>\r\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n              <p>Loading customers...</p>\r\n            </div>\r\n          </div>\r\n        ) : filteredCustomers.length === 0 ? (\r\n          <div style={{\r\n            backgroundColor: 'white',\r\n            padding: '40px',\r\n            borderRadius: '8px',\r\n            textAlign: 'center',\r\n            color: '#6B7280'\r\n          }}>\r\n            {searchTerm ? 'No customers found matching your search.' : 'No customers yet. Add your first customer to get started.'}\r\n          </div>\r\n        ) : (\r\n          <div style={{ display: 'grid', gap: '16px' }}>\r\n            {filteredCustomers.map((customer) => (\r\n              <div\r\n                key={customer.id}\r\n                onClick={() => navigate(`/customers/${customer.id}`)}\r\n                style={{\r\n                  backgroundColor: 'white',\r\n                  padding: '16px',\r\n                  borderRadius: '8px',\r\n                  cursor: 'pointer',\r\n                  transition: 'box-shadow 0.2s',\r\n                  border: '1px solid #E5E7EB'\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  e.currentTarget.style.boxShadow = '0 4px 6px rgba(0,0,0,0.1)';\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  e.currentTarget.style.boxShadow = 'none';\r\n                }}\r\n              >\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start' }}>\r\n                  <div style={{ flex: 1 }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '8px' }}>\r\n                      <h3 style={{ margin: 0, fontSize: '16px', fontWeight: '600' }}>{customer.name}</h3>\r\n                      {customer.reference && (\r\n                        <span style={{\r\n                          padding: '2px 8px',\r\n                          backgroundColor: customer.reference === 'HOD' ? '#10B981' : \r\n                                         customer.reference === 'Yelp' ? '#F59E0B' : '#3B82F6',\r\n                          color: 'white',\r\n                          borderRadius: '12px',\r\n                          fontSize: '10px',\r\n                          fontWeight: '500'\r\n                        }}>\r\n                          {customer.reference}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <button\r\n                      onClick={(e) => handleEmailClick(customer.email, e)}\r\n                      style={{ \r\n                        background: 'none',\r\n                        border: 'none',\r\n                        color: '#666',\r\n                        textDecoration: 'none',\r\n                        cursor: 'pointer',\r\n                        padding: '4px 0',\r\n                        font: 'inherit',\r\n                        fontSize: '12px',\r\n                        display: 'block',\r\n                        marginBottom: '8px',\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                        width: '100%',\r\n                        textAlign: 'left'\r\n                      }}\r\n                      onMouseEnter={(e) => {\r\n                        e.currentTarget.style.color = '#3B82F6';\r\n                        e.currentTarget.style.textDecoration = 'underline';\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.color = '#666';\r\n                        e.currentTarget.style.textDecoration = 'none';\r\n                      }}\r\n                    >\r\n                      {customer.email}\r\n                    </button>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginBottom: '8px' }}>\r\n                      <button\r\n                        onClick={(e) => handlePhoneClick(customer.phone, e)}\r\n                        title=\"Call customer\"\r\n                        style={{ \r\n                          background: 'none',\r\n                          border: '1px solid #3B82F6',\r\n                          color: '#3B82F6',\r\n                          borderRadius: '4px',\r\n                          cursor: 'pointer',\r\n                          padding: '4px 8px',\r\n                          fontSize: '12px',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          gap: '4px'\r\n                        }}\r\n                      >\r\n                        📞 Call\r\n                      </button>\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          window.location.href = `sms:${customer.phone.replace(/\\D/g, '')}`;\r\n                        }}\r\n                        title=\"Text customer\"\r\n                        style={{ \r\n                          background: 'none',\r\n                          border: '1px solid #3B82F6',\r\n                          color: '#3B82F6',\r\n                          borderRadius: '4px',\r\n                          cursor: 'pointer',\r\n                          padding: '4px 8px',\r\n                          fontSize: '12px',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          gap: '4px'\r\n                        }}\r\n                      >\r\n                        💬 Text\r\n                      </button>\r\n                      <span style={{ fontSize: '12px', color: '#666' }}>{customer.phone}</span>\r\n                    </div>\r\n                    <button\r\n                      onClick={(e) => handleAddressClick(customer.address, e)}\r\n                      style={{ \r\n                        background: 'none',\r\n                        border: 'none',\r\n                        color: '#6B7280',\r\n                        textDecoration: 'none',\r\n                        cursor: 'pointer',\r\n                        padding: '4px 0',\r\n                        font: 'inherit',\r\n                        fontSize: '11px',\r\n                        display: 'block',\r\n                        lineHeight: '1.3',\r\n                        textAlign: 'left',\r\n                        marginBottom: '8px'\r\n                      }}\r\n                      onMouseEnter={(e) => {\r\n                        e.currentTarget.style.color = '#3B82F6';\r\n                        e.currentTarget.style.textDecoration = 'underline';\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.color = '#6B7280';\r\n                        e.currentTarget.style.textDecoration = 'none';\r\n                      }}\r\n                    >\r\n                      {customer.address}\r\n                    </button>\r\n                    {customer.notes && (\r\n                      <p style={{ \r\n                        fontSize: '11px', \r\n                        color: '#9CA3AF',\r\n                        fontStyle: 'italic',\r\n                        margin: '0',\r\n                        lineHeight: '1.3',\r\n                        paddingTop: '4px'\r\n                      }}>\r\n                        {customer.notes}\r\n                      </p>\r\n                    )}\r\n                    \r\n                    {/* Jobs List */}\r\n                    {(() => {\r\n                      const customerJobs = getCustomerJobs(customer.id);\r\n                      if (customerJobs.length > 0) {\r\n                        return (\r\n                          <div style={{ \r\n                            marginTop: '12px',\r\n                            paddingTop: '12px',\r\n                            borderTop: '1px solid #E5E7EB'\r\n                          }}>\r\n                            <p style={{ \r\n                              fontSize: '12px', \r\n                              fontWeight: '600',\r\n                              color: '#374151',\r\n                              marginBottom: '8px'\r\n                            }}>\r\n                              Jobs ({customerJobs.length}):\r\n                            </p>\r\n                            <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\r\n                              {customerJobs.map((job: any) => (\r\n                                <button\r\n                                  key={job.id}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    setSelectedCustomerForJob(customer);\r\n                                    setEditingJob(job);\r\n                                    setShowAddJobModal(true);\r\n                                  }}\r\n                                  style={{\r\n                                    background: 'none',\r\n                                    border: '1px solid #D1D5DB',\r\n                                    borderRadius: '4px',\r\n                                    padding: '6px 8px',\r\n                                    textAlign: 'left',\r\n                                    cursor: 'pointer',\r\n                                    fontSize: '11px',\r\n                                    color: '#374151',\r\n                                    transition: 'all 0.2s'\r\n                                  }}\r\n                                  onMouseEnter={(e) => {\r\n                                    e.currentTarget.style.backgroundColor = '#F3F4F6';\r\n                                    e.currentTarget.style.borderColor = '#3B82F6';\r\n                                  }}\r\n                                  onMouseLeave={(e) => {\r\n                                    e.currentTarget.style.backgroundColor = 'transparent';\r\n                                    e.currentTarget.style.borderColor = '#D1D5DB';\r\n                                  }}\r\n                                >\r\n                                  <div style={{ fontWeight: '500' }}>{job.title}</div>\r\n                                  {job.startDate && (\r\n                                    <div style={{ color: '#6B7280', fontSize: '10px' }}>\r\n                                      {new Date(job.startDate).toLocaleDateString()}\r\n                                    </div>\r\n                                  )}\r\n                                </button>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                      return null;\r\n                    })()}\r\n                  </div>\r\n                  <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        setEditingCustomer(customer);\r\n                        setShowModal(true);\r\n                      }}\r\n                      style={{\r\n                        padding: '4px 12px',\r\n                        fontSize: '12px',\r\n                        backgroundColor: '#E5E7EB',\r\n                        border: 'none',\r\n                        borderRadius: '6px',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleDeleteCustomer(customer.id);\r\n                      }}\r\n                      style={{\r\n                        padding: '4px 12px',\r\n                        fontSize: '12px',\r\n                        backgroundColor: '#FEE2E2',\r\n                        color: '#DC2626',\r\n                        border: 'none',\r\n                        borderRadius: '6px',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleAddJob(customer);\r\n                      }}\r\n                      style={{\r\n                        padding: '4px 12px',\r\n                        fontSize: '12px',\r\n                        backgroundColor: '#10B981',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '6px',\r\n                        cursor: 'pointer',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: '4px'\r\n                      }}\r\n                    >\r\n                      <span style={{ fontSize: '14px' }}>+</span> Add Job\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n      {/* Customer Modal */}\r\n      {showModal && (\r\n        <CustomerModal\r\n          customer={editingCustomer}\r\n          onClose={() => {\r\n            setShowModal(false);\r\n            setEditingCustomer(null);\r\n          }}\r\n          onSave={editingCustomer ? handleEditCustomer : handleAddCustomer}\r\n        />\r\n      )}\r\n\r\n      {/* Add Job Modal */}\r\n      {showAddJobModal && selectedCustomerForJob && (\r\n        <AddJobModal\r\n          customer={selectedCustomerForJob}\r\n          existingJob={editingJob}\r\n          onClose={() => {\r\n            setShowAddJobModal(false);\r\n            setSelectedCustomerForJob(null);\r\n            setEditingJob(null);\r\n          }}\r\n          onSave={handleSaveJob}\r\n          onDelete={handleDeleteJob}\r\n        />\r\n      )}\r\n      \r\n      {/* Sync Diagnostics - TEMPORARY for debugging */}\r\n      <SyncDiagnostics />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Customer Modal Component\r\nconst CustomerModal = ({ customer, onClose, onSave }: any) => {\r\n  const [formData, setFormData] = useState({\r\n    reference: customer?.reference || '',\r\n    name: customer?.name || '',\r\n    email: customer?.email || '',\r\n    phone: customer?.phone || '',\r\n    street: '',\r\n    city: '',\r\n    state: '',\r\n    zip: '',\r\n    notes: customer?.notes || ''\r\n  });\r\n\r\n  // Parse address if editing\r\n  useEffect(() => {\r\n    if (customer?.address) {\r\n      // Simple address parsing - in a real app, you'd use a proper address parser\r\n      const parts = customer.address.split(', ');\r\n      if (parts.length >= 3) {\r\n        const [street, city, stateZip] = parts;\r\n        const stateZipParts = stateZip.split(' ');\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          street,\r\n          city,\r\n          state: stateZipParts[0] || '',\r\n          zip: stateZipParts[1] || ''\r\n        }));\r\n      }\r\n    }\r\n  }, [customer]);\r\n\r\n  // Mock address database for auto-completion\r\n  const addressDatabase: Record<string, { city: string; state: string; zip: string }> = {\r\n    '123 main st': { city: 'Springfield', state: 'IL', zip: '62701' },\r\n    '456 oak ave': { city: 'Springfield', state: 'IL', zip: '62702' },\r\n    '789 elm street': { city: 'Springfield', state: 'IL', zip: '62703' },\r\n    '321 maple drive': { city: 'Springfield', state: 'IL', zip: '62704' },\r\n    '654 pine road': { city: 'Chicago', state: 'IL', zip: '60601' },\r\n    '987 cedar lane': { city: 'Chicago', state: 'IL', zip: '60602' },\r\n    '111 walnut way': { city: 'Bloomington', state: 'IL', zip: '61701' },\r\n    '222 birch boulevard': { city: 'Champaign', state: 'IL', zip: '61820' },\r\n    '350 ward ave': { city: 'Honolulu', state: 'HI', zip: '96814' },\r\n    '1717 ala wai blvd': { city: 'Honolulu', state: 'HI', zip: '96815' },\r\n  };\r\n\r\n  // Zip code database for auto-population\r\n  const zipCodeDatabase: Record<string, { city: string; state: string }> = {\r\n    '62701': { city: 'Springfield', state: 'IL' },\r\n    '62702': { city: 'Springfield', state: 'IL' },\r\n    '62703': { city: 'Springfield', state: 'IL' },\r\n    '62704': { city: 'Springfield', state: 'IL' },\r\n    '60601': { city: 'Chicago', state: 'IL' },\r\n    '60602': { city: 'Chicago', state: 'IL' },\r\n    '61701': { city: 'Bloomington', state: 'IL' },\r\n    '61820': { city: 'Champaign', state: 'IL' },\r\n    '96814': { city: 'Honolulu', state: 'HI' },\r\n    '96815': { city: 'Honolulu', state: 'HI' },\r\n    '10001': { city: 'New York', state: 'NY' },\r\n    '90210': { city: 'Beverly Hills', state: 'CA' },\r\n    '94105': { city: 'San Francisco', state: 'CA' },\r\n    '98101': { city: 'Seattle', state: 'WA' },\r\n    '33139': { city: 'Miami Beach', state: 'FL' },\r\n    '02134': { city: 'Boston', state: 'MA' },\r\n    '78701': { city: 'Austin', state: 'TX' },\r\n    '85001': { city: 'Phoenix', state: 'AZ' },\r\n    '80202': { city: 'Denver', state: 'CO' },\r\n    '30303': { city: 'Atlanta', state: 'GA' }\r\n  };\r\n\r\n  const formatPhoneNumber = (value: string) => {\r\n    const phoneNumber = value.replace(/\\D/g, '');\r\n    if (phoneNumber.length === 0) return '';\r\n    if (phoneNumber.length <= 3) return `(${phoneNumber}`;\r\n    if (phoneNumber.length <= 6) return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3)}`;\r\n    return `(${phoneNumber.slice(0, 3)}) ${phoneNumber.slice(3, 6)}-${phoneNumber.slice(6, 10)}`;\r\n  };\r\n\r\n  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const formatted = formatPhoneNumber(e.target.value);\r\n    if (formatted.length <= 14) {\r\n      setFormData({ ...formData, phone: formatted });\r\n    }\r\n  };\r\n\r\n  const handleStreetChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    setFormData({ ...formData, street: value });\r\n    \r\n    const normalizedStreet = value.toLowerCase().trim();\r\n    const addressInfo = addressDatabase[normalizedStreet];\r\n    \r\n    if (addressInfo) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        street: value,\r\n        city: addressInfo.city,\r\n        state: addressInfo.state,\r\n        zip: addressInfo.zip\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleZipChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    setFormData({ ...formData, zip: value });\r\n    \r\n    if (value.length === 5) {\r\n      const zipInfo = zipCodeDatabase[value];\r\n      if (zipInfo) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          zip: value,\r\n          city: zipInfo.city,\r\n          state: zipInfo.state\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const address = `${formData.street}, ${formData.city}, ${formData.state} ${formData.zip}`;\r\n    onSave({\r\n      id: customer?.id,\r\n      reference: formData.reference,\r\n      name: formData.name,\r\n      email: formData.email,\r\n      phone: formData.phone,\r\n      address,\r\n      notes: formData.notes\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 50\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: 'white',\r\n        borderRadius: '8px',\r\n        maxWidth: '500px',\r\n        width: '90%',\r\n        maxHeight: '90vh',\r\n        overflow: 'auto'\r\n      }}>\r\n        <div style={{\r\n          padding: '20px',\r\n          borderBottom: '1px solid #E5E7EB'\r\n        }}>\r\n          <h2 style={{ margin: 0, fontSize: '20px', fontWeight: '600' }}>\r\n            {customer ? 'Edit Customer' : 'Add New Customer'}\r\n          </h2>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} style={{ padding: '20px' }}>\r\n          <div style={{ marginBottom: '16px' }}>\r\n            <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n              Reference\r\n            </label>\r\n            <select\r\n              value={formData.reference}\r\n              onChange={(e) => setFormData({ ...formData, reference: e.target.value })}\r\n              style={{\r\n                width: '100%',\r\n                padding: '8px 12px',\r\n                border: '1px solid #D1D5DB',\r\n                borderRadius: '6px',\r\n                fontSize: '16px',\r\n                backgroundColor: 'white'\r\n              }}\r\n            >\r\n              <option value=\"\">Select reference...</option>\r\n              <option value=\"HOD\">HOD</option>\r\n              <option value=\"Yelp\">Yelp</option>\r\n              <option value=\"Cust\">Customer Referral</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '16px' }}>\r\n            <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n              Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n              required\r\n              style={{\r\n                width: '100%',\r\n                padding: '8px 12px',\r\n                border: '1px solid #D1D5DB',\r\n                borderRadius: '6px',\r\n                fontSize: '16px'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '16px' }}>\r\n            <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n              Email *\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n              required\r\n              style={{\r\n                width: '100%',\r\n                padding: '8px 12px',\r\n                border: '1px solid #D1D5DB',\r\n                borderRadius: '6px',\r\n                fontSize: '16px'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '16px' }}>\r\n            <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n              Phone *\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              value={formData.phone}\r\n              onChange={handlePhoneChange}\r\n              required\r\n              placeholder=\"(555) 123-4567\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '8px 12px',\r\n                border: '1px solid #D1D5DB',\r\n                borderRadius: '6px',\r\n                fontSize: '16px'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '16px' }}>\r\n            <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n              Street Address *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.street}\r\n              onChange={handleStreetChange}\r\n              required\r\n              placeholder=\"123 Main St\"\r\n              style={{\r\n                width: '100%',\r\n                padding: '8px 12px',\r\n                border: '1px solid #D1D5DB',\r\n                borderRadius: '6px',\r\n                fontSize: '16px'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ display: 'grid', gridTemplateColumns: '2fr 1fr 1fr', gap: '12px', marginBottom: '16px' }}>\r\n            <div>\r\n              <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n                City *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.city}\r\n                onChange={(e) => setFormData({ ...formData, city: e.target.value })}\r\n                required\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '8px 12px',\r\n                  border: '1px solid #D1D5DB',\r\n                  borderRadius: '6px',\r\n                  fontSize: '16px'\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n                State *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.state}\r\n                onChange={(e) => setFormData({ ...formData, state: e.target.value })}\r\n                required\r\n                maxLength={2}\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '8px 12px',\r\n                  border: '1px solid #D1D5DB',\r\n                  borderRadius: '6px',\r\n                  fontSize: '16px',\r\n                  textTransform: 'uppercase'\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n                ZIP *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.zip}\r\n                onChange={handleZipChange}\r\n                required\r\n                maxLength={5}\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '8px 12px',\r\n                  border: '1px solid #D1D5DB',\r\n                  borderRadius: '6px',\r\n                  fontSize: '16px'\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '16px' }}>\r\n            <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n              Notes\r\n            </label>\r\n            <textarea\r\n              value={formData.notes}\r\n              onChange={(e) => setFormData({ ...formData, notes: e.target.value })}\r\n              rows={3}\r\n              style={{\r\n                width: '100%',\r\n                padding: '8px 12px',\r\n                border: '1px solid #D1D5DB',\r\n                borderRadius: '6px',\r\n                fontSize: '16px',\r\n                resize: 'vertical'\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ display: 'flex', gap: '12px' }}>\r\n            <button\r\n              type=\"submit\"\r\n              style={{\r\n                flex: 1,\r\n                padding: '10px',\r\n                backgroundColor: '#3B82F6',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                fontSize: '16px',\r\n                fontWeight: '500',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              {customer ? 'Update Customer' : 'Add Customer'}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              style={{\r\n                flex: 1,\r\n                padding: '10px',\r\n                backgroundColor: '#E5E7EB',\r\n                color: '#374151',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                fontSize: '16px',\r\n                fontWeight: '500',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Add Job Modal Component\r\nconst AddJobModal = ({ customer, onClose, onSave, existingJob = null, onDelete = null }: any) => {\r\n  const [activeTab, setActiveTab] = useState('description');\r\n  const [jobData, setJobData] = useState({\r\n    title: existingJob?.title || '',\r\n    description: existingJob?.description || '',\r\n    photos: existingJob?.photos || [],\r\n    plans: existingJob?.plans || [],\r\n    notes: existingJob?.notes || '',\r\n    comments: existingJob?.comments || []\r\n  });\r\n\r\n  const tabs = [\r\n    { id: 'description', label: 'Job Description', icon: '📋' },\r\n    { id: 'photos', label: 'Photos', icon: '📸' },\r\n    { id: 'plans', label: 'Drawings/Plans', icon: '📐' },\r\n    { id: 'notes', label: 'Notes', icon: '📝' },\r\n    { id: 'comments', label: 'Comments', icon: '💬' }\r\n  ];\r\n\r\n  const handlePhotoUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = Array.from(e.target.files || []);\r\n    files.forEach(file => {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        setJobData(prev => ({\r\n          ...prev,\r\n          photos: [...prev.photos, {\r\n            id: Date.now() + Math.random(),\r\n            url: event.target?.result as string,\r\n            name: file.name\r\n          }]\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  const handlePlanUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = Array.from(e.target.files || []);\r\n    files.forEach(file => {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        setJobData(prev => ({\r\n          ...prev,\r\n          plans: [...prev.plans, {\r\n            id: Date.now() + Math.random(),\r\n            url: event.target?.result as string,\r\n            name: file.name,\r\n            type: file.type\r\n          }]\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  const handleAddComment = (text: string) => {\r\n    if (text.trim()) {\r\n      setJobData(prev => ({\r\n        ...prev,\r\n        comments: [...prev.comments, {\r\n          id: Date.now(),\r\n          text,\r\n          timestamp: new Date().toISOString(),\r\n          author: 'Current User'\r\n        }]\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (existingJob) {\r\n      onSave({ ...existingJob, ...jobData });\r\n    } else {\r\n      onSave(jobData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 50\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: 'white',\r\n        borderRadius: '8px',\r\n        maxWidth: '900px',\r\n        width: '90%',\r\n        maxHeight: '90vh',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n      }}>\r\n        <div style={{\r\n          padding: '20px',\r\n          borderBottom: '1px solid #E5E7EB'\r\n        }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start' }}>\r\n            <div>\r\n              <h2 style={{ margin: 0, fontSize: '20px', fontWeight: '600' }}>\r\n                {existingJob ? 'Edit Job' : 'Add Job'} for {customer.name}\r\n              </h2>\r\n              <p style={{ margin: '4px 0 0 0', color: '#6B7280', fontSize: '14px' }}>\r\n                {customer.address}\r\n              </p>\r\n            </div>\r\n            {existingJob && onDelete && (\r\n              <div style={{ display: 'flex', gap: '8px' }}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    if (window.confirm('Are you sure you want to delete this job?')) {\r\n                      onDelete(existingJob.id);\r\n                      onClose();\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    padding: '8px 16px',\r\n                    backgroundColor: '#FEE2E2',\r\n                    color: '#DC2626',\r\n                    border: 'none',\r\n                    borderRadius: '6px',\r\n                    cursor: 'pointer',\r\n                    fontSize: '14px',\r\n                    fontWeight: '500'\r\n                  }}\r\n                >\r\n                  Delete Job\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{\r\n          display: 'flex',\r\n          borderBottom: '1px solid #E5E7EB',\r\n          backgroundColor: '#F9FAFB',\r\n          overflowX: 'auto'\r\n        }}>\r\n          {tabs.map((tab) => (\r\n            <button\r\n              key={tab.id}\r\n              onClick={() => setActiveTab(tab.id)}\r\n              style={{\r\n                padding: '12px 20px',\r\n                border: 'none',\r\n                backgroundColor: activeTab === tab.id ? 'white' : 'transparent',\r\n                borderBottom: activeTab === tab.id ? '2px solid #3B82F6' : '2px solid transparent',\r\n                cursor: 'pointer',\r\n                fontSize: '14px',\r\n                fontWeight: activeTab === tab.id ? '600' : '400',\r\n                color: activeTab === tab.id ? '#3B82F6' : '#6B7280',\r\n                whiteSpace: 'nowrap',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '8px'\r\n              }}\r\n            >\r\n              <span>{tab.icon}</span>\r\n              {tab.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} style={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n          <div style={{ flex: 1, overflow: 'auto', padding: '20px' }}>\r\n            {/* Job Description Tab */}\r\n            {activeTab === 'description' && (\r\n              <div>\r\n                <div style={{ marginBottom: '16px' }}>\r\n                  <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n                    Job Title *\r\n                  </label>\r\n                  <select\r\n                    value={jobData.title}\r\n                    onChange={(e) => setJobData({ ...jobData, title: e.target.value })}\r\n                    required\r\n                    style={{\r\n                      width: '100%',\r\n                      padding: '8px 12px',\r\n                      border: '1px solid #D1D5DB',\r\n                      borderRadius: '6px',\r\n                      fontSize: '16px',\r\n                      backgroundColor: 'white'\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select job type...</option>\r\n                    <option value=\"Kitchen\">Kitchen</option>\r\n                    <option value=\"Bathroom\">Bathroom</option>\r\n                    <option value=\"Flooring\">Flooring</option>\r\n                    <option value=\"Various Repairs\">Various Repairs</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label style={{ display: 'block', marginBottom: '4px', fontWeight: '500' }}>\r\n                    Description\r\n                  </label>\r\n                  <textarea\r\n                    value={jobData.description}\r\n                    onChange={(e) => setJobData({ ...jobData, description: e.target.value })}\r\n                    rows={6}\r\n                    placeholder=\"Describe the work to be done...\"\r\n                    style={{\r\n                      width: '100%',\r\n                      padding: '12px',\r\n                      border: '1px solid #D1D5DB',\r\n                      borderRadius: '6px',\r\n                      fontSize: '16px',\r\n                      resize: 'vertical'\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Photos Tab */}\r\n            {activeTab === 'photos' && (\r\n              <div>\r\n                <div style={{ marginBottom: '20px' }}>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    multiple\r\n                    onChange={handlePhotoUpload}\r\n                    style={{ display: 'none' }}\r\n                    id=\"photo-upload\"\r\n                  />\r\n                  <label\r\n                    htmlFor=\"photo-upload\"\r\n                    style={{\r\n                      display: 'inline-block',\r\n                      padding: '10px 20px',\r\n                      backgroundColor: '#3B82F6',\r\n                      color: 'white',\r\n                      borderRadius: '6px',\r\n                      cursor: 'pointer',\r\n                      fontSize: '14px',\r\n                      fontWeight: '500'\r\n                    }}\r\n                  >\r\n                    + Upload Photos\r\n                  </label>\r\n                </div>\r\n                \r\n                <div style={{\r\n                  display: 'grid',\r\n                  gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\r\n                  gap: '12px'\r\n                }}>\r\n                  {jobData.photos.map(photo => (\r\n                    <div key={photo.id} style={{\r\n                      position: 'relative',\r\n                      paddingBottom: '100%',\r\n                      backgroundColor: '#F3F4F6',\r\n                      borderRadius: '8px',\r\n                      overflow: 'hidden'\r\n                    }}>\r\n                      <img\r\n                        src={photo.url}\r\n                        alt={photo.name}\r\n                        onDoubleClick={() => window.open(photo.url, '_blank')}\r\n                        style={{\r\n                          position: 'absolute',\r\n                          top: 0,\r\n                          left: 0,\r\n                          width: '100%',\r\n                          height: '100%',\r\n                          objectFit: 'cover',\r\n                          cursor: 'pointer'\r\n                        }}\r\n                        title=\"Double-click to open\"\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setJobData(prev => ({\r\n                            ...prev,\r\n                            photos: prev.photos.filter(p => p.id !== photo.id)\r\n                          }));\r\n                        }}\r\n                        style={{\r\n                          position: 'absolute',\r\n                          top: '4px',\r\n                          right: '4px',\r\n                          backgroundColor: 'rgba(0,0,0,0.7)',\r\n                          color: 'white',\r\n                          border: 'none',\r\n                          borderRadius: '4px',\r\n                          padding: '4px 8px',\r\n                          cursor: 'pointer',\r\n                          fontSize: '12px'\r\n                        }}\r\n                      >\r\n                        ✕\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Plans Tab */}\r\n            {activeTab === 'plans' && (\r\n              <div>\r\n                <div style={{ marginBottom: '20px' }}>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n                    multiple\r\n                    onChange={handlePlanUpload}\r\n                    style={{ display: 'none' }}\r\n                    id=\"plan-upload\"\r\n                  />\r\n                  <label\r\n                    htmlFor=\"plan-upload\"\r\n                    style={{\r\n                      display: 'inline-block',\r\n                      padding: '10px 20px',\r\n                      backgroundColor: '#3B82F6',\r\n                      color: 'white',\r\n                      borderRadius: '6px',\r\n                      cursor: 'pointer',\r\n                      fontSize: '14px',\r\n                      fontWeight: '500'\r\n                    }}\r\n                  >\r\n                    + Upload Documents\r\n                  </label>\r\n                </div>\r\n                \r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                  {jobData.plans.map(plan => (\r\n                    <div \r\n                      key={plan.id} \r\n                      onDoubleClick={() => window.open(plan.url, '_blank')}\r\n                      style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        padding: '12px',\r\n                        backgroundColor: '#F9FAFB',\r\n                        borderRadius: '6px',\r\n                        border: '1px solid #E5E7EB',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                      title=\"Double-click to open\"\r\n                    >\r\n                      <span style={{ fontSize: '24px', marginRight: '12px' }}>\r\n                        {plan.type.includes('pdf') ? '📄' : '🖼️'}\r\n                      </span>\r\n                      <span style={{ flex: 1, fontSize: '14px' }}>{plan.name}</span>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          setJobData(prev => ({\r\n                            ...prev,\r\n                            plans: prev.plans.filter(p => p.id !== plan.id)\r\n                          }));\r\n                        }}\r\n                        style={{\r\n                          backgroundColor: 'transparent',\r\n                          color: '#DC2626',\r\n                          border: 'none',\r\n                          cursor: 'pointer',\r\n                          fontSize: '14px'\r\n                        }}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Notes Tab */}\r\n            {activeTab === 'notes' && (\r\n              <div>\r\n                <label style={{ display: 'block', marginBottom: '8px', fontWeight: '500' }}>\r\n                  Job Notes\r\n                </label>\r\n                <textarea\r\n                  value={jobData.notes}\r\n                  onChange={(e) => setJobData({ ...jobData, notes: e.target.value })}\r\n                  rows={10}\r\n                  placeholder=\"Add any notes about this job...\"\r\n                  style={{\r\n                    width: '100%',\r\n                    padding: '12px',\r\n                    border: '1px solid #D1D5DB',\r\n                    borderRadius: '6px',\r\n                    fontSize: '16px',\r\n                    resize: 'vertical'\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Comments Tab */}\r\n            {activeTab === 'comments' && (\r\n              <div>\r\n                <div style={{ marginBottom: '20px' }}>\r\n                  <div style={{ display: 'flex', gap: '8px' }}>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"new-comment\"\r\n                      placeholder=\"Add a comment...\"\r\n                      style={{\r\n                        flex: 1,\r\n                        padding: '8px 12px',\r\n                        border: '1px solid #D1D5DB',\r\n                        borderRadius: '6px',\r\n                        fontSize: '14px'\r\n                      }}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                          e.preventDefault();\r\n                          const input = e.target as HTMLInputElement;\r\n                          handleAddComment(input.value);\r\n                          input.value = '';\r\n                        }\r\n                      }}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        const input = document.getElementById('new-comment') as HTMLInputElement;\r\n                        handleAddComment(input.value);\r\n                        input.value = '';\r\n                      }}\r\n                      style={{\r\n                        padding: '8px 16px',\r\n                        backgroundColor: '#3B82F6',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '6px',\r\n                        cursor: 'pointer',\r\n                        fontSize: '14px'\r\n                      }}\r\n                    >\r\n                      Add\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\r\n                  {jobData.comments.map(comment => (\r\n                    <div key={comment.id} style={{\r\n                      padding: '12px',\r\n                      backgroundColor: '#F9FAFB',\r\n                      borderRadius: '6px',\r\n                      border: '1px solid #E5E7EB'\r\n                    }}>\r\n                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '4px' }}>\r\n                        <span style={{ fontWeight: '500', fontSize: '14px' }}>{comment.author}</span>\r\n                        <span style={{ color: '#6B7280', fontSize: '12px' }}>\r\n                          {new Date(comment.timestamp).toLocaleString()}\r\n                        </span>\r\n                      </div>\r\n                      <p style={{ margin: 0, fontSize: '14px' }}>{comment.text}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{\r\n            padding: '20px',\r\n            borderTop: '1px solid #E5E7EB',\r\n            display: 'flex',\r\n            gap: '12px'\r\n          }}>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={!jobData.title}\r\n              style={{\r\n                flex: 1,\r\n                padding: '10px',\r\n                backgroundColor: jobData.title ? '#3B82F6' : '#9CA3AF',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                fontSize: '16px',\r\n                fontWeight: '500',\r\n                cursor: jobData.title ? 'pointer' : 'not-allowed'\r\n              }}\r\n            >\r\n              {existingJob ? 'Update Job' : 'Create Job'}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              style={{\r\n                flex: 1,\r\n                padding: '10px',\r\n                backgroundColor: '#E5E7EB',\r\n                color: '#374151',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                fontSize: '16px',\r\n                fontWeight: '500',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomersEnhanced;"],"names":["customersApi","customerServiceFixed","id","customer","result","simpleSyncService","API_URL","api","axios","config","token","jobsApi","filters","error","localJobs","jobs","j","job","tempJob","syncQueue","queue","index","filtered","customerId","item","results","tempId","realId","jobIndex","remainingQueue","authApi","response","refreshToken","user","mockToken","mockUser","userStr","SyncDiagnostics","diagnostics","setDiagnostics","useState","useEffect","apiClient","prev","testCustomerFetch","customers","testCustomerCreate","jsxs","jsx","CustomersEnhanced","navigate","useNavigate","setCustomers","isLoading","setIsLoading","setError","loadCustomers","data","syncData","savedCustomers","autoSync","handleStorageChange","e","syncInterval","handleOnline","showModal","setShowModal","editingCustomer","setEditingCustomer","searchTerm","setSearchTerm","sortBy","setSortBy","showAddJobModal","setShowAddJobModal","selectedCustomerForJob","setSelectedCustomerForJob","editingJob","setEditingJob","filteredCustomers","a","b","refOrder","aOrder","bOrder","customerJobs","setCustomerJobs","loadJobs","jobsByCustomer","getCustomerJobs","handleAddCustomer","newCustomer","toast","handleEditCustomer","updatedCustomer","c","handleDeleteCustomer","handlePhoneClick","phone","handleAddressClick","address","encodedAddress","handleEmailClick","email","handleAddJob","handleSaveJob","jobData","updatedJob","newJob","handleDeleteJob","jobId","updated","CustomerModal","AddJobModal","onClose","onSave","formData","setFormData","parts","street","city","stateZip","stateZipParts","addressDatabase","zipCodeDatabase","formatPhoneNumber","value","phoneNumber","handlePhoneChange","formatted","handleStreetChange","normalizedStreet","addressInfo","handleZipChange","zipInfo","handleSubmit","existingJob","onDelete","activeTab","setActiveTab","setJobData","tabs","handlePhotoUpload","file","reader","event","_a","handlePlanUpload","handleAddComment","text","tab","photo","p","plan","input","comment"],"mappings":"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"}