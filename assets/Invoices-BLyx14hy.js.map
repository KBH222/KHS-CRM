{"version":3,"file":"Invoices-BLyx14hy.js","sources":["../../src/pages/Invoices.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { calendarJobStorage, customerStorage } from '../utils/localStorage';\n\nconst Invoices = () => {\n  const navigate = useNavigate();\n  const [invoices, setInvoices] = useState([]);\n  const [showNewInvoiceModal, setShowNewInvoiceModal] = useState(false);\n  const [jobs, setJobs] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [filter, setFilter] = useState('all'); // all, draft, sent, paid, overdue\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [invoiceData, setInvoiceData] = useState({\n    jobId: '',\n    invoiceNumber: '',\n    issueDate: new Date().toISOString().split('T')[0],\n    dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 30 days\n    lineItems: [],\n    subtotal: 0,\n    tax: 0,\n    taxRate: 0.08, // 8% default\n    total: 0,\n    notes: '',\n    status: 'draft',\n    paidDate: null\n  });\n\n  useEffect(() => {\n    // Load data from localStorage\n    const savedInvoices = localStorage.getItem('khs_crm_invoices');\n    if (savedInvoices) {\n      setInvoices(JSON.parse(savedInvoices));\n    }\n    setJobs(calendarJobStorage.getAll());\n    setCustomers(customerStorage.getAll());\n  }, []);\n\n  useEffect(() => {\n    // Generate invoice number\n    if (!invoiceData.invoiceNumber) {\n      const nextNumber = invoices.length + 1001;\n      setInvoiceData(prev => ({ ...prev, invoiceNumber: `INV-${nextNumber}` }));\n    }\n  }, [invoices.length]);\n\n  const saveInvoices = (updatedInvoices) => {\n    localStorage.setItem('khs_crm_invoices', JSON.stringify(updatedInvoices));\n    setInvoices(updatedInvoices);\n  };\n\n  const handleJobSelect = (jobId) => {\n    const job = jobs.find(j => j.id === jobId);\n    if (job) {\n      setSelectedJob(job);\n      setInvoiceData(prev => ({\n        ...prev,\n        jobId,\n        lineItems: [{\n          id: Date.now(),\n          description: job.title,\n          quantity: 1,\n          rate: job.price || 0,\n          amount: job.price || 0\n        }]\n      }));\n      calculateTotals([{\n        id: Date.now(),\n        description: job.title,\n        quantity: 1,\n        rate: job.price || 0,\n        amount: job.price || 0\n      }]);\n    }\n  };\n\n  const handleLineItemChange = (index, field, value) => {\n    const updatedItems = [...invoiceData.lineItems];\n    updatedItems[index][field] = value;\n    \n    if (field === 'quantity' || field === 'rate') {\n      updatedItems[index].amount = updatedItems[index].quantity * updatedItems[index].rate;\n    }\n    \n    setInvoiceData(prev => ({ ...prev, lineItems: updatedItems }));\n    calculateTotals(updatedItems);\n  };\n\n  const addLineItem = () => {\n    const newItem = {\n      id: Date.now(),\n      description: '',\n      quantity: 1,\n      rate: 0,\n      amount: 0\n    };\n    const updatedItems = [...invoiceData.lineItems, newItem];\n    setInvoiceData(prev => ({ ...prev, lineItems: updatedItems }));\n  };\n\n  const removeLineItem = (index) => {\n    const updatedItems = invoiceData.lineItems.filter((_, i) => i !== index);\n    setInvoiceData(prev => ({ ...prev, lineItems: updatedItems }));\n    calculateTotals(updatedItems);\n  };\n\n  const calculateTotals = (items) => {\n    const subtotal = items.reduce((sum, item) => sum + item.amount, 0);\n    const tax = subtotal * invoiceData.taxRate;\n    const total = subtotal + tax;\n    \n    setInvoiceData(prev => ({ ...prev, subtotal, tax, total }));\n  };\n\n  const handleCreateInvoice = () => {\n    const newInvoice = {\n      ...invoiceData,\n      id: Date.now().toString(),\n      createdAt: new Date().toISOString(),\n      customer: selectedJob ? jobs.find(j => j.id === selectedJob.id)?.customerName : '',\n      customerId: selectedJob ? jobs.find(j => j.id === selectedJob.id)?.customerId : ''\n    };\n    \n    const updatedInvoices = [...invoices, newInvoice];\n    saveInvoices(updatedInvoices);\n    setShowNewInvoiceModal(false);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setInvoiceData({\n      jobId: '',\n      invoiceNumber: '',\n      issueDate: new Date().toISOString().split('T')[0],\n      dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      lineItems: [],\n      subtotal: 0,\n      tax: 0,\n      taxRate: 0.08,\n      total: 0,\n      notes: '',\n      status: 'draft',\n      paidDate: null\n    });\n    setSelectedJob(null);\n  };\n\n  const updateInvoiceStatus = (invoiceId, newStatus) => {\n    const updatedInvoices = invoices.map(inv => {\n      if (inv.id === invoiceId) {\n        return {\n          ...inv,\n          status: newStatus,\n          paidDate: newStatus === 'paid' ? new Date().toISOString() : inv.paidDate\n        };\n      }\n      return inv;\n    });\n    saveInvoices(updatedInvoices);\n  };\n\n  const deleteInvoice = (invoiceId) => {\n    if (confirm('Are you sure you want to delete this invoice?')) {\n      const updatedInvoices = invoices.filter(inv => inv.id !== invoiceId);\n      saveInvoices(updatedInvoices);\n    }\n  };\n\n  const filteredInvoices = invoices.filter(invoice => {\n    if (filter === 'all') return true;\n    if (filter === 'overdue') {\n      return invoice.status !== 'paid' && new Date(invoice.dueDate) < new Date();\n    }\n    return invoice.status === filter;\n  });\n\n  const getStatusColor = (status, dueDate) => {\n    if (status === 'paid') return '#10B981';\n    if (status === 'sent' && new Date(dueDate) < new Date()) return '#EF4444';\n    if (status === 'sent') return '#3B82F6';\n    return '#6B7280';\n  };\n\n  const getStatusText = (status, dueDate) => {\n    if (status === 'paid') return 'Paid';\n    if (status === 'sent' && new Date(dueDate) < new Date()) return 'Overdue';\n    if (status === 'sent') return 'Sent';\n    return 'Draft';\n  };\n\n  return (\n    <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n      {/* Header */}\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center', \n        marginBottom: '24px' \n      }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n          <button\n            onClick={() => navigate('/dashboard')}\n            style={{\n              background: 'none',\n              border: 'none',\n              padding: '8px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              color: '#6B7280',\n              borderRadius: '6px'\n            }}\n            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#F3F4F6'}\n            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = 'transparent'}\n          >\n            <svg style={{ width: '28px', height: '28px' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n          </button>\n          <div>\n            <h1 style={{ fontSize: '24px', fontWeight: 'bold', margin: '0 0 8px 0' }}>\n              Invoices\n            </h1>\n            <p style={{ color: '#6B7280', margin: 0 }}>\n              Manage invoices and payment tracking\n            </p>\n          </div>\n        </div>\n        <button\n          onClick={() => setShowNewInvoiceModal(true)}\n          style={{\n            padding: '10px 20px',\n            backgroundColor: '#3B82F6',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: 'pointer',\n            fontSize: '14px',\n            fontWeight: '500'\n          }}\n        >\n          + New Invoice\n        </button>\n      </div>\n\n      {/* Filters */}\n      <div style={{\n        display: 'flex',\n        gap: '8px',\n        marginBottom: '20px',\n        flexWrap: 'wrap'\n      }}>\n        {['all', 'draft', 'sent', 'paid', 'overdue'].map(status => (\n          <button\n            key={status}\n            onClick={() => setFilter(status)}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: filter === status ? '#3B82F6' : '#E5E7EB',\n              color: filter === status ? 'white' : '#374151',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '14px',\n              textTransform: 'capitalize'\n            }}\n          >\n            {status === 'all' ? 'All Invoices' : status}\n            {status !== 'all' && ` (${invoices.filter(inv => \n              status === 'overdue' \n                ? inv.status !== 'paid' && new Date(inv.dueDate) < new Date()\n                : inv.status === status\n            ).length})`}\n          </button>\n        ))}\n      </div>\n\n      {/* Invoice List */}\n      <div style={{\n        backgroundColor: 'white',\n        borderRadius: '8px',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n        overflow: 'hidden'\n      }}>\n        {filteredInvoices.length === 0 ? (\n          <div style={{\n            textAlign: 'center',\n            padding: '60px 20px',\n            color: '#9CA3AF'\n          }}>\n            <div style={{ fontSize: '48px', marginBottom: '16px' }}>ðŸ“„</div>\n            <p style={{ fontSize: '16px', margin: '0 0 8px 0' }}>\n              No invoices found\n            </p>\n            <p style={{ fontSize: '14px', margin: 0 }}>\n              Create your first invoice to get started\n            </p>\n          </div>\n        ) : (\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n            <thead>\n              <tr style={{ borderBottom: '1px solid #E5E7EB' }}>\n                <th style={{ padding: '12px 16px', textAlign: 'left', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Invoice #\n                </th>\n                <th style={{ padding: '12px 16px', textAlign: 'left', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Customer\n                </th>\n                <th style={{ padding: '12px 16px', textAlign: 'left', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Amount\n                </th>\n                <th style={{ padding: '12px 16px', textAlign: 'left', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Issue Date\n                </th>\n                <th style={{ padding: '12px 16px', textAlign: 'left', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Due Date\n                </th>\n                <th style={{ padding: '12px 16px', textAlign: 'left', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Status\n                </th>\n                <th style={{ padding: '12px 16px', textAlign: 'right', fontSize: '12px', fontWeight: '600', color: '#6B7280' }}>\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredInvoices.map((invoice, index) => (\n                <tr key={invoice.id} style={{ borderBottom: index < filteredInvoices.length - 1 ? '1px solid #E5E7EB' : 'none' }}>\n                  <td style={{ padding: '16px', fontSize: '14px', fontWeight: '500' }}>\n                    {invoice.invoiceNumber}\n                  </td>\n                  <td style={{ padding: '16px', fontSize: '14px', color: '#374151' }}>\n                    {invoice.customer}\n                  </td>\n                  <td style={{ padding: '16px', fontSize: '14px', fontWeight: '600' }}>\n                    ${invoice.total.toFixed(2)}\n                  </td>\n                  <td style={{ padding: '16px', fontSize: '14px', color: '#6B7280' }}>\n                    {new Date(invoice.issueDate).toLocaleDateString()}\n                  </td>\n                  <td style={{ padding: '16px', fontSize: '14px', color: '#6B7280' }}>\n                    {new Date(invoice.dueDate).toLocaleDateString()}\n                  </td>\n                  <td style={{ padding: '16px' }}>\n                    <span style={{\n                      padding: '4px 12px',\n                      borderRadius: '12px',\n                      fontSize: '12px',\n                      fontWeight: '500',\n                      backgroundColor: `${getStatusColor(invoice.status, invoice.dueDate)}20`,\n                      color: getStatusColor(invoice.status, invoice.dueDate)\n                    }}>\n                      {getStatusText(invoice.status, invoice.dueDate)}\n                    </span>\n                  </td>\n                  <td style={{ padding: '16px', textAlign: 'right' }}>\n                    <div style={{ display: 'flex', gap: '8px', justifyContent: 'flex-end' }}>\n                      {invoice.status === 'draft' && (\n                        <button\n                          onClick={() => updateInvoiceStatus(invoice.id, 'sent')}\n                          style={{\n                            padding: '6px 12px',\n                            backgroundColor: '#3B82F6',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer',\n                            fontSize: '12px'\n                          }}\n                        >\n                          Send\n                        </button>\n                      )}\n                      {invoice.status === 'sent' && (\n                        <button\n                          onClick={() => updateInvoiceStatus(invoice.id, 'paid')}\n                          style={{\n                            padding: '6px 12px',\n                            backgroundColor: '#10B981',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer',\n                            fontSize: '12px'\n                          }}\n                        >\n                          Mark Paid\n                        </button>\n                      )}\n                      <button\n                        onClick={() => navigate(`/invoices/${invoice.id}`)}\n                        style={{\n                          padding: '6px 12px',\n                          backgroundColor: '#E5E7EB',\n                          color: '#374151',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                          fontSize: '12px'\n                        }}\n                      >\n                        View\n                      </button>\n                      <button\n                        onClick={() => deleteInvoice(invoice.id)}\n                        style={{\n                          padding: '6px 12px',\n                          backgroundColor: '#FEE2E2',\n                          color: '#DC2626',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                          fontSize: '12px'\n                        }}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n\n      {/* New Invoice Modal */}\n      {showNewInvoiceModal && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0, 0, 0, 0.5)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          zIndex: 50\n        }}>\n          <div style={{\n            backgroundColor: 'white',\n            borderRadius: '8px',\n            padding: '24px',\n            maxWidth: '800px',\n            width: '90%',\n            maxHeight: '90vh',\n            overflowY: 'auto'\n          }}>\n            <h2 style={{ fontSize: '20px', fontWeight: '600', marginBottom: '20px' }}>\n              Create New Invoice\n            </h2>\n\n            {/* Job Selection */}\n            <div style={{ marginBottom: '20px' }}>\n              <label style={{ display: 'block', fontSize: '14px', fontWeight: '500', marginBottom: '8px' }}>\n                Select Job\n              </label>\n              <select\n                value={invoiceData.jobId}\n                onChange={(e) => handleJobSelect(e.target.value)}\n                style={{\n                  width: '100%',\n                  padding: '10px',\n                  border: '1px solid #E5E7EB',\n                  borderRadius: '6px',\n                  fontSize: '14px'\n                }}\n              >\n                <option value=\"\">Select a job...</option>\n                {jobs.filter(job => job.status === 'completed').map(job => (\n                  <option key={job.id} value={job.id}>\n                    {job.title} - {job.customerName} (${job.price || 0})\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Invoice Details */}\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '20px' }}>\n              <div>\n                <label style={{ display: 'block', fontSize: '14px', fontWeight: '500', marginBottom: '8px' }}>\n                  Invoice Number\n                </label>\n                <input\n                  type=\"text\"\n                  value={invoiceData.invoiceNumber}\n                  onChange={(e) => setInvoiceData(prev => ({ ...prev, invoiceNumber: e.target.value }))}\n                  style={{\n                    width: '100%',\n                    padding: '10px',\n                    border: '1px solid #E5E7EB',\n                    borderRadius: '6px',\n                    fontSize: '14px'\n                  }}\n                />\n              </div>\n              <div>\n                <label style={{ display: 'block', fontSize: '14px', fontWeight: '500', marginBottom: '8px' }}>\n                  Issue Date\n                </label>\n                <input\n                  type=\"date\"\n                  value={invoiceData.issueDate}\n                  onChange={(e) => setInvoiceData(prev => ({ ...prev, issueDate: e.target.value }))}\n                  style={{\n                    width: '100%',\n                    padding: '10px',\n                    border: '1px solid #E5E7EB',\n                    borderRadius: '6px',\n                    fontSize: '14px'\n                  }}\n                />\n              </div>\n            </div>\n\n            <div style={{ marginBottom: '20px' }}>\n              <label style={{ display: 'block', fontSize: '14px', fontWeight: '500', marginBottom: '8px' }}>\n                Due Date\n              </label>\n              <input\n                type=\"date\"\n                value={invoiceData.dueDate}\n                onChange={(e) => setInvoiceData(prev => ({ ...prev, dueDate: e.target.value }))}\n                style={{\n                  width: '100%',\n                  padding: '10px',\n                  border: '1px solid #E5E7EB',\n                  borderRadius: '6px',\n                  fontSize: '14px'\n                }}\n              />\n            </div>\n\n            {/* Line Items */}\n            <div style={{ marginBottom: '20px' }}>\n              <label style={{ display: 'block', fontSize: '14px', fontWeight: '500', marginBottom: '8px' }}>\n                Line Items\n              </label>\n              <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                <thead>\n                  <tr style={{ borderBottom: '1px solid #E5E7EB' }}>\n                    <th style={{ padding: '8px', textAlign: 'left', fontSize: '12px', fontWeight: '600' }}>Description</th>\n                    <th style={{ padding: '8px', textAlign: 'center', fontSize: '12px', fontWeight: '600', width: '100px' }}>Qty</th>\n                    <th style={{ padding: '8px', textAlign: 'center', fontSize: '12px', fontWeight: '600', width: '120px' }}>Rate</th>\n                    <th style={{ padding: '8px', textAlign: 'right', fontSize: '12px', fontWeight: '600', width: '120px' }}>Amount</th>\n                    <th style={{ width: '40px' }}></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {invoiceData.lineItems.map((item, index) => (\n                    <tr key={item.id}>\n                      <td style={{ padding: '8px' }}>\n                        <input\n                          type=\"text\"\n                          value={item.description}\n                          onChange={(e) => handleLineItemChange(index, 'description', e.target.value)}\n                          placeholder=\"Item description\"\n                          style={{\n                            width: '100%',\n                            padding: '8px',\n                            border: '1px solid #E5E7EB',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                          }}\n                        />\n                      </td>\n                      <td style={{ padding: '8px' }}>\n                        <input\n                          type=\"number\"\n                          value={item.quantity}\n                          onChange={(e) => handleLineItemChange(index, 'quantity', parseFloat(e.target.value) || 0)}\n                          style={{\n                            width: '100%',\n                            padding: '8px',\n                            border: '1px solid #E5E7EB',\n                            borderRadius: '4px',\n                            fontSize: '14px',\n                            textAlign: 'center'\n                          }}\n                        />\n                      </td>\n                      <td style={{ padding: '8px' }}>\n                        <input\n                          type=\"number\"\n                          value={item.rate}\n                          onChange={(e) => handleLineItemChange(index, 'rate', parseFloat(e.target.value) || 0)}\n                          placeholder=\"0.00\"\n                          style={{\n                            width: '100%',\n                            padding: '8px',\n                            border: '1px solid #E5E7EB',\n                            borderRadius: '4px',\n                            fontSize: '14px',\n                            textAlign: 'right'\n                          }}\n                        />\n                      </td>\n                      <td style={{ padding: '8px', textAlign: 'right', fontSize: '14px', fontWeight: '500' }}>\n                        ${item.amount.toFixed(2)}\n                      </td>\n                      <td style={{ padding: '8px' }}>\n                        <button\n                          onClick={() => removeLineItem(index)}\n                          style={{\n                            padding: '4px 8px',\n                            backgroundColor: '#FEE2E2',\n                            color: '#DC2626',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer',\n                            fontSize: '12px'\n                          }}\n                        >\n                          Ã—\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <button\n                onClick={addLineItem}\n                style={{\n                  marginTop: '12px',\n                  padding: '8px 16px',\n                  backgroundColor: '#E5E7EB',\n                  color: '#374151',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px'\n                }}\n              >\n                + Add Line Item\n              </button>\n            </div>\n\n            {/* Totals */}\n            <div style={{\n              borderTop: '1px solid #E5E7EB',\n              paddingTop: '16px',\n              marginBottom: '20px'\n            }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\n                <span style={{ fontSize: '14px', color: '#6B7280' }}>Subtotal:</span>\n                <span style={{ fontSize: '14px', fontWeight: '500' }}>${invoiceData.subtotal.toFixed(2)}</span>\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\n                <span style={{ fontSize: '14px', color: '#6B7280' }}>Tax (8%):</span>\n                <span style={{ fontSize: '14px', fontWeight: '500' }}>${invoiceData.tax.toFixed(2)}</span>\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'space-between', borderTop: '1px solid #E5E7EB', paddingTop: '8px' }}>\n                <span style={{ fontSize: '16px', fontWeight: '600' }}>Total:</span>\n                <span style={{ fontSize: '16px', fontWeight: '600' }}>${invoiceData.total.toFixed(2)}</span>\n              </div>\n            </div>\n\n            {/* Notes */}\n            <div style={{ marginBottom: '20px' }}>\n              <label style={{ display: 'block', fontSize: '14px', fontWeight: '500', marginBottom: '8px' }}>\n                Notes\n              </label>\n              <textarea\n                value={invoiceData.notes}\n                onChange={(e) => setInvoiceData(prev => ({ ...prev, notes: e.target.value }))}\n                placeholder=\"Additional notes or payment terms...\"\n                rows={3}\n                style={{\n                  width: '100%',\n                  padding: '10px',\n                  border: '1px solid #E5E7EB',\n                  borderRadius: '6px',\n                  fontSize: '14px',\n                  resize: 'vertical'\n                }}\n              />\n            </div>\n\n            {/* Actions */}\n            <div style={{ display: 'flex', gap: '12px', justifyContent: 'flex-end' }}>\n              <button\n                onClick={() => {\n                  setShowNewInvoiceModal(false);\n                  resetForm();\n                }}\n                style={{\n                  padding: '10px 20px',\n                  backgroundColor: '#E5E7EB',\n                  color: '#374151',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px'\n                }}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleCreateInvoice}\n                disabled={invoiceData.lineItems.length === 0}\n                style={{\n                  padding: '10px 20px',\n                  backgroundColor: invoiceData.lineItems.length === 0 ? '#9CA3AF' : '#3B82F6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: invoiceData.lineItems.length === 0 ? 'not-allowed' : 'pointer',\n                  fontSize: '14px',\n                  fontWeight: '500'\n                }}\n              >\n                Create Invoice\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Invoices;"],"names":["Invoices","navigate","useNavigate","invoices","setInvoices","useState","showNewInvoiceModal","setShowNewInvoiceModal","jobs","setJobs","customers","setCustomers","filter","setFilter","selectedJob","setSelectedJob","invoiceData","setInvoiceData","useEffect","savedInvoices","calendarJobStorage","customerStorage","nextNumber","prev","saveInvoices","updatedInvoices","handleJobSelect","jobId","job","j","calculateTotals","handleLineItemChange","index","field","value","updatedItems","addLineItem","newItem","removeLineItem","_","i","items","subtotal","sum","item","tax","total","handleCreateInvoice","newInvoice","_a","_b","resetForm","updateInvoiceStatus","invoiceId","newStatus","inv","deleteInvoice","filteredInvoices","invoice","getStatusColor","status","dueDate","getStatusText","jsxs","jsx","e"],"mappings":"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"}