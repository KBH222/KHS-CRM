{"version":3,"file":"Reports-DFVunQVu.js","sources":["../../src/pages/Reports.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { calendarJobStorage, customerStorage } from '../utils/localStorage';\n\nconst Reports = () => {\n  const [jobs, setJobs] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [timeRange, setTimeRange] = useState('month'); // week, month, quarter, year\n  const [startDate, setStartDate] = useState(() => {\n    const date = new Date();\n    date.setDate(1); // Start of current month\n    return date.toISOString().split('T')[0];\n  });\n  const [endDate, setEndDate] = useState(() => {\n    const date = new Date();\n    date.setMonth(date.getMonth() + 1);\n    date.setDate(0); // End of current month\n    return date.toISOString().split('T')[0];\n  });\n\n  useEffect(() => {\n    setJobs(calendarJobStorage.getAll());\n    setCustomers(customerStorage.getAll());\n  }, []);\n\n  useEffect(() => {\n    // Update date range based on selected time range\n    const today = new Date();\n    let start = new Date();\n    let end = new Date();\n\n    switch (timeRange) {\n      case 'week':\n        start.setDate(today.getDate() - today.getDay());\n        end.setDate(start.getDate() + 6);\n        break;\n      case 'month':\n        start = new Date(today.getFullYear(), today.getMonth(), 1);\n        end = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n        break;\n      case 'quarter':\n        const quarter = Math.floor(today.getMonth() / 3);\n        start = new Date(today.getFullYear(), quarter * 3, 1);\n        end = new Date(today.getFullYear(), quarter * 3 + 3, 0);\n        break;\n      case 'year':\n        start = new Date(today.getFullYear(), 0, 1);\n        end = new Date(today.getFullYear(), 11, 31);\n        break;\n      case 'custom':\n        return; // Don't update dates for custom range\n    }\n\n    setStartDate(start.toISOString().split('T')[0]);\n    setEndDate(end.toISOString().split('T')[0]);\n  }, [timeRange]);\n\n  // Filter jobs by date range\n  const filteredJobs = jobs.filter(job => {\n    const jobDate = new Date(job.startDate);\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    end.setHours(23, 59, 59, 999);\n    return jobDate >= start && jobDate <= end;\n  });\n\n  // Calculate statistics\n  const stats = {\n    totalJobs: filteredJobs.length,\n    completedJobs: filteredJobs.filter(j => j.status === 'completed').length,\n    inProgressJobs: filteredJobs.filter(j => j.status === 'in-progress').length,\n    pendingJobs: filteredJobs.filter(j => j.status === 'pending' || !j.status).length,\n    totalRevenue: filteredJobs.reduce((sum, job) => sum + (job.price || 0), 0),\n    avgJobValue: filteredJobs.length > 0 ? \n      filteredJobs.reduce((sum, job) => sum + (job.price || 0), 0) / filteredJobs.length : 0,\n    totalCustomers: new Set(filteredJobs.map(j => j.customerId)).size,\n    jobsByWorker: {},\n    jobsByCustomer: {},\n    jobsByMonth: {}\n  };\n\n  // Calculate jobs by worker\n  filteredJobs.forEach(job => {\n    (job.workers || []).forEach(worker => {\n      if (!stats.jobsByWorker[worker]) {\n        stats.jobsByWorker[worker] = 0;\n      }\n      stats.jobsByWorker[worker]++;\n    });\n  });\n\n  // Calculate jobs by customer\n  filteredJobs.forEach(job => {\n    const customerName = job.customerName || 'Unknown';\n    if (!stats.jobsByCustomer[customerName]) {\n      stats.jobsByCustomer[customerName] = 0;\n    }\n    stats.jobsByCustomer[customerName]++;\n  });\n\n  // Calculate jobs by month\n  filteredJobs.forEach(job => {\n    const date = new Date(job.startDate);\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    if (!stats.jobsByMonth[monthKey]) {\n      stats.jobsByMonth[monthKey] = 0;\n    }\n    stats.jobsByMonth[monthKey]++;\n  });\n\n  const StatCard = ({ title, value, subtitle, color = '#3B82F6' }) => (\n    <div style={{\n      backgroundColor: 'white',\n      borderRadius: '8px',\n      padding: '20px',\n      boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n      borderLeft: `4px solid ${color}`\n    }}>\n      <h3 style={{ \n        fontSize: '14px', \n        color: '#6B7280', \n        margin: '0 0 8px 0',\n        fontWeight: '500'\n      }}>\n        {title}\n      </h3>\n      <p style={{ \n        fontSize: '28px', \n        fontWeight: 'bold', \n        margin: '0 0 4px 0',\n        color: '#111827'\n      }}>\n        {value}\n      </p>\n      {subtitle && (\n        <p style={{ \n          fontSize: '12px', \n          color: '#9CA3AF', \n          margin: 0 \n        }}>\n          {subtitle}\n        </p>\n      )}\n    </div>\n  );\n\n  const timeRangeOptions = [\n    { value: 'week', label: 'This Week' },\n    { value: 'month', label: 'This Month' },\n    { value: 'quarter', label: 'This Quarter' },\n    { value: 'year', label: 'This Year' },\n    { value: 'custom', label: 'Custom Range' }\n  ];\n\n  return (\n    <div style={{ maxWidth: '1200px', margin: '0 auto', padding: '20px' }}>\n      {/* Header */}\n      <div style={{ marginBottom: '24px' }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n          <button\n            onClick={() => window.history.back()}\n            style={{\n              background: 'none',\n              border: 'none',\n              padding: '8px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              color: '#6B7280',\n              borderRadius: '6px'\n            }}\n            onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#F3F4F6'}\n            onMouseLeave={(e) => e.currentTarget.style.backgroundColor = 'transparent'}\n          >\n            <svg style={{ width: '28px', height: '28px' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n          </button>\n          <div>\n            <h1 style={{ fontSize: '24px', fontWeight: 'bold', margin: '0 0 8px 0' }}>\n              Reports & Analytics\n            </h1>\n            <p style={{ color: '#6B7280', margin: 0 }}>\n              Track your business performance and insights\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Date Range Selector */}\n      <div style={{\n        backgroundColor: 'white',\n        borderRadius: '8px',\n        padding: '16px',\n        marginBottom: '24px',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '16px',\n        flexWrap: 'wrap'\n      }}>\n        <label style={{ fontWeight: '500', color: '#374151' }}>\n          Time Range:\n        </label>\n        <select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n          style={{\n            padding: '8px 12px',\n            border: '1px solid #E5E7EB',\n            borderRadius: '6px',\n            fontSize: '14px',\n            cursor: 'pointer'\n          }}\n        >\n          {timeRangeOptions.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n\n        {timeRange === 'custom' && (\n          <>\n            <input\n              type=\"date\"\n              value={startDate}\n              onChange={(e) => setStartDate(e.target.value)}\n              style={{\n                padding: '8px 12px',\n                border: '1px solid #E5E7EB',\n                borderRadius: '6px',\n                fontSize: '14px'\n              }}\n            />\n            <span style={{ color: '#6B7280' }}>to</span>\n            <input\n              type=\"date\"\n              value={endDate}\n              onChange={(e) => setEndDate(e.target.value)}\n              style={{\n                padding: '8px 12px',\n                border: '1px solid #E5E7EB',\n                borderRadius: '6px',\n                fontSize: '14px'\n              }}\n            />\n          </>\n        )}\n        \n        <span style={{ \n          marginLeft: 'auto', \n          fontSize: '14px', \n          color: '#6B7280' \n        }}>\n          {new Date(startDate).toLocaleDateString()} - {new Date(endDate).toLocaleDateString()}\n        </span>\n      </div>\n\n      {/* Summary Stats */}\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n        gap: '16px',\n        marginBottom: '24px'\n      }}>\n        <StatCard\n          title=\"Total Jobs\"\n          value={stats.totalJobs}\n          subtitle={`${stats.completedJobs} completed`}\n          color=\"#3B82F6\"\n        />\n        <StatCard\n          title=\"Total Revenue\"\n          value={`$${stats.totalRevenue.toLocaleString()}`}\n          subtitle={`Avg: $${Math.round(stats.avgJobValue).toLocaleString()}`}\n          color=\"#10B981\"\n        />\n        <StatCard\n          title=\"Active Customers\"\n          value={stats.totalCustomers}\n          subtitle=\"Unique customers\"\n          color=\"#8B5CF6\"\n        />\n        <StatCard\n          title=\"Completion Rate\"\n          value={`${stats.totalJobs > 0 ? Math.round((stats.completedJobs / stats.totalJobs) * 100) : 0}%`}\n          subtitle={`${stats.inProgressJobs} in progress`}\n          color=\"#F59E0B\"\n        />\n      </div>\n\n      {/* Job Status Breakdown */}\n      <div style={{\n        backgroundColor: 'white',\n        borderRadius: '8px',\n        padding: '20px',\n        marginBottom: '24px',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n      }}>\n        <h2 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '16px' }}>\n          Job Status Breakdown\n        </h2>\n        <div style={{ display: 'flex', gap: '24px', flexWrap: 'wrap' }}>\n          <div style={{ flex: 1, minWidth: '200px' }}>\n            <div style={{ marginBottom: '12px' }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '4px' }}>\n                <span style={{ fontSize: '14px', color: '#374151' }}>Completed</span>\n                <span style={{ fontSize: '14px', fontWeight: '600' }}>{stats.completedJobs}</span>\n              </div>\n              <div style={{\n                width: '100%',\n                height: '8px',\n                backgroundColor: '#E5E7EB',\n                borderRadius: '4px',\n                overflow: 'hidden'\n              }}>\n                <div style={{\n                  width: `${stats.totalJobs > 0 ? (stats.completedJobs / stats.totalJobs) * 100 : 0}%`,\n                  height: '100%',\n                  backgroundColor: '#10B981',\n                  transition: 'width 0.3s'\n                }} />\n              </div>\n            </div>\n\n            <div style={{ marginBottom: '12px' }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '4px' }}>\n                <span style={{ fontSize: '14px', color: '#374151' }}>In Progress</span>\n                <span style={{ fontSize: '14px', fontWeight: '600' }}>{stats.inProgressJobs}</span>\n              </div>\n              <div style={{\n                width: '100%',\n                height: '8px',\n                backgroundColor: '#E5E7EB',\n                borderRadius: '4px',\n                overflow: 'hidden'\n              }}>\n                <div style={{\n                  width: `${stats.totalJobs > 0 ? (stats.inProgressJobs / stats.totalJobs) * 100 : 0}%`,\n                  height: '100%',\n                  backgroundColor: '#3B82F6',\n                  transition: 'width 0.3s'\n                }} />\n              </div>\n            </div>\n\n            <div>\n              <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '4px' }}>\n                <span style={{ fontSize: '14px', color: '#374151' }}>Pending</span>\n                <span style={{ fontSize: '14px', fontWeight: '600' }}>{stats.pendingJobs}</span>\n              </div>\n              <div style={{\n                width: '100%',\n                height: '8px',\n                backgroundColor: '#E5E7EB',\n                borderRadius: '4px',\n                overflow: 'hidden'\n              }}>\n                <div style={{\n                  width: `${stats.totalJobs > 0 ? (stats.pendingJobs / stats.totalJobs) * 100 : 0}%`,\n                  height: '100%',\n                  backgroundColor: '#F59E0B',\n                  transition: 'width 0.3s'\n                }} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Jobs by Worker */}\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',\n        gap: '24px'\n      }}>\n        <div style={{\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          padding: '20px',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n        }}>\n          <h2 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '16px' }}>\n            Jobs by Worker\n          </h2>\n          {Object.keys(stats.jobsByWorker).length > 0 ? (\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n              {Object.entries(stats.jobsByWorker)\n                .sort(([,a], [,b]) => b - a)\n                .map(([worker, count]) => (\n                  <div key={worker} style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    padding: '8px 0',\n                    borderBottom: '1px solid #F3F4F6'\n                  }}>\n                    <span style={{ fontSize: '14px', color: '#374151' }}>{worker}</span>\n                    <span style={{ \n                      fontSize: '14px', \n                      fontWeight: '600',\n                      backgroundColor: '#E0E7FF',\n                      color: '#3730A3',\n                      padding: '2px 8px',\n                      borderRadius: '12px'\n                    }}>\n                      {count}\n                    </span>\n                  </div>\n                ))}\n            </div>\n          ) : (\n            <p style={{ color: '#9CA3AF', fontSize: '14px', textAlign: 'center', padding: '20px 0' }}>\n              No worker data available\n            </p>\n          )}\n        </div>\n\n        {/* Top Customers */}\n        <div style={{\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          padding: '20px',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n        }}>\n          <h2 style={{ fontSize: '18px', fontWeight: '600', marginBottom: '16px' }}>\n            Top Customers\n          </h2>\n          {Object.keys(stats.jobsByCustomer).length > 0 ? (\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n              {Object.entries(stats.jobsByCustomer)\n                .sort(([,a], [,b]) => b - a)\n                .slice(0, 5)\n                .map(([customer, count]) => (\n                  <div key={customer} style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    padding: '8px 0',\n                    borderBottom: '1px solid #F3F4F6'\n                  }}>\n                    <span style={{ \n                      fontSize: '14px', \n                      color: '#374151',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      whiteSpace: 'nowrap',\n                      maxWidth: '70%'\n                    }}>\n                      {customer}\n                    </span>\n                    <span style={{ \n                      fontSize: '14px', \n                      fontWeight: '600',\n                      backgroundColor: '#D1FAE5',\n                      color: '#065F46',\n                      padding: '2px 8px',\n                      borderRadius: '12px'\n                    }}>\n                      {count} jobs\n                    </span>\n                  </div>\n                ))}\n            </div>\n          ) : (\n            <p style={{ color: '#9CA3AF', fontSize: '14px', textAlign: 'center', padding: '20px 0' }}>\n              No customer data available\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Reports;"],"names":["Reports","jobs","setJobs","useState","customers","setCustomers","timeRange","setTimeRange","startDate","setStartDate","date","endDate","setEndDate","useEffect","calendarJobStorage","customerStorage","today","start","end","quarter","filteredJobs","job","jobDate","stats","j","sum","worker","customerName","monthKey","StatCard","title","value","subtitle","color","jsxs","jsx","timeRangeOptions","option","Fragment","a","b","count","customer"],"mappings":"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"}