{"version":3,"file":"SyncDebug-aibS-vmy.js","sources":["../../src/pages/SyncDebug.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { customerServiceFixed } from '../services/customer.service.fixed';\nimport { simpleSyncService } from '../services/sync.service.simple';\nimport { offlineDb } from '../services/db.service';\n\nexport default function SyncDebug() {\n  const [customers, setCustomers] = useState<any[]>([]);\n  const [syncStatus, setSyncStatus] = useState<any>({});\n  const [localData, setLocalData] = useState<any[]>([]);\n  const [logs, setLogs] = useState<string[]>([]);\n\n  const addLog = (message: string) => {\n    const timestamp = new Date().toLocaleTimeString();\n    setLogs(prev => [`[${timestamp}] ${message}`, ...prev].slice(0, 20));\n  };\n\n  const loadData = async () => {\n    try {\n      // Load from service (API if online, local if offline)\n      const serviceCustomers = await customerServiceFixed.getCustomers();\n      setCustomers(serviceCustomers);\n      addLog(`Loaded ${serviceCustomers.length} customers from service`);\n\n      // Load directly from IndexedDB\n      const dbCustomers = await offlineDb.getCustomers();\n      setLocalData(dbCustomers);\n      addLog(`Found ${dbCustomers.length} customers in IndexedDB`);\n\n      // Get sync status\n      const status = simpleSyncService.getSyncStatus();\n      const pending = simpleSyncService.getPendingOperations();\n      setSyncStatus({\n        ...status,\n        pendingOps: pending\n      });\n      addLog(`Sync queue has ${pending.length} operations`);\n    } catch (error) {\n      console.error('Failed to load data', error);\n      addLog(`Error loading data: ${error}`);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n    \n    // Refresh every 2 seconds\n    const interval = setInterval(loadData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const createTestCustomer = async () => {\n    try {\n      const customer = await customerServiceFixed.createCustomer({\n        name: `Test Customer ${Date.now()}`,\n        address: '123 Test St',\n        phone: '555-0123',\n        email: 'test@example.com'\n      });\n      addLog(`Created customer: ${customer.name} (${customer.id})`);\n      await loadData();\n    } catch (error) {\n      console.error('Failed to create customer', error);\n      addLog(`Error creating customer: ${error}`);\n    }\n  };\n\n  const forceSync = async () => {\n    try {\n      addLog('Starting force sync...');\n      const result = await simpleSyncService.syncAll();\n      addLog(`Sync complete: ${result.synced} synced, ${result.failed} failed`);\n      await loadData();\n    } catch (error) {\n      console.error('Force sync failed', error);\n      addLog(`Sync error: ${error}`);\n    }\n  };\n\n  const refreshFromServer = async () => {\n    try {\n      addLog('Refreshing from server...');\n      await customerServiceFixed.refreshFromServer();\n      addLog('Server refresh complete');\n      await loadData();\n    } catch (error) {\n      console.error('Refresh failed', error);\n      addLog(`Refresh error: ${error}`);\n    }\n  };\n\n  const clearSyncQueue = () => {\n    simpleSyncService.clearQueue();\n    addLog('Sync queue cleared');\n    loadData();\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Sync Debug Dashboard</h1>\n      \n      {/* Status Overview */}\n      <div className=\"bg-white rounded-lg shadow p-4 mb-4\">\n        <h2 className=\"text-lg font-semibold mb-2\">Status</h2>\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div>\n            <span className=\"font-medium\">Online:</span>{' '}\n            <span className={navigator.onLine ? 'text-green-600' : 'text-red-600'}>\n              {navigator.onLine ? 'Yes' : 'No'}\n            </span>\n          </div>\n          <div>\n            <span className=\"font-medium\">Syncing:</span>{' '}\n            {syncStatus.syncing ? 'Yes' : 'No'}\n          </div>\n          <div>\n            <span className=\"font-medium\">Pending Operations:</span>{' '}\n            {syncStatus.pendingOps?.length || 0}\n          </div>\n          <div>\n            <span className=\"font-medium\">Queue Size:</span>{' '}\n            {syncStatus.queueSize || 0}\n          </div>\n        </div>\n      </div>\n\n      {/* Actions */}\n      <div className=\"bg-white rounded-lg shadow p-4 mb-4\">\n        <h2 className=\"text-lg font-semibold mb-2\">Actions</h2>\n        <div className=\"flex gap-2 flex-wrap\">\n          <button\n            onClick={createTestCustomer}\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n          >\n            Create Test Customer\n          </button>\n          <button\n            onClick={forceSync}\n            className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\"\n            disabled={!navigator.onLine}\n          >\n            Force Sync\n          </button>\n          <button\n            onClick={refreshFromServer}\n            className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600\"\n            disabled={!navigator.onLine}\n          >\n            Refresh from Server\n          </button>\n          <button\n            onClick={clearSyncQueue}\n            className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\n          >\n            Clear Sync Queue\n          </button>\n          <button\n            onClick={loadData}\n            className=\"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600\"\n          >\n            Reload Data\n          </button>\n        </div>\n      </div>\n\n      {/* Data Comparison */}\n      <div className=\"grid grid-cols-2 gap-4 mb-4\">\n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <h2 className=\"text-lg font-semibold mb-2\">\n            Service Data ({customers.length})\n          </h2>\n          <div className=\"max-h-60 overflow-auto\">\n            {customers.map(c => (\n              <div key={c.id} className=\"text-sm py-1 border-b\">\n                <span className={c.id.startsWith('temp_') ? 'text-orange-600' : ''}>\n                  {c.name} - {c.id}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-4\">\n          <h2 className=\"text-lg font-semibold mb-2\">\n            IndexedDB Data ({localData.length})\n          </h2>\n          <div className=\"max-h-60 overflow-auto\">\n            {localData.map(c => (\n              <div key={c.id} className=\"text-sm py-1 border-b\">\n                <span className={c.id.startsWith('temp_') ? 'text-orange-600' : ''}>\n                  {c.name} - {c.id}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Pending Operations */}\n      {syncStatus.pendingOps?.length > 0 && (\n        <div className=\"bg-white rounded-lg shadow p-4 mb-4\">\n          <h2 className=\"text-lg font-semibold mb-2\">Pending Operations</h2>\n          <div className=\"max-h-40 overflow-auto\">\n            {syncStatus.pendingOps.map((op: any) => (\n              <div key={op.id} className=\"text-sm py-1 border-b font-mono\">\n                {op.operation} {op.entityType} {op.entityId || 'new'}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Logs */}\n      <div className=\"bg-white rounded-lg shadow p-4\">\n        <h2 className=\"text-lg font-semibold mb-2\">Logs</h2>\n        <div className=\"max-h-60 overflow-auto bg-gray-100 p-2 rounded\">\n          {logs.map((log, i) => (\n            <div key={i} className=\"text-xs font-mono\">\n              {log}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["SyncDebug","customers","setCustomers","useState","syncStatus","setSyncStatus","localData","setLocalData","logs","setLogs","addLog","message","timestamp","prev","loadData","serviceCustomers","customerServiceFixed","dbCustomers","offlineDb","status","simpleSyncService","pending","error","useEffect","interval","createTestCustomer","customer","forceSync","result","refreshFromServer","clearSyncQueue","jsxs","jsx","_a","c","_b","op","log","i"],"mappings":"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"}