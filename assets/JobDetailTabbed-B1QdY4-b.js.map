{"version":3,"file":"JobDetailTabbed-B1QdY4-b.js","sources":["../../src/pages/JobDetailTabbed.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst JobDetailTabbed = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('description');\n\n  // Load job data from localStorage\n  const [job, setJob] = useState(null);\n  \n  useEffect(() => {\n    const jobs = JSON.parse(localStorage.getItem('khs-crm-jobs') || '[]');\n    const foundJob = jobs.find(j => j.id === id);\n    if (foundJob) {\n      // Set default values if missing\n      setJob({\n        ...foundJob,\n        pictures: foundJob.pictures || [],\n        plans: foundJob.plans || [],\n        tasks: foundJob.tasks || [],\n        specialNotes: foundJob.specialNotes || ''\n      });\n    } else {\n      navigate('/jobs');\n    }\n  }, [id, navigate]);\n  \n  // Initialize state when job loads\n  useEffect(() => {\n    if (job) {\n      setTasks(job.tasks || []);\n      setNotes(job.specialNotes || '');\n      // Load materials from localStorage\n      const savedMaterials = localStorage.getItem(`job_materials_${job.id}`);\n      if (savedMaterials) {\n        setMaterials(JSON.parse(savedMaterials));\n      }\n      // Load extra work items\n      const savedExtraWork = localStorage.getItem(`job_extraWork_${job.id}`);\n      if (savedExtraWork) {\n        setExtraWorkItems(JSON.parse(savedExtraWork));\n      } else {\n        setExtraWorkItems(job.extraWork || []);\n      }\n    }\n  }, [job]);\n\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [newTaskAssignee, setNewTaskAssignee] = useState('');\n  const [editingNotes, setEditingNotes] = useState(false);\n  const [notes, setNotes] = useState('');\n  \n  // Materials state\n  const [materials, setMaterials] = useState([]);\n  const [showAddMaterial, setShowAddMaterial] = useState(false);\n  const [newMaterial, setNewMaterial] = useState({\n    name: '',\n    quantity: '',\n    unit: 'pieces',\n    store: 'Home Depot',\n    price: ''\n  });\n\n  const workers = ['KBH', 'ISA', 'TYL'];\n\n  // Extra Work state\n  const [extraWorkItems, setExtraWorkItems] = useState([]);\n  const [showAddExtraWork, setShowAddExtraWork] = useState(false);\n  const [newExtraWork, setNewExtraWork] = useState({\n    description: '',\n    cost: '',\n    status: 'pending',\n    dateAdded: new Date().toISOString()\n  });\n\n  // Save materials to localStorage whenever they change\n  useEffect(() => {\n    if (job?.id) {\n      localStorage.setItem(`job_materials_${job.id}`, JSON.stringify(materials));\n    }\n  }, [materials, job]);\n\n  // Save extra work items to localStorage whenever they change\n  useEffect(() => {\n    if (job?.id) {\n      localStorage.setItem(`job_extraWork_${job.id}`, JSON.stringify(extraWorkItems));\n    }\n  }, [extraWorkItems, job]);\n\n  const tabs = [\n    { id: 'description', label: 'Job Description' },\n    { id: 'pictures', label: `Pictures (${job?.pictures?.length || 0})` },\n    { id: 'plans', label: 'Plans/Drawings' },\n    { id: 'tasks', label: `Tasks (${tasks.filter(t => !t.completed).length}/${tasks.length})` },\n    { id: 'materials', label: 'Materials' },\n    { id: 'notes', label: 'Special Notes' },\n    { id: 'extraWork', label: 'Extra Work' }\n  ];\n\n  const handleTaskToggle = (taskId) => {\n    setTasks(tasks.map(task => \n      task.id === taskId ? { ...task, completed: !task.completed } : task\n    ));\n  };\n\n  const handleAddTask = (e) => {\n    e.preventDefault();\n    if (newTask.trim()) {\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: newTask,\n        completed: false,\n        assignedTo: newTaskAssignee || null\n      }]);\n      setNewTask('');\n      setNewTaskAssignee('');\n    }\n  };\n\n  const handleAssignTask = (taskId, worker) => {\n    setTasks(tasks.map(task =>\n      task.id === taskId ? { ...task, assignedTo: worker } : task\n    ));\n  };\n\n  const handleDeleteTask = (taskId) => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  // Material handling functions\n  const handleAddMaterial = (e) => {\n    e.preventDefault();\n    if (newMaterial.name && newMaterial.quantity && newMaterial.price) {\n      const quantity = parseFloat(newMaterial.quantity);\n      const price = parseFloat(newMaterial.price);\n      const total = quantity * price;\n      \n      setMaterials([...materials, {\n        id: Date.now(),\n        name: newMaterial.name,\n        quantity: quantity,\n        unit: newMaterial.unit,\n        store: newMaterial.store,\n        price: price,\n        total: total\n      }]);\n      \n      setNewMaterial({\n        name: '',\n        quantity: '',\n        unit: 'pieces',\n        store: 'Home Depot',\n        price: ''\n      });\n      setShowAddMaterial(false);\n    }\n  };\n\n  const handleDeleteMaterial = (materialId) => {\n    setMaterials(materials.filter(material => material.id !== materialId));\n  };\n\n  const getTotalMaterialsCost = () => {\n    return materials.reduce((sum, material) => sum + material.total, 0);\n  };\n\n  // Extra Work handling functions\n  const handleAddExtraWork = (e) => {\n    e.preventDefault();\n    if (newExtraWork.description && newExtraWork.cost) {\n      const cost = parseFloat(newExtraWork.cost);\n      \n      setExtraWorkItems([...extraWorkItems, {\n        id: Date.now(),\n        description: newExtraWork.description,\n        cost: cost,\n        status: newExtraWork.status,\n        dateAdded: new Date().toISOString(),\n        approved: false\n      }]);\n      \n      setNewExtraWork({\n        description: '',\n        cost: '',\n        status: 'pending',\n        dateAdded: new Date().toISOString()\n      });\n      setShowAddExtraWork(false);\n    }\n  };\n\n  const handleDeleteExtraWork = (itemId) => {\n    setExtraWorkItems(extraWorkItems.filter(item => item.id !== itemId));\n  };\n\n  const handleApproveExtraWork = (itemId) => {\n    setExtraWorkItems(extraWorkItems.map(item =>\n      item.id === itemId ? { ...item, approved: !item.approved, status: item.approved ? 'pending' : 'approved' } : item\n    ));\n  };\n\n  const getTotalExtraWorkCost = () => {\n    return extraWorkItems.reduce((sum, item) => sum + item.cost, 0);\n  };\n\n  const getApprovedExtraWorkCost = () => {\n    return extraWorkItems.filter(item => item.approved).reduce((sum, item) => sum + item.cost, 0);\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'Completed': return '#10B981';\n      case 'In Progress': return '#3B82F6';\n      case 'Quote': return '#F59E0B';\n      default: return '#6B7280';\n    }\n  };\n\n  if (!job) {\n    return (\n      <div style={{ maxWidth: '800px', margin: '0 auto', padding: '20px', textAlign: 'center' }}>\n        <p>Loading job details...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n      {/* Header */}\n      <div style={{ marginBottom: '20px' }}>\n        <button\n          onClick={() => navigate(`/customers/${job.customerId}`)}\n          style={{\n            marginBottom: '15px',\n            padding: '8px 16px',\n            backgroundColor: '#E5E7EB',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: 'pointer',\n            fontSize: '14px'\n          }}\n        >\n          ‚Üê Back to {job.customerName}\n        </button>\n        \n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start' }}>\n          <div>\n            <h1 style={{ margin: '0 0 8px 0', fontSize: '24px', fontWeight: 'bold' }}>\n              {job.title}\n            </h1>\n            <span style={{\n              display: 'inline-block',\n              padding: '4px 12px',\n              backgroundColor: `${getStatusColor(job.status)}20`,\n              color: getStatusColor(job.status),\n              borderRadius: '12px',\n              fontSize: '14px',\n              fontWeight: '500'\n            }}>\n              {job.status}\n            </span>\n          </div>\n          <div style={{ textAlign: 'right' }}>\n            <p style={{ margin: '0 0 4px 0', fontSize: '24px', fontWeight: 'bold' }}>\n              ${job.totalCost.toLocaleString()}\n            </p>\n            <p style={{ margin: 0, fontSize: '14px', color: '#6B7280' }}>\n              Started: {new Date(job.startDate).toLocaleDateString()}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div style={{ marginBottom: '20px' }}>\n        <div style={{ \n          display: 'flex', \n          borderBottom: '2px solid #E5E7EB',\n          overflowX: 'auto',\n          WebkitOverflowScrolling: 'touch'\n        }}>\n          {tabs.map(tab => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              style={{\n                padding: '12px 16px',\n                border: 'none',\n                backgroundColor: 'transparent',\n                cursor: 'pointer',\n                fontSize: '14px',\n                fontWeight: '500',\n                color: activeTab === tab.id ? '#3B82F6' : '#6B7280',\n                borderBottom: activeTab === tab.id ? '2px solid #3B82F6' : '2px solid transparent',\n                marginBottom: '-2px',\n                whiteSpace: 'nowrap',\n                transition: 'color 0.2s'\n              }}\n            >\n              {tab.label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      <div style={{ backgroundColor: 'white', padding: '20px', borderRadius: '8px', boxShadow: '0 1px 3px rgba(0,0,0,0.1)' }}>\n        {/* Job Description Tab */}\n        {activeTab === 'description' && (\n          <div>\n            <h2 style={{ margin: '0 0 16px 0', fontSize: '18px', fontWeight: '600' }}>Scope of Work</h2>\n            <pre style={{ \n              margin: 0, \n              whiteSpace: 'pre-wrap', \n              fontFamily: 'inherit',\n              fontSize: '14px',\n              lineHeight: '1.6',\n              color: '#374151'\n            }}>\n              {job.description}\n            </pre>\n          </div>\n        )}\n\n        {/* Pictures Tab */}\n        {activeTab === 'pictures' && (\n          <div>\n            <div style={{ \n              display: 'flex', \n              justifyContent: 'space-between', \n              alignItems: 'center',\n              marginBottom: '16px'\n            }}>\n              <h2 style={{ margin: 0, fontSize: '18px', fontWeight: '600' }}>Project Photos</h2>\n              <button\n                style={{\n                  padding: '8px 16px',\n                  backgroundColor: '#3B82F6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px'\n                }}\n              >\n                + Add Photo\n              </button>\n            </div>\n            <div style={{ \n              display: 'grid', \n              gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n              gap: '16px'\n            }}>\n              {job.pictures.map(pic => (\n                <div key={pic.id} style={{ textAlign: 'center' }}>\n                  <div style={{\n                    width: '100%',\n                    height: '150px',\n                    backgroundColor: '#E5E7EB',\n                    borderRadius: '8px',\n                    marginBottom: '8px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    color: '#6B7280',\n                    fontSize: '12px'\n                  }}>\n                    [Photo]\n                  </div>\n                  <p style={{ margin: 0, fontSize: '12px', color: '#6B7280' }}>{pic.caption}</p>\n                </div>\n              ))}\n            </div>\n            {job.pictures.length === 0 && (\n              <p style={{ textAlign: 'center', color: '#6B7280' }}>\n                No photos yet. Click \"Add Photo\" to upload.\n              </p>\n            )}\n          </div>\n        )}\n\n        {/* Plans/Drawings Tab */}\n        {activeTab === 'plans' && (\n          <div>\n            <div style={{ \n              display: 'flex', \n              justifyContent: 'space-between', \n              alignItems: 'center',\n              marginBottom: '16px'\n            }}>\n              <h2 style={{ margin: 0, fontSize: '18px', fontWeight: '600' }}>Plans & Drawings</h2>\n              <button\n                style={{\n                  padding: '8px 16px',\n                  backgroundColor: '#3B82F6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px'\n                }}\n              >\n                + Add Document\n              </button>\n            </div>\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n              {job.plans.map(plan => (\n                <div \n                  key={plan.id}\n                  style={{\n                    padding: '12px',\n                    border: '1px solid #E5E7EB',\n                    borderRadius: '6px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '12px',\n                    cursor: 'pointer'\n                  }}\n                >\n                  <span style={{ fontSize: '20px' }}>\n                    {plan.type === 'pdf' ? 'üìÑ' : 'üñºÔ∏è'}\n                  </span>\n                  <span style={{ fontSize: '14px' }}>{plan.name}</span>\n                </div>\n              ))}\n            </div>\n            {job.plans.length === 0 && (\n              <p style={{ textAlign: 'center', color: '#6B7280' }}>\n                No plans uploaded yet.\n              </p>\n            )}\n          </div>\n        )}\n\n        {/* Tasks Tab */}\n        {activeTab === 'tasks' && (\n          <div>\n            <h2 style={{ margin: '0 0 16px 0', fontSize: '18px', fontWeight: '600' }}>Task List</h2>\n            \n            {/* Add Task Form */}\n            <form onSubmit={handleAddTask} style={{ marginBottom: '16px' }}>\n              <div style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n                <input\n                  type=\"text\"\n                  value={newTask}\n                  onChange={(e) => setNewTask(e.target.value)}\n                  placeholder=\"Add a new task...\"\n                  style={{\n                    flex: '1 1 200px',\n                    padding: '8px 12px',\n                    border: '1px solid #E5E7EB',\n                    borderRadius: '6px',\n                    fontSize: '14px'\n                  }}\n                />\n                <select\n                  value={newTaskAssignee}\n                  onChange={(e) => setNewTaskAssignee(e.target.value)}\n                  style={{\n                    padding: '8px 12px',\n                    border: '1px solid #E5E7EB',\n                    borderRadius: '6px',\n                    fontSize: '14px',\n                    backgroundColor: 'white',\n                    cursor: 'pointer'\n                  }}\n                >\n                  <option value=\"\">Unassigned</option>\n                  {workers.map(worker => (\n                    <option key={worker} value={worker}>{worker}</option>\n                  ))}\n                </select>\n                <button\n                  type=\"submit\"\n                  style={{\n                    padding: '8px 16px',\n                    backgroundColor: '#3B82F6',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '6px',\n                    cursor: 'pointer',\n                    fontSize: '14px'\n                  }}\n                >\n                  Add\n                </button>\n              </div>\n            </form>\n\n            {/* Task List */}\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n              {tasks.map(task => (\n                <div \n                  key={task.id}\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px',\n                    padding: '8px',\n                    backgroundColor: task.completed ? '#F3F4F6' : 'transparent',\n                    borderRadius: '6px',\n                    flexWrap: 'wrap'\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={task.completed}\n                    onChange={() => handleTaskToggle(task.id)}\n                    style={{ cursor: 'pointer' }}\n                  />\n                  <span style={{\n                    flex: '1 1 auto',\n                    fontSize: '14px',\n                    textDecoration: task.completed ? 'line-through' : 'none',\n                    color: task.completed ? '#9CA3AF' : '#374151',\n                    minWidth: '150px'\n                  }}>\n                    {task.text}\n                  </span>\n                  <select\n                    value={task.assignedTo || ''}\n                    onChange={(e) => handleAssignTask(task.id, e.target.value || null)}\n                    style={{\n                      padding: '4px 8px',\n                      border: '1px solid #E5E7EB',\n                      borderRadius: '4px',\n                      fontSize: '12px',\n                      backgroundColor: task.assignedTo ? '#E0E7FF' : 'white',\n                      color: task.assignedTo ? '#3730A3' : '#6B7280',\n                      cursor: 'pointer'\n                    }}\n                  >\n                    <option value=\"\">Unassigned</option>\n                    {workers.map(worker => (\n                      <option key={worker} value={worker}>{worker}</option>\n                    ))}\n                  </select>\n                  <button\n                    onClick={() => handleDeleteTask(task.id)}\n                    style={{\n                      padding: '4px 8px',\n                      backgroundColor: '#FEE2E2',\n                      color: '#DC2626',\n                      border: 'none',\n                      borderRadius: '4px',\n                      cursor: 'pointer',\n                      fontSize: '12px'\n                    }}\n                  >\n                    Delete\n                  </button>\n                </div>\n              ))}\n            </div>\n            {tasks.length === 0 && (\n              <p style={{ textAlign: 'center', color: '#6B7280' }}>\n                No tasks yet. Add one above.\n              </p>\n            )}\n          </div>\n        )}\n\n        {/* Materials Tab */}\n        {activeTab === 'materials' && (\n          <div>\n            <div style={{ \n              display: 'flex', \n              justifyContent: 'space-between', \n              alignItems: 'center',\n              marginBottom: '16px'\n            }}>\n              <h2 style={{ margin: 0, fontSize: '18px', fontWeight: '600' }}>\n                Materials List\n              </h2>\n              <button\n                onClick={() => setShowAddMaterial(!showAddMaterial)}\n                style={{\n                  padding: '8px 16px',\n                  backgroundColor: '#3B82F6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px'\n                }}\n              >\n                + Add Material\n              </button>\n            </div>\n\n            {/* Add Material Form */}\n            {showAddMaterial && (\n              <form onSubmit={handleAddMaterial} style={{\n                backgroundColor: '#F9FAFB',\n                padding: '16px',\n                borderRadius: '8px',\n                marginBottom: '16px'\n              }}>\n                <div style={{ display: 'grid', gridTemplateColumns: '2fr 1fr 1fr 1fr 1fr', gap: '12px', alignItems: 'end' }}>\n                  <div>\n                    <label style={{ display: 'block', fontSize: '12px', fontWeight: '500', marginBottom: '4px', color: '#374151' }}>\n                      Material Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newMaterial.name}\n                      onChange={(e) => setNewMaterial({ ...newMaterial, name: e.target.value })}\n                      placeholder=\"e.g., 2x4 Lumber\"\n                      style={{\n                        width: '100%',\n                        padding: '8px',\n                        border: '1px solid #E5E7EB',\n                        borderRadius: '4px',\n                        fontSize: '14px'\n                      }}\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label style={{ display: 'block', fontSize: '12px', fontWeight: '500', marginBottom: '4px', color: '#374151' }}>\n                      Quantity\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={newMaterial.quantity}\n                      onChange={(e) => setNewMaterial({ ...newMaterial, quantity: e.target.value })}\n                      placeholder=\"0\"\n                      style={{\n                        width: '100%',\n                        padding: '8px',\n                        border: '1px solid #E5E7EB',\n                        borderRadius: '4px',\n                        fontSize: '14px'\n                      }}\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label style={{ display: 'block', fontSize: '12px', fontWeight: '500', marginBottom: '4px', color: '#374151' }}>\n                      Unit\n                    </label>\n                    <select\n                      value={newMaterial.unit}\n                      onChange={(e) => setNewMaterial({ ...newMaterial, unit: e.target.value })}\n                      style={{\n                        width: '100%',\n                        padding: '8px',\n                        border: '1px solid #E5E7EB',\n                        borderRadius: '4px',\n                        fontSize: '14px'\n                      }}\n                    >\n                      <option value=\"pieces\">pieces</option>\n                      <option value=\"sheets\">sheets</option>\n                      <option value=\"linear ft\">linear ft</option>\n                      <option value=\"sq ft\">sq ft</option>\n                      <option value=\"gallons\">gallons</option>\n                      <option value=\"bags\">bags</option>\n                      <option value=\"boxes\">boxes</option>\n                      <option value=\"rolls\">rolls</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label style={{ display: 'block', fontSize: '12px', fontWeight: '500', marginBottom: '4px', color: '#374151' }}>\n                      Store\n                    </label>\n                    <select\n                      value={newMaterial.store}\n                      onChange={(e) => setNewMaterial({ ...newMaterial, store: e.target.value })}\n                      style={{\n                        width: '100%',\n                        padding: '8px',\n                        border: '1px solid #E5E7EB',\n                        borderRadius: '4px',\n                        fontSize: '14px'\n                      }}\n                    >\n                      <option value=\"Home Depot\">Home Depot</option>\n                      <option value=\"Lowes\">Lowes</option>\n                      <option value=\"Menards\">Menards</option>\n                      <option value=\"Local Hardware\">Local Hardware</option>\n                      <option value=\"Online\">Online</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label style={{ display: 'block', fontSize: '12px', fontWeight: '500', marginBottom: '4px', color: '#374151' }}>\n                      Price per Unit\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={newMaterial.price}\n                      onChange={(e) => setNewMaterial({ ...newMaterial, price: e.target.value })}\n                      placeholder=\"0.00\"\n                      style={{\n                        width: '100%',\n                        padding: '8px',\n                        border: '1px solid #E5E7EB',\n                        borderRadius: '4px',\n                        fontSize: '14px'\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n                <div style={{ marginTop: '12px', display: 'flex', gap: '8px' }}>\n                  <button\n                    type=\"submit\"\n                    style={{\n                      padding: '8px 16px',\n                      backgroundColor: '#10B981',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '4px',\n                      cursor: 'pointer',\n                      fontSize: '14px'\n                    }}\n                  >\n                    Add Material\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowAddMaterial(false);\n                      setNewMaterial({\n                        name: '',\n                        quantity: '',\n                        unit: 'pieces',\n                        store: 'Home Depot',\n                        price: ''\n                      });\n                    }}\n                    style={{\n                      padding: '8px 16px',\n                      backgroundColor: '#E5E7EB',\n                      color: '#374151',\n                      border: 'none',\n                      borderRadius: '4px',\n                      cursor: 'pointer',\n                      fontSize: '14px'\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            )}\n\n            {/* Materials Table */}\n            {materials.length > 0 ? (\n              <div style={{ overflowX: 'auto' }}>\n                <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                  <thead>\n                    <tr style={{ borderBottom: '2px solid #E5E7EB' }}>\n                      <th style={{ padding: '12px', textAlign: 'left', fontSize: '12px', fontWeight: '600', color: '#374151' }}>\n                        Material\n                      </th>\n                      <th style={{ padding: '12px', textAlign: 'center', fontSize: '12px', fontWeight: '600', color: '#374151' }}>\n                        Quantity\n                      </th>\n                      <th style={{ padding: '12px', textAlign: 'center', fontSize: '12px', fontWeight: '600', color: '#374151' }}>\n                        Unit\n                      </th>\n                      <th style={{ padding: '12px', textAlign: 'center', fontSize: '12px', fontWeight: '600', color: '#374151' }}>\n                        Store\n                      </th>\n                      <th style={{ padding: '12px', textAlign: 'right', fontSize: '12px', fontWeight: '600', color: '#374151' }}>\n                        Price/Unit\n                      </th>\n                      <th style={{ padding: '12px', textAlign: 'right', fontSize: '12px', fontWeight: '600', color: '#374151' }}>\n                        Total\n                      </th>\n                      <th style={{ padding: '12px', textAlign: 'center', fontSize: '12px', fontWeight: '600', color: '#374151' }}>\n                        Actions\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {materials.map((material) => (\n                      <tr key={material.id} style={{ borderBottom: '1px solid #E5E7EB' }}>\n                        <td style={{ padding: '12px', fontSize: '14px', color: '#111827' }}>\n                          {material.name}\n                        </td>\n                        <td style={{ padding: '12px', textAlign: 'center', fontSize: '14px', color: '#374151' }}>\n                          {material.quantity}\n                        </td>\n                        <td style={{ padding: '12px', textAlign: 'center', fontSize: '14px', color: '#374151' }}>\n                          {material.unit}\n                        </td>\n                        <td style={{ padding: '12px', textAlign: 'center', fontSize: '14px' }}>\n                          <span style={{\n                            padding: '4px 8px',\n                            backgroundColor: material.store === 'Home Depot' ? '#FEF3C7' : material.store === 'Lowes' ? '#DBEAFE' : '#E5E7EB',\n                            color: material.store === 'Home Depot' ? '#92400E' : material.store === 'Lowes' ? '#1E3A8A' : '#374151',\n                            borderRadius: '4px',\n                            fontSize: '12px',\n                            fontWeight: '500'\n                          }}>\n                            {material.store}\n                          </span>\n                        </td>\n                        <td style={{ padding: '12px', textAlign: 'right', fontSize: '14px', color: '#374151' }}>\n                          ${material.price.toFixed(2)}\n                        </td>\n                        <td style={{ padding: '12px', textAlign: 'right', fontSize: '14px', fontWeight: '600', color: '#111827' }}>\n                          ${material.total.toFixed(2)}\n                        </td>\n                        <td style={{ padding: '12px', textAlign: 'center' }}>\n                          <button\n                            onClick={() => handleDeleteMaterial(material.id)}\n                            style={{\n                              padding: '4px 8px',\n                              backgroundColor: '#FEE2E2',\n                              color: '#DC2626',\n                              border: 'none',\n                              borderRadius: '4px',\n                              cursor: 'pointer',\n                              fontSize: '12px'\n                            }}\n                          >\n                            Delete\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                  <tfoot>\n                    <tr>\n                      <td colSpan=\"5\" style={{\n                        padding: '12px',\n                        textAlign: 'right',\n                        fontSize: '16px',\n                        fontWeight: '600',\n                        color: '#111827'\n                      }}>\n                        Total Materials Cost:\n                      </td>\n                      <td style={{\n                        padding: '12px',\n                        textAlign: 'right',\n                        fontSize: '16px',\n                        fontWeight: '700',\n                        color: '#059669'\n                      }}>\n                        ${getTotalMaterialsCost().toFixed(2)}\n                      </td>\n                      <td></td>\n                    </tr>\n                  </tfoot>\n                </table>\n              </div>\n            ) : (\n              <div style={{\n                textAlign: 'center',\n                padding: '40px',\n                backgroundColor: '#F9FAFB',\n                borderRadius: '8px',\n                color: '#6B7280'\n              }}>\n                <p style={{ margin: '0 0 8px 0', fontSize: '16px' }}>No materials added yet</p>\n                <p style={{ margin: 0, fontSize: '14px' }}>Click \"Add Material\" to start tracking materials for this job</p>\n              </div>\n            )}\n\n            {/* Store Summary */}\n            {materials.length > 0 && (\n              <div style={{ marginTop: '24px' }}>\n                <h3 style={{ fontSize: '16px', fontWeight: '600', marginBottom: '12px' }}>Store Summary</h3>\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '12px' }}>\n                  {Object.entries(materials.reduce((acc, material) => {\n                    if (!acc[material.store]) {\n                      acc[material.store] = { count: 0, total: 0 };\n                    }\n                    acc[material.store].count += 1;\n                    acc[material.store].total += material.total;\n                    return acc;\n                  }, {})).map(([store, data]) => (\n                    <div key={store} style={{\n                      padding: '12px',\n                      backgroundColor: '#F9FAFB',\n                      borderRadius: '6px',\n                      border: '1px solid #E5E7EB'\n                    }}>\n                      <div style={{ fontSize: '14px', fontWeight: '600', color: '#111827', marginBottom: '4px' }}>\n                        {store}\n                      </div>\n                      <div style={{ fontSize: '12px', color: '#6B7280' }}>\n                        {data.count} item{data.count !== 1 ? 's' : ''} ‚Ä¢ ${data.total.toFixed(2)}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Special Notes Tab */}\n        {activeTab === 'notes' && (\n          <div>\n            <div style={{ \n              display: 'flex', \n              justifyContent: 'space-between', \n              alignItems: 'center',\n              marginBottom: '16px'\n            }}>\n              <h2 style={{ margin: 0, fontSize: '18px', fontWeight: '600' }}>Special Notes</h2>\n              <button\n                onClick={() => {\n                  if (editingNotes) {\n                    // Save notes logic here\n                  }\n                  setEditingNotes(!editingNotes);\n                }}\n                style={{\n                  padding: '8px 16px',\n                  backgroundColor: editingNotes ? '#10B981' : '#3B82F6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px'\n                }}\n              >\n                {editingNotes ? 'Save' : 'Edit'}\n              </button>\n            </div>\n            {editingNotes ? (\n              <textarea\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                style={{\n                  width: '100%',\n                  minHeight: '150px',\n                  padding: '12px',\n                  border: '1px solid #E5E7EB',\n                  borderRadius: '6px',\n                  fontSize: '14px',\n                  resize: 'vertical'\n                }}\n              />\n            ) : (\n              <p style={{ \n                margin: 0,\n                fontSize: '14px',\n                lineHeight: '1.6',\n                color: '#374151',\n                whiteSpace: 'pre-wrap'\n              }}>\n                {notes || 'No special notes for this job.'}\n              </p>\n            )}\n          </div>\n        )}\n\n        {/* Extra Work Tab */}\n        {activeTab === 'extraWork' && (\n          <div>\n            <div style={{ \n              display: 'flex', \n              justifyContent: 'space-between', \n              alignItems: 'center',\n              marginBottom: '16px'\n            }}>\n              <h2 style={{ margin: 0, fontSize: '18px', fontWeight: '600' }}>\n                Extra Work Items\n                <span style={{ \n                  marginLeft: '12px', \n                  fontSize: '16px', \n                  color: '#6B7280' \n                }}>\n                  Total: ${getTotalExtraWorkCost().toLocaleString()} \n                  {getApprovedExtraWorkCost() > 0 && ` (Approved: $${getApprovedExtraWorkCost().toLocaleString()})`}\n                </span>\n              </h2>\n              <button\n                onClick={() => setShowAddExtraWork(true)}\n                style={{\n                  padding: '8px 16px',\n                  backgroundColor: '#3B82F6',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px'\n                }}\n              >\n                + Add Extra Work\n              </button>\n            </div>\n\n            {/* Add Extra Work Form */}\n            {showAddExtraWork && (\n              <form onSubmit={handleAddExtraWork} style={{\n                backgroundColor: '#F9FAFB',\n                padding: '16px',\n                borderRadius: '8px',\n                marginBottom: '16px'\n              }}>\n                <div style={{ marginBottom: '12px' }}>\n                  <label style={{ display: 'block', marginBottom: '4px', fontSize: '14px', fontWeight: '500' }}>\n                    Description\n                  </label>\n                  <textarea\n                    value={newExtraWork.description}\n                    onChange={(e) => setNewExtraWork({ ...newExtraWork, description: e.target.value })}\n                    required\n                    style={{\n                      width: '100%',\n                      minHeight: '80px',\n                      padding: '8px',\n                      border: '1px solid #E5E7EB',\n                      borderRadius: '6px',\n                      fontSize: '14px',\n                      resize: 'vertical'\n                    }}\n                    placeholder=\"Describe the extra work needed...\"\n                  />\n                </div>\n\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '12px' }}>\n                  <div>\n                    <label style={{ display: 'block', marginBottom: '4px', fontSize: '14px', fontWeight: '500' }}>\n                      Cost\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={newExtraWork.cost}\n                      onChange={(e) => setNewExtraWork({ ...newExtraWork, cost: e.target.value })}\n                      required\n                      min=\"0\"\n                      step=\"0.01\"\n                      style={{\n                        width: '100%',\n                        padding: '8px',\n                        border: '1px solid #E5E7EB',\n                        borderRadius: '6px',\n                        fontSize: '14px'\n                      }}\n                      placeholder=\"0.00\"\n                    />\n                  </div>\n\n                  <div>\n                    <label style={{ display: 'block', marginBottom: '4px', fontSize: '14px', fontWeight: '500' }}>\n                      Status\n                    </label>\n                    <select\n                      value={newExtraWork.status}\n                      onChange={(e) => setNewExtraWork({ ...newExtraWork, status: e.target.value })}\n                      style={{\n                        width: '100%',\n                        padding: '8px',\n                        border: '1px solid #E5E7EB',\n                        borderRadius: '6px',\n                        fontSize: '14px'\n                      }}\n                    >\n                      <option value=\"pending\">Pending</option>\n                      <option value=\"approved\">Approved</option>\n                      <option value=\"completed\">Completed</option>\n                      <option value=\"rejected\">Rejected</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div style={{ display: 'flex', gap: '8px', marginTop: '12px' }}>\n                  <button\n                    type=\"submit\"\n                    style={{\n                      padding: '8px 16px',\n                      backgroundColor: '#10B981',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '6px',\n                      cursor: 'pointer',\n                      fontSize: '14px'\n                    }}\n                  >\n                    Add Extra Work\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowAddExtraWork(false);\n                      setNewExtraWork({\n                        description: '',\n                        cost: '',\n                        status: 'pending',\n                        dateAdded: new Date().toISOString()\n                      });\n                    }}\n                    style={{\n                      padding: '8px 16px',\n                      backgroundColor: '#E5E7EB',\n                      color: '#374151',\n                      border: 'none',\n                      borderRadius: '6px',\n                      cursor: 'pointer',\n                      fontSize: '14px'\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            )}\n\n            {/* Extra Work Items List */}\n            {extraWorkItems.length === 0 ? (\n              <p style={{ textAlign: 'center', color: '#6B7280', fontSize: '14px', marginTop: '40px' }}>\n                No extra work items yet.\n              </p>\n            ) : (\n              <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n                {extraWorkItems.map(item => (\n                  <div\n                    key={item.id}\n                    style={{\n                      backgroundColor: item.approved ? '#F0FDF4' : 'white',\n                      border: item.approved ? '1px solid #86EFAC' : '1px solid #E5E7EB',\n                      borderRadius: '8px',\n                      padding: '16px'\n                    }}\n                  >\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start' }}>\n                      <div style={{ flex: 1 }}>\n                        <p style={{ \n                          margin: '0 0 8px 0', \n                          fontSize: '14px', \n                          fontWeight: '500',\n                          whiteSpace: 'pre-wrap'\n                        }}>\n                          {item.description}\n                        </p>\n                        <div style={{ display: 'flex', gap: '16px', fontSize: '13px', color: '#6B7280' }}>\n                          <span>Added: {new Date(item.dateAdded).toLocaleDateString()}</span>\n                          <span style={{\n                            padding: '2px 8px',\n                            backgroundColor: item.status === 'approved' ? '#D1FAE5' : \n                                           item.status === 'completed' ? '#DBEAFE' :\n                                           item.status === 'rejected' ? '#FEE2E2' : '#F3F4F6',\n                            color: item.status === 'approved' ? '#065F46' : \n                                   item.status === 'completed' ? '#1E40AF' :\n                                   item.status === 'rejected' ? '#991B1B' : '#374151',\n                            borderRadius: '12px',\n                            fontSize: '12px'\n                          }}>\n                            {item.status}\n                          </span>\n                        </div>\n                      </div>\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n                        <span style={{ \n                          fontSize: '18px', \n                          fontWeight: '600',\n                          color: item.approved ? '#059669' : '#111827'\n                        }}>\n                          ${item.cost.toLocaleString()}\n                        </span>\n                        <div style={{ display: 'flex', gap: '8px' }}>\n                          <button\n                            onClick={() => handleApproveExtraWork(item.id)}\n                            style={{\n                              padding: '6px 12px',\n                              backgroundColor: item.approved ? '#FEE2E2' : '#D1FAE5',\n                              color: item.approved ? '#991B1B' : '#065F46',\n                              border: 'none',\n                              borderRadius: '6px',\n                              cursor: 'pointer',\n                              fontSize: '13px'\n                            }}\n                          >\n                            {item.approved ? 'Unapprove' : 'Approve'}\n                          </button>\n                          <button\n                            onClick={() => handleDeleteExtraWork(item.id)}\n                            style={{\n                              padding: '6px',\n                              backgroundColor: '#FEE2E2',\n                              color: '#991B1B',\n                              border: 'none',\n                              borderRadius: '6px',\n                              cursor: 'pointer'\n                            }}\n                          >\n                            üóëÔ∏è\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default JobDetailTabbed;"],"names":["JobDetailTabbed","id","useParams","navigate","useNavigate","activeTab","setActiveTab","useState","job","setJob","useEffect","foundJob","j","setTasks","setNotes","savedMaterials","setMaterials","savedExtraWork","setExtraWorkItems","tasks","newTask","setNewTask","newTaskAssignee","setNewTaskAssignee","editingNotes","setEditingNotes","notes","materials","showAddMaterial","setShowAddMaterial","newMaterial","setNewMaterial","workers","extraWorkItems","showAddExtraWork","setShowAddExtraWork","newExtraWork","setNewExtraWork","tabs","_a","handleTaskToggle","taskId","task","handleAddTask","e","handleAssignTask","worker","handleDeleteTask","handleAddMaterial","quantity","price","total","handleDeleteMaterial","materialId","material","getTotalMaterialsCost","sum","handleAddExtraWork","cost","handleDeleteExtraWork","itemId","item","handleApproveExtraWork","getTotalExtraWorkCost","getApprovedExtraWorkCost","getStatusColor","status","jsxs","jsx","tab","pic","plan","acc","store","data"],"mappings":"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"}